---
title: "Literate Programming"
editor: source
engine: knitr
execute:
  eval: false
  warning: false
  message: false
code-annotations: hover
categories: [intermediate]
abstract: |
  In this chapter you will learn how you can automatically integrate your reproducible results into a paper.
  You will learn how to write a paper in with Quarto and how to format it for a required output.
  You will learn how to use extension, specifically the apaquarto extension to write reproducible paper in APA-style.
---

::: {.callout-tip appearance="minimal"}
<h5>Learning Objectives</h5>

:bulb: Learn the basics about the markdown syntax.<br>
:bulb: Work on a new branch in your Git repository.<br>
:bulb: Create a new report file using Quarto.<br>
:bulb: Learn more advanced syntax: include a reference.bib file<br>
:bulb: Learn more advanced syntax: the YAML header<br>
:bulb: Learn more advanced syntax: add a quarto apa extension to the file (see wjschne/apaquarto)<br>
:bulb: Rewrite the report in quarto
:::

## What is literate programming?

Literate programming is a form of programming in which text and source code are in one document.
It is based on the idea that a code should be easy and enjoyable to read and aimed at being understood by humans, which was called *Literate Programming* by Donald Knuth (1984).
Instead of writing code and later annotating it with comments, literate programming suggests to write a text in the order that a person would logically conceive it and include the code as it is explained in the text.
A well-known example are Jupyter Notebooks where normal text is interwoven with code-chunks that are executable within the text.  
Literate programming allows for creating **reproducible documents** instead of just reproducible script as well as making for a smoother workflow, as there is no need for switching out old and new outputs in your documents when the code changed.
As an example, when you write an article in a document using literate programming and insert a code chunk that creates a plot, this code chunk's output -the plot- is part of your document and is always up to date with the script you're running.

## What is Quarto?

Quarto is an open-source  **Publishing System**.
It allows you to do literate programming.
It was created by the company Posit, which is responsible for RStudio.
Quarto is integrated in RStudio, so no extra installation needed.

![This illustration shows schematically that one can have input in different languages and Quarto will produce different output formats. Artwork from "Hello, Quarto" keynote by Julia Lowndes and Mine Ã‡etinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst. Used under a [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0) license.](../static/horst-quarto-schematic.jpg)

Quarto can be useful for creating websites, presentations, articles or books.
Looking back at the article-plot example, Quarto will render the code chunk that is part of your document that creates the plot when creating an output like a pdf file and insert it automatically.

See the example of a Quarto document that contains human-readable text and a code chunk that will create a plot, as well as it's rendered version below.

![On the left is a Quarto document in RStudio, containing a code chunk that creates a simple plot. On the right is the rendered version of the document, showing the text and the plot. Used under a [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0) license.](../static/quarto-example-document-plot.jpg)

## How to use Quarto

- <https://quarto.org/>
- <https://lennartwittkuhn.com/training/2023-12-01-training-quarto-uhh.html>