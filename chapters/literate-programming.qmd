---
title: "Literate Programming"
editor: source
engine: knitr
execute:
  eval: false
  warning: false
  message: false
code-annotations: hover
categories: [intermediate]
abstract: |
  In this chapter you will learn how you can automatically integrate your reproducible results into a paper.
  You will learn how to write a paper in with Quarto and how to format it for a required output.
  You will learn how to use extension, specifically the apaquarto extension to write reproducible paper in APA-style.
---

::: {.callout-tip appearance="minimal"}
<h5>Learning Objectives</h5>

:bulb: Learn the basics about the markdown syntax.<br>
:bulb: Work on a new branch in your Git repository.<br>
:bulb: Create a new report file using Quarto.<br>
:bulb: Learn more advanced syntax: include a reference.bib file<br>
:bulb: Learn more advanced syntax: the YAML header<br>
:bulb: Learn more advanced syntax: add a quarto apa extension to the file (see wjschne/apaquarto)<br>
:bulb: Rewrite the report in quarto
:::

## What is literate programming?

Literate programming is a form of programming in which text and source code are in one document.
It is based on the idea that a code should be easy and enjoyable to read and aimed at being understood by humans, which was called *Literate Programming* by Donald Knuth (1984).
Instead of writing code and later annotating it with comments, literate programming suggests to write a text in the order that a person would logically conceive it and include the code as it is explained in the text.
A well-known example are Jupyter Notebooks where normal text is interwoven with code-chunks that are executable within the text.  
Literate programming allows for creating **reproducible documents** instead of just reproducible script as well as making for a smoother workflow, as there is no need for switching out old and new outputs in your documents when the code changed.
As an example, when you write an article in a document using literate programming and insert a code chunk that creates a plot, this code chunk's output -the plot- is part of your document and is always up to date with the script you're running.

## What is Quarto?

Quarto is an open-source **Publishing System**.
It allows you to do literate programming.
It was created by the company Posit, which is responsible for RStudio and is based on RMarkdown.
Quarto is well integrated in RStudio and comes already bundled with any version of RStudio from RStudio v2022.07.1 "Spotted Wakerobin" onward (https://docs.posit.co/ide/user/ide/guide/documents/quarto-project.html#installing-quarto).
It is able to execute several different programming languages like Python and R.

![This illustration shows schematically that one can have input in different languages and Quarto will produce different output formats. Artwork from "Hello, Quarto" keynote by Julia Lowndes and Mine Ã‡etinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst. Used under a [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0) license.](../static/horst-quarto-schematic.jpg)

Quarto can be useful for creating websites, presentations, articles or books.
Looking back at the article-plot example, Quarto will render the code chunk that is part of your document that creates the plot when creating an output like a pdf file and insert it automatically.

See the example of a Quarto document that contains human-readable text and a code chunk that will create a plot, as well as it's rendered version below.

![On the left is a Quarto document in RStudio, containing a code chunk that creates a simple plot. On the right is the rendered version of the document, showing the text and the plot. Used under a [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0) license.](../static/quarto-example-document-plot.jpg)

## How to use Quarto

In this book, we will focus on using Quarto in RStudio, but Quarto can also be used with other editors such as VSCode or Jupyter.
To start using Quarto and create Quarto documents, head to RStudio and in the upper left corner select **File \> New File \> Quarto Document...**.
This will open a box that prompts you to give your document a title, which will appear at the top of your document's rendered version, as well as choosing the format that your output will be in.
Either HTML, PDF or Word are possible by default.
The standard output is HTML and for PDF or Word, LaTeX or MS Word are required.
HTML files can also easily be turned into PDF files later on and the format is changeable. 
Depending on your project, there are other available format options as well.
The metadata of title and format is stored in the so called **YAML header** at the top of your page.
This is also where you can further customize some general features of your file, such as the author, a subtitle, the date or the style of your document. 

<!--Insert pullout box about what info can be put into the YAML -->

To get a preview of a Quarto file in RStudio, you can either use `quarto preview` in the command line or the **Render** button at the top of your document.
This will show you how your rendered document will look like and if you check the **Render on Save** box at the top of the document, will update live as you save your changes.

## Markdown

In Quarto documents, **Markdown** is used as a syntax.
In Markdown content and formatting are integrated with each other and not separate.
This formatting is used in Quarto or on GitHub or on a smaller scale in WhatsApp or Reddit.  
There are some advantage over more commonly known way of formatting in e.g., MS Word.
Using an integrated approach to formatting and writing allows for faster writing, as there is no need to switch between the two.
You just format as you type.
Another advantage is compatibility between different text editors.
Any program that uses Markdown will format a document written in it the exact same way. 
Another advantage is that Git can track the changes made to text written with Markdown, allowing for version control of your written work the same way as of your code.  
Disadvantages are that there are overall less formatting options as the intention is keep it simple and it can be difficult or unintuitive to insert tables and images.  

Formatting can be done using either the `Source` or `Visual` mode in RStudio.
In the `Source` mode you use Markdown syntax to format your written work and in the `Visual` mode you use a User-Interface similar to how you would use in e.g., MS Word.
Switch between the two at any time.
The changes made in the `Visual`mode will appear in the `Source` mode in Markdown as well.
Take a look at the two different modes and the rendered version of the document below with some simple formatting options.

![On the left is the Source mode of the .qmd file and on the right the Visual formatting mode. Used under a [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0) license.](../static/quarto-visual-source-mode.jpg)

Now, take a look at the rendered version of the document and how each of the formatting options plays out.

![A screenshot of the rendered version of a document to showcase some formatting options. Used under a [CC-BY 4.0](https://creativecommons.org/licenses/by/4.0) license.](../static/quarto-rendered-formatting.jpg)

Have a look at the different formatting options available.

::: panel-tabset
# Text formatting:

| Input                          | Output                        |
|--------------------------------|-------------------------------|
| `*italics* and **bold**`       | *italics* and **bold**        |
| `superscript^2 / subscript~2~` | superscript^2^ / subscript~2~ |
| `~~strikethrough~~`            | ~~strikethrough~~             |
| `` `verbatim code` ``          | `verbatim code`               |

::: footer
Sources: [RStudio - Markdown basics](https://quarto.org/docs/authoring/markdown-basics.html), [Dr. Monwinckel - Quartaki - 6 hour introduction to Quarto](https://drmowinckels.github.io/quartaki/) and [Introduction to Quarto - Wittkuhn and Pagenstedt](https://lennartwittkuhn.com/training/2023-12-01-training-quarto-uhh.html)
:::

# Headings:

<table>
<thead>
<tr class="header">
<th><p>Input</p></th>
<th><p>Output</p></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><p><code># Header 1</code></p></td>
<td><h1>Header 1</h1></td>
</tr>
<tr class="even">
<td><p><code>## Header 2</code></p></td>
<td><h2>Header 2</h2></td>
</tr>
<tr class="odd">
<td><p><code>### Header 3</code></p></td>
<td><h3>Header 3</h3></td>
</tr>
<tr class="even">
<td><p><code>#### Header 4</code></p></td>
<td><h4>Header 4</h4></td>
</tr>
<tr class="odd">
<td><p><code>##### Header 5</code></p></td>
<td><h5>Header 5</h5></td>
</tr>
<tr class="even">
<td><p><code>###### Header 6</code></p></td>
<td><h6>Header 6</h6></td>
</tr>
</tbody>
</table>

::: footer
Sources: [RStudio - Markdown basics](https://quarto.org/docs/authoring/markdown-basics.html), [Dr. Monwinckel - Quartaki - 6 hour introduction to Quarto](https://drmowinckels.github.io/quartaki/) and [Introduction to Quarto - Wittkuhn and Pagenstedt](https://lennartwittkuhn.com/training/2023-12-01-training-quarto-uhh.html)
:::

# Lists:

**Input**

``` {markdown}
#| code-copy: false
*Unordered list*

* unordered list
        + sub-item 1
        + sub-item 2

*Ordered list: Standard numbering*
  
1. ordered list
2. item 2
  1. sub-item 1

*Ordered list: All 1:*

1. ordered list
1. item 2
1. item 3
1. item 4

*Tasklist*

- [ ] Task 1
- [ ] Task 2

```

**Output**

* unordered list
  + sub-item 1
  + sub-item 2

*Ordered list: Standard numbering*  

1. ordered list  
2. item 2  
   1. sub-item 1  

*Ordered list: All 1:*  

1. ordered list  
1. item 2  
1. item 3  
1. item 4

*Tasklist*

- [ ] Task 1
- [ ] Task 2

:bulb: The tasklist can be ticked off.

::: footer
Sources: [RStudio - Markdown basics](https://quarto.org/docs/authoring/markdown-basics.html), [Dr. Monwinckel - Quartaki - 6 hour introduction to Quarto](https://drmowinckels.github.io/quartaki/) and [Introduction to Quarto - Wittkuhn and Pagenstedt](https://lennartwittkuhn.com/training/2023-12-01-training-quarto-uhh.html)
:::

# Tables:

**Input**

```{markdown}
| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|   12  |  12  |    12   |    12  |
|  123  |  123 |   123   |   123  |
|    1  |    1 |     1   |     1  |
```

**Output**

| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|   12  |  12  |    12   |    12  |
|  123  |  123 |   123   |   123  |
|    1  |    1 |     1   |     1  |

:bulb: Tip: Use a [Markdown table generator](https://www.tablesgenerator.com/markdown_tables) or the visual mode in RStudio to generate tables.

::: footer
Sources: [RStudio - Markdown basics](https://quarto.org/docs/authoring/markdown-basics.html), [Dr. Monwinckel - Quartaki - 6 hour introduction to Quarto](https://drmowinckels.github.io/quartaki/) and [Introduction to Quarto - Wittkuhn and Pagenstedt](https://lennartwittkuhn.com/training/2023-12-01-training-quarto-uhh.html)
:::

# Equations:

| Input                       | Output                    |
|-----------------------------|---------------------------|
| `inline math: $E = mc^{2}$` | inline math: $E = mc^{2}$ |
| `$$E = mc^{2}$$`            | $$E = mc^{2}$$            |

::: footer
Sources: [RStudio - Markdown basics](https://quarto.org/docs/authoring/markdown-basics.html), [Dr. Monwinckel - Quartaki - 6 hour introduction to Quarto](https://drmowinckels.github.io/quartaki/) and [Introduction to Quarto - Wittkuhn and Pagenstedt](https://lennartwittkuhn.com/training/2023-12-01-training-quarto-uhh.html)
:::

# Blockquotes:

**Input**

`> Blockquote`

**Output**

> Blockquote

::: footer
Sources: [RStudio - Markdown basics](https://quarto.org/docs/authoring/markdown-basics.html), [Dr. Monwinckel - Quartaki - 6 hour introduction to Quarto](https://drmowinckels.github.io/quartaki/) and [Introduction to Quarto - Wittkuhn and Pagenstedt](https://lennartwittkuhn.com/training/2023-12-01-training-quarto-uhh.html)
:::

# Links & Images:

| Input | Output |
|----------------------------------|--------------------------------------|
| `<https://quarto.org/>` | <https://quarto.org/> |
| `[Quarto](https://quarto.org/)` | [Quarto](https://quarto.org/) |
| `![Caption](https://quarto.org/quarto.png)` | ![Caption](https://quarto.org/quarto.png) |
| `[![Caption](https://quarto.org/quarto.png)](https://quarto.org)` | [![Caption](https://quarto.org/quarto.png)](https://quarto.org) |

::: footer
Sources: [RStudio - Markdown basics](https://quarto.org/docs/authoring/markdown-basics.html), [Dr. Monwinckel - Quartaki - 6 hour introduction to Quarto](https://drmowinckels.github.io/quartaki/) and [Introduction to Quarto - Wittkuhn and Pagenstedt](https://lennartwittkuhn.com/training/2023-12-01-training-quarto-uhh.html)
:::

:::

### Resources

-   <https://quarto.org/>
-   <https://lennartwittkuhn.com/training/2023-12-01-training-quarto-uhh.html>
