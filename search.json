[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The Repro Book",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "contents.html",
    "href": "contents.html",
    "title": "Contents",
    "section": "",
    "text": "The estimate of the reading time for each chapter is computed by counting the words in the chapter and assuming a reading speed of 200 words per minute.\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Modified - Oldest\n        \n         \n          Modified - Newest\n        \n         \n          Reading Time (Low to High)\n        \n         \n          Reading Time (High to Low)\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nIntroduction\n\n\n\n\n\n\nbeginner\n\n\nbasics\n\n\n\nIn this chapter, you get to know the concept of reproducibility, different types of reproducibility and related but somewhat different concepts. \n\n\n\n\n\n9 min\n\n\nMarch 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nNaming things\n\n\n\n\n\n\nbeginner\n\n\nbasics\n\n\n\nIn this chapter you will learn how to name things. \n\n\n\n\n\n13 min\n\n\nMarch 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nProject Structure\n\n\n\n\n\nIn this chapter, you will explore various types of project structures. You will learn what elements are essential for a project structure and what key factors to consider. Additionally, you will gain insight into how to create a project structure for your own work and understand what should be included in a published reproducibility archive. \n\n\n\n\n\n20 min\n\n\nMarch 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nResearch Data Management\n\n\n\n\n\n\nintermediate\n\n\n\nIn this chapter you will learn the basics of research data management. \n\n\n\n\n\n22 min\n\n\nMarch 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nGood Coding Practices\n\n\n\n\n\nIn the last chapters, you have learned how to name your names and variables and how to set up an organized project structure. In this chapter, you will learn good coding practices to help other researchers and your future self with the code you used for your analysis. \n\n\n\n\n\n21 min\n\n\nMarch 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nRobust Environments: {renv}\n\n\n\n\n\n\nintermediate\n\n\n\nIn this chapter you will learn how your reproducible research project becomes robust against different package versions. You will make it easy for you to and collaborators to use the same package versions in your joint project. \n\n\n\n\n\n14 min\n\n\nMarch 14, 2025\n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.",
    "crumbs": [
      "Contents"
    ]
  },
  {
    "objectID": "chapters/intro.html",
    "href": "chapters/intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 What is reproducibility?\nA good definition of reproducibility is given by The Turing Way Company:\nWe will use this conceptualization of reproducibility throughout the book. Note, that reproducibility and replicability are two different terms. Replicability is achieved when the same analysis produce similar answers among different datasets, whereas reproducibility when the same analysis produce the same answer in the same dataset. That makes reproducibility the lowest common denominator in research.\nThe definition above is the most common definition of reproducibility. Note, that some research areas use the terms reproducibility and replicability the other way around. Thus, in computational science, reproducibility is given when the same result is obtained when the same analyses are carried out with different data. Other areas use these terms interchangeably.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#what-is-reproducibility",
    "href": "chapters/intro.html#what-is-reproducibility",
    "title": "1  Introduction",
    "section": "",
    "text": "“At The Turing Way, we define reproducible research as work that can be independently recreated from the same data and the same code that the original team used. Reproducible is distinct from replicable, robust and generalisable as described in the figure below.” - The Turing Way Community (2022), chapter on Reproducibility.\n\n\n\n\n\n\n\nFigure 1.1: “Reproducible Matrix” by The Turing Way Company (License: CC-BY 4.0; reused without modifications)\n\n\n\n\n\n\n\n\n\n\n\nReproducibility vs. Replicability\n\n\n\nDependent on the research area, reproducibility and replicability are used differently. In this book, we use a consistent and distinct conceptualization. Reproducibility means that the same analysis of the same data leads to the same result. Replicability means that the same analysis of different data leads to the same result.\nIf you look in the literature, be aware of what these terms express respective of the study you are reading.\n\n\n\n\n\n\n\n\nNote\n\n\n\nWithin this book, we limit the term reproducibility to computational entities. Thus, we mainly focus on data and code.\n\n\n\n1.1.1 Two errors of reproducibility\nAs a researcher who wants to reproduce a result from a different research project, there are two main reasons why reproducibility might fail (Nosek et al. 2022). First, you may not be able to repeat the analysis that had been done before, because of data or code unavailability or the lack of information or software to recreate code. This is called an process-based reproducibility failure. Second, your reanalysis yield different results than the original report. This is called an outcome-based reproducibility failure and can happen due to an error either in the original or the reproduction study (Nosek et al. 2022).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#benefits-of-reproducible-research",
    "href": "chapters/intro.html#benefits-of-reproducible-research",
    "title": "1  Introduction",
    "section": "1.2 Benefits of reproducible research",
    "text": "1.2 Benefits of reproducible research\n\nEnhances the clarity of research processes for other researchers and yourself\nAllows other researchers verifying your results\nIncreases the credibility of research findings\nSaves time in the long run by reusing methods and data\nAids in the identification of errors and biases\nEnsures that research outputs can be used in future studies\nPromotes better documentation of research processes\nStrengthen a researcher`s reputation and career prospects\nFosters public understanding of scientific processes\nPromotes better data management practices\nMinimizes duplication of research efforts",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#current-state-of-reproducibility",
    "href": "chapters/intro.html#current-state-of-reproducibility",
    "title": "1  Introduction",
    "section": "1.3 Current state of reproducibility",
    "text": "1.3 Current state of reproducibility\nAn anecdote: For this section of the book, we were searching for prevalence of reproducible and non-reproducible psychological research. We typed the search string (reproducib* and psycholog*).ti into WebofScience. The database found 64 articles related to the search string. 4 articles got a “Highly cited paper” badge on it. We clicked on it with the feeling of getting the most important articles. We trapped into the citation trap. However, at the end, we screened all 64 articles and 2 articles of the highly cited paper and 2 of the not highly cited paper gave rise to the research question.\nHowever, before starting deep into the applied methods of making research reproducible, let’s have a look at how good research (psychological research) is now. The investigation about reproducibility started around 2010 with the beginning of the replication crisis. Artner et al. (2021) investigated 46 articles from 2012 published in 3 different APA journals. The authors extracted 232 statistical claims and were able to reproduce 163 (70%) of the results. More recently, a study evaluated the reproducibility of research on the study level rather than the statistical result level. Hardwicke et al. (2021) investigated 25 articles of the journal Psychological Science published between 2014 and 2015 awarded with OpenData Badges. Overall, 15 articles (60%) were fully reproducible, 9 of them (60%) without author involvement. Another article investigated 14 articles from an issue of the same journal five years later and tried to reproduce the results of the articles in that issue (Crüwell et al. 2023). The researchers could only exactly reproduce the results of one of the 14 articles. Three articles were essentially reproducible with minor deviations (such as typographical mistakes). Noteworthy, all of these articles were certified with an OpenData-Badge. Another study investigated 62 registered reports from the psychological literature from 2014-2018. 36 of them (58%) provided shared data and code and 21 of these 36 (58%) were reproducible (Obels et al. 2020). This evidence shows that psychological literature is far from a reproducibility ratio of 100%. However, a substantial body of studies already is reproducible.\nDespite these raw findings the researchers of the above-mentioned studies also reported hindrances that weaken and opportunities that foster the reproducibility of results. Reproducibility is not easy, in fact one of the authors described the process of reproducing the results as “cumbersome and time-consuming trial-and-error work” (Artner et al. 2021, 527). Below, a list describes hindering and fostering factors for reproducible research.\n\n\n\n\n\n\n\n\nWhat hinders reproducibility?\n\n\n\n\nRaw and / or data not available\nCodebook / metadata not available\nError-prone workflow of copy-pasting values from long statistical outputs\nUnclear reporting of analytic procedures\nDifferent versions of packages and software\n\n\n\n\n\n\n\n\n\n\n\n\nWhat fosters reproducibility?\n\n\n\n\nAvailability of raw and tidy data\nAvailability of metadata / a codebook\nFlowchart of case selection\nData manipulation steps stored in code\nDynamic reports (e.g. RMarkdown or Quarto)\nCo-piloting of data analysis\n\n\n\n\n\nMaybe, some of the concepts (e.g. raw vs. tidy data) are not familiar to you. Do not worry, this book will cover all topics, explain the concepts and will provide exercises to directly apply the concepts to a research project. One exception is the Co-piloting of data analysis. It means that other colleagues reconduct your data analyses based on your shared data and code. To get the best out of this book, we recommend to find a partner with whom you work through this book.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#reproducibility-in-the-context-of-open-science",
    "href": "chapters/intro.html#reproducibility-in-the-context-of-open-science",
    "title": "1  Introduction",
    "section": "1.4 Reproducibility in the context of open science",
    "text": "1.4 Reproducibility in the context of open science\n\n\n\n\n\n\n\n\nFigure 1.2: Terms related to OpenScience (selfmade)\n\n\n\n\nReproducibility is a buzzword that is inevitably linked to OpenScience. But what is Open Science? Many associations aiming to foster OpenScience exist, however, a clear definition is rare. In their article, Lakomý, Hlavová, and Machackova (2019) referred to a book from Cribb and Sari (2010), defininf OpenScience as follows:\n\n“Open Science is a practice aiming to make scientifically generated knowledge and its method of production more accessible, applicable, transparent, and responsive to the needs of both scientists and the public.” (Lakomý, Hlavová, and Machackova 2019, 246)\n\nOpen Science policies arose not only but also because of the so-called replication crisis. In psychology, 100 original studies were replicated and the results attracted a lot of attention. The mean effect size of the replicated studies was half the magnitude of the original effect sizes and only 36% of the replications had significant results compared to 97% of the original studies (Open Science Collaboration 2015). Psychology was not the only research area failing to replicate their studies. For example, cancer research also found theirselves in a crisis facing a thorough replication crisis (Begley and Ellis 2012). As a result, many initiatives and institutions arose to enhance the credibility of research (e.g. Center for OpenScience, ORION, and many more). This comprised not only replicability of studies but the whole research process. Thus, reproducibility is a feature of this research process. Nowadays, policies aim to not make only research open, but also a variety of other topics which are disclosed in Figure 1.2 including educational materials. This is also the reason why this Repro-Book is published online without any restrictions. As the title suggests, this book mainly focuses on computational reproducibility. However, on our way to a reproducible research project, we will tangent many topics related to OpenScience.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#what-this-book-is-not-about",
    "href": "chapters/intro.html#what-this-book-is-not-about",
    "title": "1  Introduction",
    "section": "1.5 What this book is not about",
    "text": "1.5 What this book is not about\nOpen Science is a huge movement with many aspects, that we cannot cover completely in this book. Reproducibility is one important aspect for striving to open science, but many topics are still left.\n\n1.5.1 Qustionable Research Practices (QRPs)\nQuestionable research practices (QRPs) have gained increasing attention since a popular article by John, Loewenstein, and Prelec (2012). We acknowledge the variety of QRPs and the need to face the issues raised by the authors, but that topic can fill another full book. If you feel engaged to learn more about QRPs, we recommend to read the article and the embedded references. .\n\n\n1.5.2 Pre-registration\nPre-registrations have become popular as one answer to QRPs. However, even pre-registered studies can be irreproducible when data and code is not findable, accessible or understandable. In turn, a full reproducible research project does not necessarily have to be pre-registered. Both contribute in its own way to open science. If you want to find to pre-register your study, we recommend https://aspredicted.org or https://osf.io. If you want to learn more about pre-registration, we recommend the website of the Center for Open Science.\n\n\n1.5.3 Statistics\nMany aspects of this book will deal with R and RStudio, which are powerful tools for statistical programming. However, this book requires almost no statistical knowledge. You might find some t-tests or something similar in code-examples (see Section 5.5). The purpose of the book is not to increase your statistical knowledge and skills; the purpose of the book is to make your research more reproducible. If you want to learn more about statistics, we recommend this free E-book by Danielle Navarro. If you prefer an analogous book, we recommend Discovering statistics using R by Andy Field.\n\n\n1.5.4 Programming\nThe same applies to programming as to statistics. You will not learn anything new on purpose about a programming language. However, you will learn concepts derived from programming that benefits your research. Thus, some parts of the book seem quite technical. Nevertheless, these technical parts aim to make your research more robust and less error-prone regarding reproducibility.\n\n\n\n\nArtner, Richard, Thomas Verliefde, Sara Steegen, Sara Gomes, Frits Traets, Francis Tuerlinckx, and Wolf Vanpaemel. 2021. “The Reproducibility of Statistical Results in Psychological Research: An Investigation Using Unpublished Raw Data.” Psychological Methods 26: 527–46. https://doi.org/10.1037/met0000365.\n\n\nBegley, C. Glenn, and Lee M. Ellis. 2012. “Raise Standards for Preclinical Cancer Research.” Nature 483: 531–33. https://doi.org/10.1038/483531a.\n\n\nCribb, Julian, and Tjempaka Sari. 2010. Open Science: Sharing Knowledge in the Global Century. CSIRO Publishing. https://doi.org/10.1071/9780643097643.\n\n\nCrüwell, Sophia, Deborah Apthorp, Bradley J. Baker, Lincoln Colling, Malte Elson, Sandra J. Geiger, Sebastian Lobentanzer, et al. 2023. “What’s in a Badge? A Computational Reproducibility Investigation of the Open Data Badge Policy in One Issue of Psychological Science.” Psychological Science 34: 513–22. https://doi.org/10.1177/09567976221140828.\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.\n\n\nHardwicke, Tom E., Manuel Bohn, Kyle MacDonald, Emily Hembacher, Michéle B. Nuijten, Benjamin N. Peloquin, Benjamin E. deMayo, Bria Long, Erica J. Yoon, and Michael C. Frank. 2021. “Analytic Reproducibility in Articles Receiving Open Data Badges at the Journal *Psychological Science*: An Observational Study.” Royal Society Open Science 8: 201494. https://doi.org/10.1098/rsos.201494.\n\n\nJohn, Leslie K., George Loewenstein, and Drazen Prelec. 2012. “Measuring the Prevalence of Questionable Research Practices With Incentives for Truth Telling.” Psychological Science 23 (5): 524–32. https://doi.org/10.1177/0956797611430953.\n\n\nLakomý, Martin, Renata Hlavová, and Hana Machackova. 2019. “Open Science and the Science-Society Relationship.” Society 56: 246–55. https://doi.org/10.1007/s12115-019-00361-w.\n\n\nNosek, Brian A., Tom E. Hardwicke, Hannah Moshontz, Aurélien Allard, Katherine S. Corker, Anna Dreber, Fiona Fidler, et al. 2022. “Replicability, Robustness, and Reproducibility in Psychological Science.” Annual Review of Psychology 73 (1): 719–48. https://doi.org/10.1146/annurev-psych-020821-114157.\n\n\nObels, Pepijn, Daniël Lakens, Nicholas A. Coles, Jaroslav Gottfried, and Seth A. Green. 2020. “Analysis of Open Data and Computational Reproducibility in Registered Reports in Psychology.” Advances in Methods and Practices in Psychological Science 3: 229–37. https://doi.org/10.1177/2515245920918872.\n\n\nOpen Science Collaboration. 2015. “Estimating the Reproducibility of Psychological Science.” Science 349 (August): aac4716. https://doi.org/10.1126/science.aac4716.\n\n\nThe Turing Way Community. 2022. The Turing Way: A Handbook for Reproducible, Ethical and Collaborative Research. Zenodo. https://doi.org/10.5281/zenodo.3233853.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/naming-things.html",
    "href": "chapters/naming-things.html",
    "title": "2  Naming things",
    "section": "",
    "text": "2.1 Examples\nReflect on your first research project (or perhaps your most recent project). Take a moment to look at all the files you needed for that project. Can you determine what they contain just by their names? Below, you will find a real-life example from a second-semester undergraduate student in psychology. Which files would you want to encounter when you start reproducing results?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Naming things</span>"
    ]
  },
  {
    "objectID": "chapters/naming-things.html#examples",
    "href": "chapters/naming-things.html#examples",
    "title": "2  Naming things",
    "section": "",
    "text": "Exercise: What is bad or good about these file names?\n\n\n\n\n\nPause for a moment and think about what exactly makes the file names above bad or better? Discuss with a learning partner.\n\n\n\n\n2.1.1 Bad names\n\n PsychologyExample 2\n\n\n\n\n\nOutput\n\nAssignment BO\nDateien fÅr eigene Studien\nImages\nSessions by lecturer\nData results.pptx\nOutput behaviour observation 1. attempt.spv\nSPSS Results slightly shortened.pptx\nSPSS Results.pptx\nStatistical Analyses.docx\nSyntax behavior observation attempt 1.sps\n\n\n\n\n\n\n\nOutput\n\nmyabstract.docx\nJoe’s Filenames Use Spaces and Punctuation.xlsx\nfigure 1.png\nfig 2.png\nJW7d^(2sl@deletethisandyourcareerisoverWx2*.txt\n\n\n\n\n\n\n\n2.1.2 Better names\n\n PsychologyExample 2\n\n\n\n\n\nOutput\n\n01_session-slides\n02_images\n03_data\n04_assignment_behavior-observation\n2019-07-04_output_results_behavior-observation_attempt-1.spv\n2019-07-04_syntax_behavior-observation_attempt-1.sps\n2019-07-07_results_statistical-analyses.docx\n2019-07-09_SPSS_results.pptx\n2019-07-10_SPSS_results_short.pptx\n2019-07-11_data-results.pptx\n\n\n\n\n\n\n\nOutput\n\n2014-06-08_abstract-for-sla.docx\njoes-filenames-are-getting-better.xlsx\nfig01_scatterplot-talk-length-vs-interest.png\nfig02_histogram-talk-attendance.png\n1986-01-28_raw-data-from-challenger-o-rings.txt",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Naming things</span>"
    ]
  },
  {
    "objectID": "chapters/naming-things.html#introduction",
    "href": "chapters/naming-things.html#introduction",
    "title": "2  Naming things",
    "section": "2.2 Introduction",
    "text": "2.2 Introduction\n\n“There are only two hard things in Computer Science: cache invalidation and naming things.” – Phil Karlton\n\nIn research, naming things can often be more difficult than it seems. Whether you’re giving names to variables in a dataset, labeling files for your projects, or creating functions in a script, the names you choose are important for making your work clear and understandable. Good names help others (and yourself!) know what your work is about and how to use it.\nFinding the right names takes careful thought. You need to consider what makes sense in context and how to be clear and consistent. This chapter will look at some common challenges people face when naming things in research and provide simple tips to improve your naming practices. By understanding these challenges, you can make your research easier to follow and more accessible to others and avoid situations as illustrated in Figure 2.1.\n\n\n\n\n\n\nFigure 2.1: “A story told in file names” by Jorge Cham (License: ; All content copyright 1997-2003 Piled Higher and Deeper Publishing, LLC.)\n\n\n\n\n\n\n\n\n\nOk, what the heck is cache invalidation and why is it hard?\n\n\n\n\n\nCache invalidation is the process of updating or removing old data stored in a cache (a temporary storage area) when the original data changes. Caches are used to speed up access to frequently used data, but if the cache isn’t updated correctly, it may end up providing outdated or incorrect information. It is challenging for several reasons: first, determining the right moment to update the cache can be difficult, risking the delivery of outdated information. Additionally, many data pieces are interconnected, making it hard to track what needs updating when changes occur. Lastly, automatically updating caches can slow down systems, so finding a balance between performance and accuracy is tricky. These complexities make effective cache invalidation one of the more difficult problems in software development.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Naming things</span>"
    ]
  },
  {
    "objectID": "chapters/naming-things.html#principles-for-file-names",
    "href": "chapters/naming-things.html#principles-for-file-names",
    "title": "2  Naming things",
    "section": "2.3 Principles for (file) names",
    "text": "2.3 Principles for (file) names\nGood file naming practices are essential for organization, clarity, and efficient file management. Here are some key principles to follow when creating file names:\n\nMachine readable\nHuman readable\nConsistency\nPlay well with default ordering",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Naming things</span>"
    ]
  },
  {
    "objectID": "chapters/naming-things.html#machine-readable",
    "href": "chapters/naming-things.html#machine-readable",
    "title": "2  Naming things",
    "section": "2.4 Machine readable",
    "text": "2.4 Machine readable\nA file is machine-readable if information is formatted in a way that a computer can easily read and understand it without needing a human to interpret or manually enter the data. This often involves using standardized data formats like CSV, XML, or JSON, which are structured so that computer programs can process the information quickly and accurately. There are two main concepts that help computers quickly search and match patterns in text or file names, making data processing tasks easier and faster: regular expressions and globbing.\n\n2.4.1 Regular expression and globbing friendly\nBoth regular expression and globbing are concepts that help make working with files and data more efficient for automation and scripting tasks.\nA regular expression, often called a “regex”, is a sequence of characters that defines a search pattern. It’s used to find or match specific combinations of characters within text. You can think of it as a tool for searching text in a very precise and flexible way.\nGlobbing is a way to use special characters (called “wildcards”) to match multiple files or directories in command-line interfaces or scripts. It helps you to select groups of files without typing every single name.\nCommon wildcards in globbing:\n\n* (asterisk): Matches any number of characters. For example, *.txt matches all files ending with .txt.\n? (question mark): Matches exactly one character. For example, file?.txt matches file1.txt and file2.txt, but not file10.txt.\n\nSo, if you wanted to list all text files in a directory, you could use the pattern *.txt, and it would match all files with the .txt extension.\n\n\n2.4.2 How to make files regex and globbing friendy\nTo make file names regex and globbing friendly, avoid:\n\nspaces\npunctuation\naccented characters\ncase sensitivity\n\n\n\n\n\n\n\nWhat are regular expressions?\n\n\n\n\n\nA regular expression is a special sequence of characters that helps you to search for patterns in text. It allows you to find specific words or phrases within a larger body of text. For example, imagine you have a text document and you want to find all email addresses mentioned in it. You can use the following regular expression to search for email addresses:\n\n\n\nCode\n\n\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b\n\n\nThis pattern will match any text that looks like an email address, such as example@email.com. Imagine that you have a text like the following:\n\nPlease contact me at john.doe@email.com for any inquiries. You can also reach out to jane.smith@example.com for more information.\n\nYou can see regular expression in action with this example:\n\n\n\nCode\n\necho \"Please contact me at john.doe@email.com for any inquiries. You can also reach out to jane.smith@example.com for more information.\" | grep -Eo \"\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b\"\n\n\nHere is what happens with this command:\n\necho is used to display the sample text.\nThe pipe (|) sends the output of echo as input to grep.\ngrep -Eo enables extended regular expressions and prints only the matching part of the line.\nThe regular expression \\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b is used to identify email addresses in the text output by echo.\n\nYou can also paste the example text into a text file, for example called example.txt and then apply the same command to the text file:\n\n\n\nCode\n\ngrep -Eo \"\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b\" example.txt\n\n\nHere you can see the output:\n\n\n\nOutput\n\njohn.doe@email.com\njane.smith@example.com\n\n\n\n\n\n\n\n\n\n\n\nWhat is globbing?\n\n\n\n\n\nGlobbing refers to the use of wildcard characters (like * and ?) to match multiple files or directories in command-line interfaces and scripting. Being globbing friendly means file names or paths are structured in a way that makes them easy to match using these wildcards.\nFor example, let’s assume that you have three files like YYYY-MM-DD_NEOFFI_numerical-stroop_bsc-thesis_01.csv and YYYY-MM-DD_NEOFFI_emotional-stroop_msc-thesis_01.csv. You can use a glob pattern like *emotional* to match all of your data sets associated with the emotional stroop task.\n\n PsychologyBiology\n\n\nExcerpt of complete file listing:\n\n\n\nOutput\n\n2021-02-18_NEOFFI_numerical-stroop_bsc-thesis_01.csv\n2021-02-18_NEOFFI_numerical-stroop_bsc-thesis_02.csv\n2021-02-19_NEOFFI_numerical-stroop_bsc-thesis_03.csv\n2021-06-04_NEOFFI_emotional-stroop_msc-thesis_001.csv\n2021-06-05_NEOFFI_emotional-stroop_msc-thesis_002.csv\n2021-06-07_NEOFFI_emotional-stroop_msc-thesis_003.csv\n2021-06-11_NEOFFI_emotional-stroop_msc-thesis_004.csv\n\n\n\n\nExcerpt of complete file listing:\n\n\n\nOutput\n\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H01.csv\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H02.csv\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H03.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A01.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A02.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A03.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A04.csv\n\n\n\n\n\n\n PsychologyBiology\n\n\n\n Bash macOS\n\n\n\n\n\nCode\n\nls *emotional*\n\n\n\n\n\nOutput\n\n2021-06-04_NEOFFI_emotional-stroop_msc-thesis_001.csv\n2021-06-05_NEOFFI_emotional-stroop_msc-thesis_002.csv\n2021-06-07_NEOFFI_emotional-stroop_msc-thesis_003.csv\n2021-06-11_NEOFFI_emotional-stroop_msc-thesis_004.csv\n\n\n\n\nPut image of macOS screenshot here\n\n\n\n\n\nCode\n\nlist.files(pattern = \"emotional\") |&gt; head\n\n\n\n\n\nOutput\n\n[1] \"2021-06-04_NEOFFI_emotional-stroop_msc-thesis_001.csv\"\n[2] \"2021-06-05_NEOFFI_emotional-stroop_msc-thesis_002.csv\"\n[3] \"2021-06-07_NEOFFI_emotional-stroop_msc-thesis_003.csv\"\n[4] \"2021-06-11_NEOFFI_emotional-stroop_msc-thesis_004.csv\"\n\n\n\n\n\n\n\n\n Bash macOS\n\n\n\n\n\nCode\n\nls *Plasmid*\n\n\n\n\n\nOutput\n\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H01.csv\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H02.csv\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H03.csv\n\n\n\n\nPut image of macOS screenshot here\n\n\n\n\n\nCode\n\nlist.files(pattern = \"Plasmid\") |&gt; head\n\n\n\n\n\nOutput\n\n[1] \"2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_A01.csv\"\n[2] \"2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_A02.csv\"\n[3] \"2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_A03.csv\"\n[4] \"2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_B01.csv\"\n[5] \"2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_B02.csv\"\n[6] \"2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_B03.csv\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.4.3 Recover meta data from file names\nMetadata is information that describes key details about a file, like the date it was created, the author, or the type of data it contains. Including metadata in a filename (for example, 2023_Experiment1_DrSmith.csv) is helpful because it makes important details visible at a glance. This helps with organizing, searching, and sorting files, especially in large projects where you may have many similar files. By storing metadata in filenames, you can quickly understand what each file contains without opening it, saving time and reducing errors in data management.\n\n2.4.3.1 How to recover meta data from file names\nDeliberate use of underscores (_) and hyphens (-) allows us to recover metadata from file names.\n\nUse underscores (_) to delimit units of metadata\nUse hyphens (-) to delimit words to improve human readability\n\n\n PsychologyBiology\n\n\n\n\n\n\n\n\n\nCode\n\nflist &lt;- list.files(pattern = \"emotional\") %&gt;% head\nstringr::str_split_fixed(flist, \"[_\\\\.]\", 6)\n\n\n\n\n\nOutput\n\n# date survey paradigm project participant\n      [ ,1]        [ ,2]    [ ,3]              [ ,4]        [ ,5] [ ,6]  \n[1, ] \"2021-06-04\" \"NEOFFI\" \"emotional-stroop\" \"msc-thesis\" \"001\" \"csv\"\n[2, ] \"2021-06-05\" \"NEOFFI\" \"emotional-stroop\" \"msc-thesis\" \"002\" \"csv\"\n[3, ] \"2021-06-07\" \"NEOFFI\" \"emotional-stroop\" \"msc-thesis\" \"003\" \"csv\"\n[4, ] \"2021-06-11\" \"NEOFFI\" \"emotional-stroop\" \"msc-thesis\" \"004\" \"csv\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n\nflist &lt;- list.files(pattern = \"Plasmid\") %&gt;% head\nstringr::str_split_fixed(flist, \"[_\\\\.]\", 5)\n\n\n\n\n\nOutput\n\n# date assay sampleset well\n     [ ,1]        [ ,2]            [ ,3]                                  [ ,4] [ ,5]\n[1,] \"2013-06-26\" \"BRAFWTNEGASSAY\" \"Plasmid-Cellline-100-1MutantFraction\" \"A01\" \"csv\"\n[2,] \"2013-06-26\" \"BRAFWTNEGASSAY\" \"Plasmid-Cellline-100-1MutantFraction\" \"A02\" \"csv\"\n[3,] \"2013-06-26\" \"BRAFWTNEGASSAY\" \"Plasmid-Cellline-100-1MutantFraction\" \"A03\" \"csv\"\n[4,] \"2013-06-26\" \"BRAFWTNEGASSAY\" \"Plasmid-Cellline-100-1MutantFraction\" \"B01\" \"csv\"\n[5,] \"2013-06-26\" \"BRAFWTNEGASSAY\" \"Plasmid-Cellline-100-1MutantFraction\" \"B02\" \"csv\"\n[6,] \"2013-06-26\" \"BRAFWTNEGASSAY\" \"Plasmid-Cellline-100-1MutantFraction\" \"B03\" \"csv\"\n\n\n\n\n\n\n\n\n\n\n\n2.4.4 Summary\nNames are more easily machine-readable if they are:\n\nEasy to search for files later.\nEasy to narrow file lists based on names.\nEasy to extract information from file names, for example, by splitting them.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Naming things</span>"
    ]
  },
  {
    "objectID": "chapters/naming-things.html#human-readable",
    "href": "chapters/naming-things.html#human-readable",
    "title": "2  Naming things",
    "section": "2.5 Human readable",
    "text": "2.5 Human readable\nNames of files and folders should contain information about its content. It should make it easy to figure out what something is based on the file name. This idea connects to the concept of a slug from semantic URLs.\n\n\n\n\n\n\nWhat is a slug in a URL?\n\n\n\n\n\nA slug is a part of a URL that is easy to read and understand. It usually comes after the main website address and describes the content of the page in simple words. Slugs are important for both humans and search engines because they give a clear idea of what the page is about.\nFor example:\n\nThe full URL might be: https://www.example.com/blog/how-to-cook-pasta\nThe slug in this URL is: how-to-cook-pasta\n\nGood slugs are short, descriptive, and use hyphens to separate words. This makes the URL more user-friendly and helps search engines understand the page content.\n\n\n\nFind the slug in the following file names:\n\n PsychologyBiology\n\n\n\n\n\nOutput\n\n01_DSM-5-data.csv\n02_pre-analysis-filtering.r\n03_test-hypotheses.r\n04_exploratory-analyses.r\n90_DSM-V-codebook.csv\nhelper01_load-packages.r\nhelper02_load-codebook.r\nhelper03_test-assumptions.r\nhelper04_load-figure-template.r\n\n\n\n\n\n\n\nOutput\n\n01_marshal-data.r\n02_pre-dea-filtering.r\n03_dea-with-limma-voom.r\n04_explore-dea-results.r\n90_limma-model-term-name-fiasco.r\nhelper01_load-counts.r\nhelper02_load-exp-des.r\nhelper03_load-focus-statinf.r\nhelper04_extract-and-tidy.r\n\n\n\n\n\nWhich filenames make it easier to understand their content?\n\n PsychologyBiology\n\n\n\n\n\nOutput\n\n01_DSM-5-data.csv\n02_pre-analysis-filtering.md\n02_pre-analysis-filtering.r\n03_test-hypotheses.md\n03_test-hypotheses.r\n04_exploratory-analyses.md\n04_exploratory-analyses.r\n90_DSM-codebook.csv\nMakefile\nfigure\nhelper01_load-packages.r\nhelper02_load-codebook.r\nhelper03_test-assumptions.r\nhelper04_load-figure-template.r\ntmp.txt\n\n\n\n\n\nOutput\n\n01.csv\n02.md\n02.r\n03.md\n03.r\n04.md\n04.r\n90.md\n90.r\nMakefile\nfigure\nhelper01.r\nhelper02.r\nhelper03.r\nhelper04.r\ntmp.txt\n\n\n\n\n\n\n\nOutput\n\n01_marshal-data.md\n01_marshal-data.r\n02_pre-dea-filtering.md\n02_pre-dea-filtering.r\n03_dea-with-limma-voom.md\n03_dea-with-limma-voom.r\n04_explore-dea-results.md\n04_explore-dea-results.r\n90_limma-model-term-name-fiasco.md\n90_limma-model-term-name-fiasco.r\nMakefile\nfigure\nhelper01_load-counts.r\nhelper02_load-exp-des.r\nhelper03_load-focus-statinf.r\nhelper04_extract-and-tidy.r\ntmp.txt\n\n\n\n\n\nOutput\n\n01.md\n01.r\n02.md\n02.r\n03.md\n03.r\n04.md\n04.r\n90.md\n90.r\nMakefile\nfigure\nhelper01.r\nhelper02.r\nhelper03.r\nhelper04.r\ntmp.txt",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Naming things</span>"
    ]
  },
  {
    "objectID": "chapters/naming-things.html#consistency",
    "href": "chapters/naming-things.html#consistency",
    "title": "2  Naming things",
    "section": "2.6 Consistency",
    "text": "2.6 Consistency\nYou can find and organize files more easily when you name them consistently.\nSometimes, file names might be in multiple languages.\nFor example, you may study in the Netherlands or Germany, but your research project involves international colleagues, so the common language is English.\nIt is recommended to name your files in only one language that everyone involved can understand.\nEven if you use just one language, regional differences can lead to variations in spelling.\nFor example, the English word “behavior” is spelled with a u in British English (“behaviour”) but without it in American English (“behavior”).\nDecide as a team on a single language and spelling style for naming files and folders.\nBe mindful of capitalization as well, and choose a consistent style!\n\nConsistent namesInconsistent names\n\n\n\n\n\nOutput\n\ndecision-for-the-use-of-american-english.csv\nall-my-file-names-are-in-one-language.txt\nbehavioral-data-is-consistently-named.csv\nbehavioral-data-file-names-are-easy-to-understand.r\nconsistent-convention-about-capitalization.csv\n\n\n\n\n\n\n\nOutput\n\ndecision-for-the-use-of-plenty-languages.csv\ndette-dokumentet-har-et-norsk-navn.txt\nbehavioural-data-is-not-consistently-named.csv\nbehavioral-data-file-names-are-hard-to-understand.r\nSome-words-Are-written-in-upper-case.csv",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Naming things</span>"
    ]
  },
  {
    "objectID": "chapters/naming-things.html#play-well-with-default-ordering",
    "href": "chapters/naming-things.html#play-well-with-default-ordering",
    "title": "2  Naming things",
    "section": "2.7 Play well with default ordering",
    "text": "2.7 Play well with default ordering\nFilenames should be designed to work well with default ordering (like alphabetical or chronological order) so that files are easy to locate and understand at a glance Good ordering lets related files appear together, saves time when searching, and keeps files organized, especially in large projects.\n\n2.7.1 Put something numeric first\n\n2.7.1.1 Chronological order\n\n PsychologyBiology\n\n\n\n\n\nOutput\n\n2021-02-18_NEOFFI_numerical-stroop_bsc-thesis_01.csv\n2021-02-18_NEOFFI_numerical-stroop_bsc-thesis_02.csv\n2021-02-19_NEOFFI_numerical-stroop_bsc-thesis_03.csv\n2021-06-04_NEOFFI_emotional-stroop_msc-thesis_001.csv\n2021-06-05_NEOFFI_emotional-stroop_msc-thesis_002.csv\n2021-06-07_NEOFFI_emotional-stroop_msc-thesis_003.csv\n2021-06-11_NEOFFI_emotional-stroop_msc-thesis_004.csv\n\n\n\n\n\n\n\nOutput\n\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H01.csv\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H02.csv\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H03.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A01.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A02.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A03.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A04.csv\n\n\n\n\n\n\n\n\n\n\n\nWhen keeping copies of the same or similar files, consider version control!\n\n\n\nConsider the use of chronologically ordered files and folders! For specifying different versions of the same document, version control tools as Git and GitHub should be preferred. Otherwise you might feel as the person in the cartoon in Figure 2.2 writing on his “final document”. For different but similar files, a chronological order can make sense.\n\n\n\n\n\n\n\n\nFigure 2.2: “notFinal.doc” by Jorge Cham (License: All content copyright 1997-2003 Piled Higher and Deeper Publishing, LLC.; reused without modifications)\n\n\n\n\n\n2.7.1.2 Logical order\n\n PsychologyBiology\n\n\n\n01_DSM-5-data.csv\n02_pre-analysis-filtering.r\n03_test-hypotheses.r\n04_exploratory-analyses.r\n90_DSM-V-codebook.csv\nhelper01_load-packages.r\nhelper02_load-codebook.r\nhelper03_test-assumptions.r\nhelper04_load-figure-template.r\n\n\n\n\n01_marshal-data.r\n02_pre-dea-filtering.r\n03_dea-with-limma-voom.r\n04_explore-dea-results.r\n90_limma-model-term-name-fiasco.r\nhelper01_load-counts.r\nhelper02_load-exp-des.r\nhelper03_load-focus-statinf.r\nhelper04_extract-and-tidy.r\n\n\n\n\n\n\n2.7.1.3 Use the ISO 8601 standard for dates\nIn 1988, to avoid confusion, the International Organization for Standardization (ISO) set a global standard numeric date format, known as ISO 8601: YYYY-MM-DD, where YYYY stands for the year, e.g., 2024, MM stands for the month, e.g., 11 and DD stands for the day, e.g., 06. Using the ISO 8601 standard for dates (like 2023-11-06) ensures consistency and avoids confusion. This format starts with the year, followed by the month, and then the day, which makes it easy to sort dates in the correct order. It works well across different cultures and software, helping everyone read and organize dates the same way.\n\n PsychologyBiology\n\n\n\n\n\nOutput\n\n2021-02-18_NEOFFI_numerical-stroop_bsc-thesis_01.csv\n2021-02-18_NEOFFI_numerical-stroop_bsc-thesis_02.csv\n2021-02-19_NEOFFI_numerical-stroop_bsc-thesis_03.csv\n2021-06-04_NEOFFI_emotional-stroop_msc-thesis_001.csv\n2021-06-05_NEOFFI_emotional-stroop_msc-thesis_002.csv\n2021-06-07_NEOFFI_emotional-stroop_msc-thesis_003.csv\n2021-06-11_NEOFFI_emotional-stroop_msc-thesis_004.csv\n\n\n\n\n\n\n\nOutput\n\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H01.csv\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H02.csv\n2013-06-26_BRAFWTNEGASSAY_Plasmid-Cellline-100-1MutantFraction_H03.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A01.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A02.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A03.csv\n2014-02-17_BRAFWTNEGASSAY_FFPEDNA-CRC-1-41_A04.csv\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.3: “ISO 8601” by xkcd.com (Randall Munroe) (License: CC BY-NC 2.5; reused without modifications)\n\n\n\n\n\n2.7.1.4 Consider the output:\nFiles that are later turned into HTML should be exclusively delimited by hyphens (-).\n\n\n\n2.7.2 Left-pad numbers with zeros\nLeft-padding of numbers refers to the practice of adding zeros to the left of a number to make it reach a certain length. This can be useful, for example, when dealing with numerical data that needs to be formatted in a specific way for presentation or computational purposes. By left-padding numbers, you can ensure that they all have the same length and are easier to compare or work with in a numerical context.\n\n PsychologyBiology\n\n\n\n01_DSM-5-data.csv\n02_pre-analysis-filtering.r\n03_test-hypotheses.r\n04_exploratory-analyses.r\n90_DSM-V-codebook.csv\nhelper01_load-packages.r\nhelper02_load-codebook.r\nhelper03_test-assumptions.r\nhelper04_load-figure-template.r\n\n\n\n\n\n\nOutput\n\n01_marshal-data.r\n02_pre-dea-filtering.r\n03_dea-with-limma-voom.r\n04_explore-dea-results.r\n90_limma-model-term-name-fiasco.r\nhelper01_load-counts.r\nhelper02_load-exp-des.r\nhelper03_load-focus-statinf.r\nhelper04_extract-and-tidy.r\n\n\n\n\n\nIf you don’t left pad numbers, you get this:\n\n\n\nOutput\n\n10_final-figs-for-publication.R\n1_data-cleaning.R\n2_fit-model.R\n\n\n\n\n\n\n\n\nConsider how many leading zero you will need!\n\n\n\n\n\nWhen left-padding numbers, you can add as many leading zeros as you might need. In many cases, using one zero (i.e., 01) will be sufficient but you might also have more files, you could consider left-padding with two zeros (i.e., 001) if the number of relevant files go to or beyond a hundred.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Naming things</span>"
    ]
  },
  {
    "objectID": "chapters/naming-things.html#summary-1",
    "href": "chapters/naming-things.html#summary-1",
    "title": "2  Naming things",
    "section": "2.8 Summary",
    "text": "2.8 Summary\nHere is a summary of all recommendations for naming things:\n\n2.8.1 Machine readable\n\nFile names are regular expression and globbing friendly\nFile names allow to recover meta data\n\n\n\n2.8.2 Human readable\n\nFile names contain info on content\n\n\n\n2.8.3 Consistency\n\nFile names are named in one language\nBe aware of regional influences in spelling\nConsistent use of upper and lower case\n\n\n\n2.8.4 Plays well with default ordering\n\nPut something numeric first\nUse the ISO 8601 standard for dates: YYYY-MM-DD\nLeft pad other numbers with zeros: e.g., 01",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Naming things</span>"
    ]
  },
  {
    "objectID": "chapters/naming-things.html#acknowledgements-further-reading",
    "href": "chapters/naming-things.html#acknowledgements-further-reading",
    "title": "2  Naming things",
    "section": "2.9 Acknowledgements & further reading",
    "text": "2.9 Acknowledgements & further reading\nWe would like to express our gratitude to the following resources, which have been essential in shaping this chapter. We recommend these references for further reading:\nThe ideas provided in this chapter are mainly based on the slides from Bryan (2015). We are also thankful for the additional ideas of Danielle Navarro and the BERD Academy\n\n\n\n\nBryan, Jenny. 2015. “How to Name Files.” https://speakerdeck.com/jennybc/how-to-name-files.\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Naming things</span>"
    ]
  },
  {
    "objectID": "chapters/project-structure.html",
    "href": "chapters/project-structure.html",
    "title": "3  Project Structure",
    "section": "",
    "text": "3.1 Examples\nA good folder structure saves you and other researchers a lot of time when revisiting or trying to understand your data. However, there is no universal best practice standard for project structures. Below are several examples of different project structures:\nWhen looking at the different project structures, it becomes clear that there is no perfect or correct project structure for a research project. The variety and scale of projects is too diverse and include different demands of different parties. Nevertheless, in this chapter we try to summarise the most important aspects of a project structure in the context of research. We differentiate between basic standards that help in every project and optional standards that help in specific contexts of projects. Afterwards, we display reproducibility archives and the different requirements journals articulate for setting up an reproducibility archive.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Project Structure</span>"
    ]
  },
  {
    "objectID": "chapters/project-structure.html#examples",
    "href": "chapters/project-structure.html#examples",
    "title": "3  Project Structure",
    "section": "",
    "text": "The Turing WayHeidi SeiboldanalysistemplatesWORCS\n\n\n\n\n\nOutput\n\n├── LICENSE\n1├── README.md\n├── CODE_OF_CONDUCT.md &lt;- Guidelines for users and contributors of the project.\n├── CONTRIBUTING.md    &lt;- Information on how to contribute to the project.\n├── data\n│   ├── processed      &lt;- The final, canonical data sets for modeling.\n│   └── raw            &lt;- The original, immutable data dump.\n│\n├── docs               &lt;- A default Sphinx project; see sphinx-doc.org for details\n│\n├── models             &lt;- Trained and serialized models, model predictions, or model summaries\n│\n├── notebooks          &lt;- Jupyter notebooks. The naming convention is a number (for ordering),\n│                         the creator's initials, and a short `-` delimited description, e.g.\n│                         `1.0-jqp-initial-data-exploration`.\n│\n├── reports            &lt;- Generated analysis as HTML, PDF, LaTeX, etc.\n│   └── figures        &lt;- Generated graphics and figures to be used in reporting\n│\n├── project_management &lt;- Meeting notes and other project planning resources\n│\n├── src                &lt;- Source code for use in this project.\n│   │\n│   ├── data           &lt;- Scripts to download or generate data\n│   │   └── make_dataset.py\n│   │\n│   ├── models         &lt;- Scripts to train models and then use trained models to make\n│   │   │                 predictions\n│   │   ├── predict_model.py\n│   │   └── train_model.py\n│   │\n│   └── visualisation  &lt;- Scripts to create exploratory and results-oriented visualisations\n│       └── visualise.py\n└──\n\n\n\n1\n\nThe top-level README for users of this project.\n\n\n\n\nRepository Structure Template by The Turing Way. Used under the LICENSE CC-BY 4.0. Reused without any modifications.\n\n\n.\n├── README.md\n├── analysis            &lt;- all things data analysis\n│   └── src             &lt;- functions and other source files\n├── comm\n│   ├── internal_comm   &lt;- internal communication such as meeting notes\n│   └── journal_comm    &lt;- communication with the journal, e.g. peer review\n├── data\n│   ├── data_clean      &lt;- clean version of the data\n│   └── data_raw        &lt;- raw data (don't touch)\n├── dissemination\n│   ├── manuscripts\n│   ├── posters\n│   └── presentations\n├── documentation       &lt;- documentation, e.g. data management plan\n└── misc                &lt;- miscellaneous files that don't fit elsewhere\nResearch Project Template by Heidi Seibold. No license use specified. For source code, see here. Reused without modifications.\n\n\n|-- 01_Data\n|   |-- 01_Raw\n|   `-- 02_Clean\n|-- 02_Analysis\n|   |-- 01_Scripts\n|   |-- 02_Results\n|   |-- 03_Figures\n|   `-- 04_Tables\n|-- 03_Manuscript\n|   |-- 01_Text\n|   `-- 02_Final_figures\n|-- 04_Presentation\n|-- 05_Misc\n|-- 06_Analysis_for_publication &lt;-- optional\n|   |-- 01_Scripts              &lt;-- optional\n|   |-- 02_Results              &lt;-- optional\n|   |-- 03_Figures              &lt;-- optional\n|   `-- 04_Tables               &lt;-- optional\n|-- README.md\n|-- .gitignore                  &lt;-- optional\n|-- renv                        &lt;-- optional\nanalysis template packages by Jonas Hagenbeck. Used under the MIT License. Reused without any modifications.\n\n\n\n\n\nFile\nDescription\nUsage\n\n\n\n\n_pkgdown.yml\nYAML for package website\ndo not edit\n\n\nDESCRIPTION\nR-package DESCRIPTION\ndo not edit\n\n\nLICENSE.md\nProject license\ndo not edit\n\n\nNAMESPACE\nR-package namespace\nmachine-written\n\n\nREADME.md\nRead this file to get started!\ndo not edit\n\n\nREADME.Rmd\nR-markdown source for readme.md\nhuman editable\n\n\nworcs.Rproj\nRStudio project file\ndo not edit\n\n\ndocs/\nPackage website\nmachine-written\n\n\ninst/\nRStudio project template files\nhuman editable\n\n\nman/\nR-package documentation\ndo not edit\n\n\npaper/\nWORCS paper source files\nhuman editable\n\n\nR/\nR-package source code\nhuman editable\n\n\nvignettes/\nR-package vignettes\nhuman editable\n\n\n\nWORCS project structure by Van Lissa et al. (2021). Used under the GNU General Public License. No changes were made.\n\n\n\n\n\n\n\n\n\nExercise: Take on different perspectives\n\n\n\nPause for a moment after investigating the different project structures. Take the perspective of a researcher that is currently working in this project structure. How would you feel working with this structure? What helps you, hinders you to work productively and reproducible? Then change your perspective. Imagine you are a researcher aiming to reproduce the results of a different research project that uses such project structures. What would you need to reproduce analysis and results?",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Project Structure</span>"
    ]
  },
  {
    "objectID": "chapters/project-structure.html#basic-standards-for-research-projects",
    "href": "chapters/project-structure.html#basic-standards-for-research-projects",
    "title": "3  Project Structure",
    "section": "3.2 Basic standards for research projects",
    "text": "3.2 Basic standards for research projects\nFirst of all, these basic standards are highly subjective. As researchers in the discipline of psychology, our experience comes from psychological research projects. Researchers from other disciplines might need to configure the project structure elements. In psychology research, we assess these standards as highly useful:\n\nHuman and machine-readable files\nREADME.md-file\nSeparation of data and code\nrenv-folder\nmisc-folder\n\nApart from these standards, it is always useful to look for already existing standards in your research discipline. Researchers working with fMRI data will find the convention of Brain Images Data Structures (BIDS). BIDS is a standard that aims to foster a simple and easy way of organizing neuroimaging and behavioural data. Inspired by BIDS, psych-DS started in 2018 to aiming to provide a systematic way of formatting and documenting scientific datasets. However, content creation by psych-DS has been low. If you want to contribute to the project, take a look at their  Github repository.\n\n3.2.1 Human and machine-readable files\nAs displayed in the chapter Naming things, human and machine-readable names for files and folders are relatively easy to modify, when starting a project. As your project grows, you will be thankful for good file and folder names. Since, we dedicated a whole chapter to this topic, we move on to the next basic standard of a project structure.\n\n\n3.2.2 README.md-file\nA README is a text file that provides basic information about a project. It is typically a Markdown (.md) file, which means you can use Markdown syntax in it. Markdown allows you to easily format text, create lists, include links, and embed images. The exact content depends on your repository, but some general things that you might want to include are:\n\nProject description: What function does this repository serve and what are it’s key features?\nInstallation instructions (if applicable): Explain how to install and set up your project, including any dependencies or prerequisites. This is particularly relevant for repositories that contain programming code. Provide clear instructions to help users or contributors get started with your project quickly.\nProject structure: Explain your project structure. Use one sentence to describe each file and folder. Examples are displayed above.\nUsage (if applicable): Provide examples or code snippets demonstrating how to use your project.\nContributing: If you welcome contributions, specify how others can contribute to your project. Here, you can also include guidelines for submitting bug reports, feature requests, or pull requests.\n\n\n\n\n\n\n\nAdding a CONTRIBUTING.md file to a repository\n\n\n\n\n\nFor larger or more complex projects where contributions may involve setting up a specific development environment or adhering to specific workflows, it is standard practice to create a file called CONTRIBUTING.md. GitHub recognizes the presence of a CONTRIBUTING.md file in a repository and, for example, automatically includes a link to the CONTRIBUTING.md file when users open a new issue or pull request.\n\n\n\n\nAcknowledgments: Give credit to any third-party libraries, tools, or individuals that contributed to your project.\nLicense: Choose a license that aligns with your project’s goals. You can use choosealicense.com for guidance. The chosen license influences contributions to your project. Researchers are often insecure about which license to use. We will there cover the topic license in a separate chapter.\n\n\n\n\n\n\n\nFind out more: View the README.md file of this project.\n\n\n\n\n\n4 The Repro Book\n    \n\n4.1 Description\nWelcome to the Repro Book, an open-source online learning resource on reproducible research. The main goal of the Repro Book is to provide a companion online course text book for courses on reproducible research.\n\n\n4.2 Repository Structure\n\n4.2.1 Folders\n.github/workflows is a folder that contains GitHub Actions workflows. Currently, two automatic workflows run automatically. This folder can be ignored by users who want to contribute to the book.\n_extensions is a folder that contains Quarto extensions. Currently, this book only uses the fontawesome-extension to create icons like this: . This folder can be ignored by users who want to contribute to the book.\nchapters is the heart of the book. The chapters folder contains all main chapters of the book. The content of each chapter is stored in its own .qmd file. If you want to contribute with content and modify chapters or create new ones, this is main the place where your adjustments take place.\nimages is a folder that does not contain images (yet). The images displayed in this book are stored in a NextCloud folder. If you want to contribute images to this book, please upload them to the NextCloud folder. For an explanation of how to use the images from NextCloud, see contributing.qmd.\nrenv is a folder that contains information about the R packages used in this book. If your contributions include the utility of an additional R package, see contributing.qmd for how to modify the relevant files.\n\n\n4.2.2 Files\n.Renviron is a file used in R that allows users to define environment variables.\n.Rprofile is a file used in R that allows users to customize their R sessions by specifying code that should be executed every time R starts.\n.all-contributorsrc is a file where the contributors of this project are listed. When you want to start working on this book, you will be included in this document. Content contribution is not affected by this file.\n.codespellrc is a file connected to a an automated codespell check at GitHub. Content contribution is not affected by this file.\n.gitignore is a file that specifies files and folders that should be ignored and not tracked by Git. It prevents certain files or directories that are not essential for the project or generated during the development process from being included in the version history. For more information about .gitignore, check out this link.\nLICENSE is a file where you can see what others are and are not allowed to do with this project.\nMakefile is a special text file that contains rules and instructions for automating the execution of software programs.\nREADME.md is the file you are currently reading. It provides basic information about a project and a description of a repository.\n_affiliations.yml is a metadata-file that contains information about the affiliations the contributors work at. If you contribute to this project and are affiliated to a different institution than University of Hamburg, you can extend the file for your institution.\n_authors.yml is a metadata-file that contains information about the authors of this project. If you contribute to this project as an author, you can extend the file for your information.\n_custom.scss is a used to customize the styling of Quarto documents by writing our own CSS (Cascading Style Sheets) rules.\n_quarto.yml is a metadata-file that configures the project settings. For example, it configures the book title and subtitle and how the book chapters are arranged. If you contribute to this project with a new chapter, you have to add the location of the chapter in a meaningful way to the chapters-section in the _quarto.yml-file.\n_quarto-pdf.yml is also a metadata-file that configures the project settings but only when we export the book to PDF.\n_variables.yml is a metadata-file that specifies variables in a project. It is possible to use the variables in the files that constitute the chapters or similar.\nacknowledgements.qmd is a closing book chapter where we describe which different tools we use for what.\ncontents.qmd is an opening book chapter where we describe what you can expect in each chapter.\nindex.qmd is a file that contains the content of the first site of the repro book. It serves as the cover of the book.\nplausible.html is used to integrate Plausible Analytics, a privacy-focused web analytics tool. This file serves as a way to include the necessary HTML code to track website or document usage without compromising user privacy.\nreferences.bib is a file that contains information about all the references we use in our book. It is written using BibTex. If you contribute to this book and add new references, please make sure that these references are stored in this file.\nreferences.qmd is a closing chapter that lists all the mentioned references. It is automatically generated from the references.bib-file.\nrenv.lock is a file that saves R packages and their versions used in this book. If you contribute to this book and need additional R packages, please make sure that these packages are stored in this file.\nrepro-book.Rproj is a project file used by RStudio, an integrated development environment for R. It serves as a container for all files and settings related to a specific R project.\nsummary.qmd is a closing chapter of the book. It summarizes the most important insights.\n\n\n\n4.3 License\nCreative Commons Attribution 4.0 International (CC BY 4.0)\nFor details, see the LICENSE file.\n\n\n4.4 Contributors\n\n\n\n\n\n\n\nLennart Wittkuhn🐛 💻 🖋 📖 🎨 💵 🔍 🤔 🚇 🚧 🧑‍🏫 📆 📣 💬 🔬 👀 🛡️ 📢\n\n\nJustus Johannes Reihs🐛 💻 🤔 🚧 🔬 👀 🖋 📖\n\n\n\n\n\n\n\n\n\n\n\nA README.md-file can include a lot of content. When writing your README, consider your perspective as on-working researcher and other researchers that might want to reproduce parts of your project results.\n\n\n4.4.1 Separation of data and code\nAs seen in the Examples, many researchers separate data and code in different folders. It is also recommended to separate raw and clean (or tidy) data. When conducting experiments in psychology, raw data usually do not come in a way that lets you start analysing the data. Most (if not all) of the time, you need to configure the data. These configurations should be based on code (rather than clicking in a graphical user interface). The code that makes the raw data clean, should be included in the code folder of your project. In R, a popular method for data cleaning is the use of the tidyverse, which we will cover in the chapter about good coding practices.\n\n\n4.4.2 renv folder\nA renv folder helps you to create reproducible environments for your r projects. renv saves and lists all your R-packages used in your project. That means you have for each project an own project library in R. When you are working in R to run your data analyses, you can create the renv-folder directly. However, the use of renv is not intuitive, so we will cover the topic in another separate chapter.\n\n\n4.4.3 misc-folder\nThe abbreviation misc stands for miscellaneous. This folder is particularly useful for files that do not fit into one of your other folders. It saves you from having a chaotic project folder when entering your project.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Project Structure</span>"
    ]
  },
  {
    "objectID": "chapters/project-structure.html#description",
    "href": "chapters/project-structure.html#description",
    "title": "3  Project Structure",
    "section": "4.1 Description",
    "text": "4.1 Description\nWelcome to the Repro Book, an open-source online learning resource on reproducible research. The main goal of the Repro Book is to provide a companion online course text book for courses on reproducible research.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Project Structure</span>"
    ]
  },
  {
    "objectID": "chapters/project-structure.html#repository-structure",
    "href": "chapters/project-structure.html#repository-structure",
    "title": "3  Project Structure",
    "section": "4.2 Repository Structure",
    "text": "4.2 Repository Structure\n\n4.2.1 Folders\n.github/workflows is a folder that contains GitHub Actions workflows. Currently, two automatic workflows run automatically. This folder can be ignored by users who want to contribute to the book.\n_extensions is a folder that contains Quarto extensions. Currently, this book only uses the fontawesome-extension to create icons like this: . This folder can be ignored by users who want to contribute to the book.\nchapters is the heart of the book. The chapters folder contains all main chapters of the book. The content of each chapter is stored in its own .qmd file. If you want to contribute with content and modify chapters or create new ones, this is main the place where your adjustments take place.\nimages is a folder that does not contain images (yet). The images displayed in this book are stored in a NextCloud folder. If you want to contribute images to this book, please upload them to the NextCloud folder. For an explanation of how to use the images from NextCloud, see contributing.qmd.\nrenv is a folder that contains information about the R packages used in this book. If your contributions include the utility of an additional R package, see contributing.qmd for how to modify the relevant files.\n\n\n4.2.2 Files\n.Renviron is a file used in R that allows users to define environment variables.\n.Rprofile is a file used in R that allows users to customize their R sessions by specifying code that should be executed every time R starts.\n.all-contributorsrc is a file where the contributors of this project are listed. When you want to start working on this book, you will be included in this document. Content contribution is not affected by this file.\n.codespellrc is a file connected to a an automated codespell check at GitHub. Content contribution is not affected by this file.\n.gitignore is a file that specifies files and folders that should be ignored and not tracked by Git. It prevents certain files or directories that are not essential for the project or generated during the development process from being included in the version history. For more information about .gitignore, check out this link.\nLICENSE is a file where you can see what others are and are not allowed to do with this project.\nMakefile is a special text file that contains rules and instructions for automating the execution of software programs.\nREADME.md is the file you are currently reading. It provides basic information about a project and a description of a repository.\n_affiliations.yml is a metadata-file that contains information about the affiliations the contributors work at. If you contribute to this project and are affiliated to a different institution than University of Hamburg, you can extend the file for your institution.\n_authors.yml is a metadata-file that contains information about the authors of this project. If you contribute to this project as an author, you can extend the file for your information.\n_custom.scss is a used to customize the styling of Quarto documents by writing our own CSS (Cascading Style Sheets) rules.\n_quarto.yml is a metadata-file that configures the project settings. For example, it configures the book title and subtitle and how the book chapters are arranged. If you contribute to this project with a new chapter, you have to add the location of the chapter in a meaningful way to the chapters-section in the _quarto.yml-file.\n_quarto-pdf.yml is also a metadata-file that configures the project settings but only when we export the book to PDF.\n_variables.yml is a metadata-file that specifies variables in a project. It is possible to use the variables in the files that constitute the chapters or similar.\nacknowledgements.qmd is a closing book chapter where we describe which different tools we use for what.\ncontents.qmd is an opening book chapter where we describe what you can expect in each chapter.\nindex.qmd is a file that contains the content of the first site of the repro book. It serves as the cover of the book.\nplausible.html is used to integrate Plausible Analytics, a privacy-focused web analytics tool. This file serves as a way to include the necessary HTML code to track website or document usage without compromising user privacy.\nreferences.bib is a file that contains information about all the references we use in our book. It is written using BibTex. If you contribute to this book and add new references, please make sure that these references are stored in this file.\nreferences.qmd is a closing chapter that lists all the mentioned references. It is automatically generated from the references.bib-file.\nrenv.lock is a file that saves R packages and their versions used in this book. If you contribute to this book and need additional R packages, please make sure that these packages are stored in this file.\nrepro-book.Rproj is a project file used by RStudio, an integrated development environment for R. It serves as a container for all files and settings related to a specific R project.\nsummary.qmd is a closing chapter of the book. It summarizes the most important insights.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Project Structure</span>"
    ]
  },
  {
    "objectID": "chapters/project-structure.html#license",
    "href": "chapters/project-structure.html#license",
    "title": "3  Project Structure",
    "section": "4.3 License",
    "text": "4.3 License\nCreative Commons Attribution 4.0 International (CC BY 4.0)\nFor details, see the LICENSE file.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Project Structure</span>"
    ]
  },
  {
    "objectID": "chapters/project-structure.html#contributors",
    "href": "chapters/project-structure.html#contributors",
    "title": "3  Project Structure",
    "section": "4.4 Contributors",
    "text": "4.4 Contributors\n\n\n\n\n\n\n\nLennart Wittkuhn🐛 💻 🖋 📖 🎨 💵 🔍 🤔 🚇 🚧 🧑‍🏫 📆 📣 💬 🔬 👀 🛡️ 📢\n\n\nJustus Johannes Reihs🐛 💻 🤔 🚧 🔬 👀 🖋 📖",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Project Structure</span>"
    ]
  },
  {
    "objectID": "chapters/project-structure.html#yoda-principles",
    "href": "chapters/project-structure.html#yoda-principles",
    "title": "3  Project Structure",
    "section": "4.5 YODA principles",
    "text": "4.5 YODA principles",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Project Structure</span>"
    ]
  },
  {
    "objectID": "chapters/project-structure.html#optional-standards-for-research-projects",
    "href": "chapters/project-structure.html#optional-standards-for-research-projects",
    "title": "3  Project Structure",
    "section": "4.6 Optional standards for research projects",
    "text": "4.6 Optional standards for research projects",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Project Structure</span>"
    ]
  },
  {
    "objectID": "chapters/project-structure.html#structure-of-reproducibility-archives",
    "href": "chapters/project-structure.html#structure-of-reproducibility-archives",
    "title": "3  Project Structure",
    "section": "4.7 Structure of reproducibility archives",
    "text": "4.7 Structure of reproducibility archives\n\nThese are only comments. There is no aim of sufficiency and precision in the ideas below.\n\n\nDifferent for each project and journal, when it comes to paper publishing\nShow example of requirements of journal\nCritically discuss if journal requirements are sufficient for computational reproducibility\nSomething’s missing?\n\nBelow the line, the actual content starts\n\nIn the first subsections of the chapter, you have learned how to set up your own project structure. The structure is flexible to different occasions, e.g. working collaboratively with other team members, working at your own research project during your studies at university. Nevertheless, you have not learned what is actually required by journals when you need or want to make your data and code publicly available. To cover this topic, we will go into the details of open science requirements of a couple of journals.\n\n4.7.1 Requirements of Frontiers in Psychology\nThe TOP Guidelines by the Center of Open Science are a best practice formulation by journals, funders, and societies to implement better and more transparent research. The TOP Factor is a metric that reports the steps that a journal is taking to implement open science practices. Below you can see the TOP Factor evaluation of two psychological journals.\n\n\n\n\n\n\nLearn more: What is the TOP-Factor?\n\n\n\n\n\nThe TOP-FACTOR is a metric that assesses the open science policies of papers. It considers different dimensions, such as data transparency and materials transparency. In each dimension, a journal can achieve zero to three points. A journal receives zero points in a dimension, when it is not implemented in the open science policy. It receives three points in a dimension, when reproducibility of data and materials is not only required but also positively tested. The sum score over all dimensions constitutes the TOP Factor. The criteria for the scoring system is listed below:\n\n\n\n\n\n\n\n\n\n\n\nNOT IMPLEMENTED\nLEVEL I\nLEVEL II\nLEVEL III\n\n\n\n\nData Citation\nNo mention of data citation.\nJournal describes citation of data in guidelines to authors with clear rules and examples.\nArticle provides appropriate citation for data and materials used consistent with journal’s author guidelines.\nArticle is not published until providing appropriate citation for data and materials following journal’s author guidelines.\n\n\nData Transparency\nJournal encourages data sharing, or says nothing.\nArticle states whether data are available, and, if so, where to access them.\nData must be posted to a trusted repository. Exceptions must be identified at article submission.\nData must be posted to a trusted repository, and reported analyses will be reproduced independently prior to publication.\n\n\nAnalysis Code Transparency\nJournal encourages code sharing, or says nothing.\nArticle states whether code is available, and, if so, where to access it.\nCode must be posted to a trusted repository. Exceptions must be identified at article submission.\nCode must be posted to a trusted repository, and reported analyses will be reproduced independently prior to publication.\n\n\nMaterials Transparency\nJournal encourages materials sharing, or says nothing.\nArticle states whether materials are available, and, if so, where to access them.\nMaterials must be posted to a trusted repository. Exceptions must be identified at article submission.\nMaterials must be posted to a trusted repository, and reported analyses will be reproduced independently prior to publication.\n\n\nDesign & Analysis Reporting Guidelines\nJournal encourages design and analysis transparency, or says nothing.\nJournal articulates design transparency standards.\nJournal requires adherence to design transparency standards for review and publication.\nJournal requires and enforces adherence to design transparency standards for review and publication.\n\n\nStudy Preregistration\nJournal says nothing.\nArticle states whether preregistration of study exists, and, if so, where to access it.\nArticle states whether preregistration of study exists, and, if so, allows journal access during peer review for verification.\nJournal requires preregistration of studies and provides link and badge in article to meeting requirements.\n\n\nAnalysis Plan Preregistration\nJournal says nothing.\nArticle states whether preregistration of study exists, and, if so, where to access it.\nArticle states whether preregistration with analysis plan exists, and, if so, allows journal access during peer review for verification.\nJournal requires preregistration of studies with analysis plans and provides link and badge in article to meeting requirements.\n\n\nReplication\nJournal discourages submission of replication studies, or says nothing.\nJournal encourages submission of replication studies.\nJournal encourages submission of replication studies and conducts results blind review.\nJournal uses Registered Reports as a submission option for replication studies with peer review prior to observing the study outcomes.\n\n\n\nTOP Guidelines Summary Table. License: CC BY 4.0. Used without any modifications.\n\n\n\n\nFrontiersAMPPS\n\n\nTOP-Factor assessment of Frontiers in Psychology\n\n\n\n\n\n\n\n\n\nGUIDELINE\nLEVEL\nSUMMARY\nJUSTIFICATION\n\n\n\n\nTotal\n13\n\n\n\n\nData Citation\n1\nJournal describes citation of data in guidelines to authors with clear rules and examples.\n“Authors are encouraged to cite all datasets generated or analyzed in the study.” Includes example.\n\n\nData Transparency\n2\nData must be posted to a trusted repository. Exceptions must be identified at article submission.\n“Frontiers is committed to open science and open data; we require that authors make available all data relevant to the conclusions of the manuscript.”\n\n\nAnalysis Code Transparency\n2\nCode must be posted to a trusted repository. Exceptions must be identified at article submission.\n“Frontiers is committed to open science and open data; we require that authors make available all code used to conduct their research available to other researchers.”\n\n\nMaterials Transparency\n2\nMaterials must be posted to a trusted repository. Exceptions must be identified at article submission.\n“Authors are required to make all materials used to conduct their research available to other researchers.”\n\n\nDesign & Analysis Reporting Guidelines\n0\nJournal encourages design and analysis transparency, or says nothing.\nNo mention.\n\n\nStudy Preregistration\n0\nJournal says nothing.\nNo mention.\n\n\nAnalysis Plan Preregistration\n0\nJournal says nothing.\nNo mention.\n\n\nReplication\n3\nJournal uses Registered Reports as a submission option for replication studies with peer review prior to observing the study outcomes.\nJournal accepts Registered Reports.\n\n\nRegistered Reports & Publication Bias\n3\n\nJournal accepts Registered Reports.\n\n\nOpen Science Badges\n0\n\nNo mention.\n\n\n\nOpen access policy of Frontiers in Psychology summarised by TOP Factor. License: CC BY 4.0. Used without any modifications.\n\n\nTOP-Factor assessment of Advances in Methods and Practices in Psychological Science\n\n\n\n\n\n\n\n\n\nGUIDELINE\nLEVEL\nSUMMARY\nJUSTIFICATION\n\n\n\n\nTotal\n25\n\n\n\n\nData Citation\n2\nArticle provides appropriate citation for data and materials used consistent with journal’s author guidelines.\nJournal requires data citation.\n\n\nData Transparency\n2\nData must be posted to a trusted repository. Exceptions must be identified at article submission.\nJournal requires data sharing.\n\n\nAnalysis Code Transparency\n2\nCode must be posted to a trusted repository. Exceptions must be identified at article submission.\nJournal requires code sharing.\n\n\nMaterials Transparency\n2\nMaterials must be posted to a trusted repository. Exceptions must be identified at article submission.\nJournal requires materials sharing.\n\n\nDesign & Analysis Reporting Guidelines\n3\nJournal requires and enforces adherence to design transparency standards for review and publication.\nAdherence to reporting guidelines is enforced.\n\n\nStudy Preregistration\n3\nJournal requires preregistration of studies and provides link and badge in article to meeting requirements.\nPreregistration is required.\n\n\nAnalysis Plan Preregistration\n3\nJournal requires preregistration of studies with analysis plans and provides link and badge in article to meeting requirements.\nAnalysis plan preregistration is required.\n\n\nReplication\n3\nJournal uses Registered Reports as a submission option for replication studies with peer review prior to observing the study outcomes.\nJournal accepts Registered Reports for replication studies.\n\n\nRegistered Reports & Publication Bias\n3\n\nJournal accepts Registered Reports for novel studies.\n\n\nOpen Science Badges\n2\n\nJournal offers all Open Science Badges.\n\n\n\n\n\n\nAs you can see, journals do include requirements of public data and code for publishing articles. However, the specification of how to do that is scarce. Standards for research projects as stated above are missing. We further look at some examples of the application of open data and code policies in published articles.\n\n\n4.7.2 Current application of open science practices\n\nFrontiersAMPPS\n\n\n\n\n\n\n\n\n\nClick on the following links to explore the reproducibility archives:\n\nFrontiers: Laulié et al. (2023) \\(\\rightarrow\\) Reproducibility Archive\nAMPPS: Nuijten & Wicherts (2024) \\(\\rightarrow\\) Reproducibility Archive\n\n\n\n\n\n\n\nExercise: Study reproducibility archives\n\n\n\nInvestigate the links above and think about how these archives could help you to reproduce the analysis conducted in their papers. What is helpful and what is not?\n\n\nAgain, it should be noted that there is no perfectly organized reproducibility archive. However, we hope that the displayed examples show that open science, open data and reproducibility can be applied in many different (and sadly sometimes insufficient) ways.\n\n\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Project Structure</span>"
    ]
  },
  {
    "objectID": "chapters/rdm.html",
    "href": "chapters/rdm.html",
    "title": "4  Research Data Management",
    "section": "",
    "text": "4.1 Introduction",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Research Data Management</span>"
    ]
  },
  {
    "objectID": "chapters/rdm.html#introduction",
    "href": "chapters/rdm.html#introduction",
    "title": "4  Research Data Management",
    "section": "",
    "text": "Group Exercise: Identifying and Discussing Problems with Research Data Management\n\n\n\n\n\n\nForm Groups:\n\nDivide participants into Home Groups (3–6 members per group).\nAssign each member of the Home Group a number (e.g., 1, 2, 3…).\n\nStudy Examples in Expert Groups:\n\nAll participants with the same number will form an Expert Group.\nEach Expert Group will analyze an assigned example of bad research data management (e.g., incomplete documentation, lack of backups, inconsistent formats).\nDiscuss the example, identify key issues, and note down why the practices are problematic.\n\nReturn to Home Groups:\n\nMembers return to their original Home Group.\nTake turns presenting the findings from your Expert Group.\nWork together to discuss patterns, lessons learned, and potential solutions.\n\nFinal Discussion:\n\nAs a group, summarize key takeaways about avoiding bad research data management.\nPrepare to share insights with the larger group if asked.\n\n\nGoal: By the end of the exercise, you’ll collaboratively identify common pitfalls in research data management and propose better practices.\n\n\n\n\n\n\n\n\n\nVideo 4.1: “Data Sharing and Management Snafu in 3 Short Acts”. The video by Hanson, Surkis, and Yacobucci (2019) from NYU Health Sciences Library features a cute animated panda researcher making a data sharing request to a bear researcher. It does not go well. The video aims to communicate some of the common and avoidable pitfalls of research data management in a light-hearted format. Topics include storage, documentation, and file formats. The video was produced using a tool called Xtranormal (now “nawmal”) and the characters are strangely expressive while talking in robotic text-to-speech voices with a limited range of movement. It was created and uploaded to YouTube by librarians at NYU School of Medicine in 2012 to be used for research data management education and has been included in numerous research data management courses and presentations. License: Creative Commons Attribution 4.0 International (CC BY 4.0). Reused without modifications.\n\n\n\n\n\n\n\n\n\nThe story of Reinhart & Rogoff\n\n\n\nIn 2010, the US economists Reinhart and Rogoff presented a research paper called Growth in a Time of Debt at the annual meeting of the American Economic Association. They found that economic growth slows dramatically when a country’s debt size rises above 90% of Gross Domestic Product (Reinhart and Rogoff 2010). EU Commissioner Olli Rehn and US Republican Paul Ryan both quoted a 90% debt-to-GDP limit to support political austerity strategies.\nMeanwhile, a student at the University of Massachusetts, Thomas Herndon, received a class assignment to reproduce the results of a research article. Herndon chose the article by Reinhart and Rogoff (2010) and failed to reproduce their results repeatedly, even after supervision with his professor.\nSubsequently, Herndon requested the spreadsheet from the authors of Reinhart and Rogoff (2010). He then realized that the paper contained selective data selection, odd data averaging methods, and coding errors that led to substantial miscalculations (Herndon, Ash, and Pollin 2014).\nHerndon, Ash, and Pollin (2014) concluded that the results of Reinhart and Rogoff (2010) are much less dramatic than originally assumed. However, the basic tendency that economic growth slows down with higher debt still held true.\nWhat matters most about this story is that Reinhart and Rogoff were able to share their original spreadsheet and that the results were then reproducible. Thus, reproducibility can enhance the scientific, and in this example the political, discussion about research findings and their implications for society.\n\n\n\n\n\n\n\n\nExcel exercise\n\n\n\n\nOpen an Excel Sheet\n\nSet the first column to date-format\n\nEnter the year 2010 into the cell A1\n\nIsn’t it spectacular that Excel rendered your entry as 2nd July 1905?\nThink about this phenomenon in your research context: What problems might arise when using Excel?\n\n\n\n\n\n\n\n\nMore problems when using Excel …\n\n\n\nAs the exercise above showed, Excel can automatically convert specific data entries. In many everyday cases, this seems to be useful, for example for autocompletion of dates. However, in a research context, such conversions hinder reproducibility efforts. Thus, we highly recommend using  and RStudio to read and analyze data.\nThe described phenomenon of Excel conversions is highly prevalent in the scientific research area of biogenetics. A meta-analysis found that roughly 20% of published genetic research was affected by Excel errors (Ziemann, Eren, and El-Osta 2016). Instead of changing Excel’s default options, this situation led to a change in scientific standards. The HUGO Gene Nomenclature Committee (HGNC) updated their guidelines on how to name genes. It was easier to rename genes than to update Excel!\n\n\n\n\n\n\nFigure 4.1: “Excel converting genes” by The Verge (License: ; reused without modifications)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Research Data Management</span>"
    ]
  },
  {
    "objectID": "chapters/rdm.html#benefits-of-research-data-management",
    "href": "chapters/rdm.html#benefits-of-research-data-management",
    "title": "4  Research Data Management",
    "section": "4.2 Benefits of research data management",
    "text": "4.2 Benefits of research data management\nManaging data well throughout the research process is crucial for successful research outcomes, including:\n\nUpholding research integrity and reproducibility\nImproving research productivity\nEnsuring the accuracy, completeness, authenticity, and reliability of research data and records\nSaving time and resources in the future\nStrengthening data security and reducing the likelihood of data loss\nAvoiding redundant work by facilitating data sharing\nMeeting the grant requirements of funding bodies\nAdhering to industry and commerce practices.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Research Data Management</span>"
    ]
  },
  {
    "objectID": "chapters/rdm.html#modularity-of-research-data",
    "href": "chapters/rdm.html#modularity-of-research-data",
    "title": "4  Research Data Management",
    "section": "4.3 Modularity of research data",
    "text": "4.3 Modularity of research data\nWhat we expect the data to look like …\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.2: “Research Data Management explained with pasta: Source data” by Remi Gau (License: CC BY 4.0; reused without modifications)\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.3: “Raw data (Research Data Management explained with Pasta)” by Remi Gau (License: CC BY 4.0; reused without modifications)\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.4: “Derivative data (Research Data Management explained with Pasta)” by Remi Gau (License: CC BY 4.0; reused without modifications)\n\n\n\n\n\n\nWhat the dataset actually looks like …\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.5: “Shared dataset (Research Data Management explained with Pasta)” by Remi Gau (License: CC BY 4.0; reused without modifications)\n\n\n\n\n\n\n\n\n\n\n\nFigure 4.6: “Shared dataset with a README (Research Data Management explained with Pasta)” by Remi Gau (License: CC BY 4.0; reused without modifications)\n\n\n\n\n\n\n\nIn software design, modularity refers to a logical partitioning of the “software design” that allows complex software to be manageable for the purpose of implementation and maintenance (Wikipedia Contributors 2025).\n\n\n\n\n\n\n\nTip\n\n\n\nEven though this section deals with modularity of data, the concept of modularity can also be applied to code.\n\n\nThe photo series displayed above shows how expectation and reality differ in terms of how well data is prepared. Reading a methods section of a published paper suggests a clear, tidy, and logic structure of the data and the respective analyses. When diving into the actual datasets, many things seem messy. Then, also a README will not help. Thus, it makes sense to have research data management from the beginning on in mind.\n\n\n\n\n\n\nQuestions helping to manage research data\n\n\n\n\nHow should my data look like before data analyses?\nWhich analyses do I want to conduct? Do they have special requirements for data?\nWhat would I need to reproduce my analyses in 10 years?\n\n\n\nModularity is a widely used concept for research data management. When applying the concept of modularity, data is stored in different phases of the research process, e.g. source data, raw data, and derivative data. Source data is typically the data as you get them. This can be the output of a software program (e.g. LimeSurvey or Unipark), pen-and-paper questionnaires, etc. Raw data is typically the digital form of the source data. When your data is originally collected via pen-and-paper-questionnaires, somehow the data must be transferred to a digital format. When the data is collected directly via software programs, source data and raw data remain the same. Derivative data is typically the data as you report them in a paper or a poster. This contains descriptive and inferential statistics, tables, and figures. Often, derivative data is stored in a results folder of a research project.\n\n\n\n\n\n\nNote\n\n\n\nThe terms of source, raw, tidy, and derivative data are not absolute. They rather reflect a personal understanding of the authors. It makes sense to talk with your research team what you mean by which term. For other researchers, document what you mean by which term e.g. in a README.\n\n\n\n\n\n\n\n\nTidy data as additional modular data\n\n\n\nIn Section 5.5, we will introduce another data module, called tidy data. Tidy data reflect the data as you analyze them. Thus, separation between data preprocessing and data analyses is enforced.\n\n\nBenefits of modular data:\n\neasier understanding of different analysis steps\neasier extraction of data for the conduction of own analyses\n\nBurden of modular data:\n\nprobably need for file-dependency file\nhigher risk for chaotic project structure",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Research Data Management</span>"
    ]
  },
  {
    "objectID": "chapters/rdm.html#fair-principles",
    "href": "chapters/rdm.html#fair-principles",
    "title": "4  Research Data Management",
    "section": "4.4 FAIR principles",
    "text": "4.4 FAIR principles\n\n\n\n\n\n\nFigure 4.7: “FAIR” by U.S. National Library of Medicine (License: Public Domain Mark 1.0 Universal (PDM 1.0); Any such works found on National Library of Medicine (NLM) Web sites may be freely used or reproduced without permission in the U.S.)\n\n\n\nWilkinson et al. (2016) published the FAIR principles for research data management. FAIR stands for Findable, Accessible, Interoperable, and Reusable. FAIR is a popular concept that has been adopted for various research properties, such as FAIR data and FAIR research software (Wilkinson et al. 2016; Barker et al. 2022).\nThe FAIR data principles were originally introduced to enhance the machine readability of data. As a side effect, human readability also increased. However, enhancing reproducibility was not a primary goal when implementing FAIR principles.\nThus, we will only address two concepts we believe are relevant for computational reproducibility: persistent identifiers, such as Digital Object Identifiers (DOIs), and metadata. DOIs make your scientific output (e.g., articles, datasets, code) findable, thereby enhancing the possibility of other researchers reproducing your scientific output.\n\n\n\n\n\n\nWhat is a Digital Object Identifier (DOI)?\n\n\n\n\n\nA Digital Object Identifier (DOI) is a unique alphanumeric string assigned to a digital document or resource to provide a permanent and stable link to it. DOIs are commonly used to identify and provide a persistent link to scholarly articles, research papers, books, datasets, and other types of digital content. The purpose of a DOI is to ensure that the content can be reliably located and accessed over time, even if the web address (URL) of the resource changes.\nKey features of DOIs include:\n\nUniqueness: Each DOI is unique to a particular resource, ensuring that no two resources have the same identifier.\nPersistence: DOIs are designed to remain unchanged, providing a persistent link to the resource even if it is moved or the URL changes.\nInteroperability: DOIs are widely used in scholarly publishing and other sectors, making them interoperable across different systems and platforms.\nAccessibility: DOIs are often associated with metadata that provides information about the resource, such as author, title, publisher, publication date, and more.\nCitations: DOIs are commonly used in academic and scientific citations to provide a standardized and reliable reference to a specific resource.\n\nDOIs are typically assigned and managed by registration agencies, such as CrossRef for scholarly content or DataCite for research data. Organizations and publishers assign DOIs to their digital content to enhance discoverability, citation tracking, and long-term accessibility.\n\n\n\n\n\n\n\n\n\nHow to set up a persistent identifier with OSF?\n\n\n\n\n\n\nGo to https://osf.io/.\nLog in or sign up.\nClick on My Projects on the top bar.\n\nClick on the green button Create Project.\nType in a title (you can change it later).\nSpecify your storage location.\nClick on the green button Create.\nInsert all your data, code, and metadata.\nMake your project public — this will generate a DOI.\n\n\n\n\n\n\n\n\n\n\nHow to set up a persistent identifier with Zenodo?\n\n\n\n\n\nThe version control book by Wittkuhn and Pagenstedt (2024) gives a detailed instruction on how to set up a DOI with Zenodo. We therefore ask you to read the respective chapter.\n\n\n\n\n\n\n\n\n\nWhat is metadata?\n\n\n\n\n\nA short definition is that metadata is data about your data. More thoroughly, metadata is a set of data that describes and gives information about other data. However, metadata does not contain the data itself.\n*Example:\nImagine you write a text message to one of your friends. The data would be your message. Metadata would contain information about the forwarder, the recipient, the time the message was sent, the used device, and so on …\nThe same applies to your research data. Metadata contains information about your project, variable names and labels, response formats, affiliations, etc. Remember the pandas wondering what all the variables Sam1, …, Sam4 mean? That is what you can describe with metadata.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Research Data Management</span>"
    ]
  },
  {
    "objectID": "chapters/rdm.html#data-organization",
    "href": "chapters/rdm.html#data-organization",
    "title": "4  Research Data Management",
    "section": "4.5 Data organization",
    "text": "4.5 Data organization\nThere are many different ways to organize your data. There is really no right or wrong here, but there are some valuable guidelines aimed at enhancing reproducibility. Data organization is not only about folder structure and precise naming. It is also about choosing file formats that enhance usability for both humans and machines. Further, it includes the use of metadata to describe your data. Due to the variety of organizational styles, you should establish a consistent approach to organizing your data. Thus, you need to apply a standard for your data.\n\n4.5.1 Data standards\n\n\n\n\n\n\nFigure 4.8: “Standards” by xkcd.com (Randall Munroe) (License: CC BY-NC 2.5; reused without modifications)\n\n\n\n\n4.5.1.1 Questions to ask yourself:\n\nWhat data are you working with?\nWhich analysis pipelines are you working with?\nIs there a community standard?\n\nFirst, you should consider the type of data you are working with. EEG data might have different requirements than MRI data, eye-tracking data, cardiological data, questionnaire data, and so on. How complex is your data, and how should it be arranged?\nSecond, after determining your data type, you’ll realize that you’ll face specific analysis pipelines. For example, raw EEG data must be handled differently from MRI data, and so on. You might need to use specific analysis software that requires certain file formats or other specific requirements.\nThird, check whether there is a standard in your scientific community. Community standards help to organize your data, facilitating cooperation between different labs and ensuring consistency within your own lab. Additionally, if you want to reproduce data, you will have a harder time if the data is organized in a format you are not familiar with. Adopting a widely used data organization style will make reproducibility much easier.\n\n\n4.5.1.2 Example: Brain Imaging Data Structure (BIDS)\n\n\n\n\n\n\nFigure 4.9: “Illustration of a BIDS structured dataset” by Gorgolewski et al. (2016) (License: CC BY 4.0; reused without modifications)\n\n\n\nThe community standard Brain Imaging Data Structure (BIDS) was introduced by Gorgolewski et al. (2016), providing a data organization standard for the neuroimaging scientific community. MRI research faced the issue of producing many different output files, ranging from plain text to multidimensional image data files. Additionally, different scanners produced different output files, and there was no consensus on how to organize and share these data. This led to misunderstandings, wasted time rearranging data, and potential sources of error.\nReproducing the entire BIDS standard in all its facets would be beyond the scope of this book. Thus, we will focus on high-level concepts that could be analogously applied to a variety of scientific projects.\n\n\n\n\n\n\nSteps to create a BIDS compatible dataset\n\n\n\n\nConvert files\nCreate folder structure, rename, and copy files\nAdd remaining data\nAdd missing metadata\nValidate the dataset\n\n\n\nWhen your data analysis pipeline requires your data to be in a specific format, make sure to convert your data files into the correct format. Specific software is often used for this purpose in MRI research. In survey-based research, this might not be too complicated. However, when extracting data from your survey servers (such as Unipark or LimeSurvey), ensure you use the correct format.\nBIDS includes its own folder structure for research projects. When you have your own research project, ensure it aligns with our recommendations from Chapter 2 and project-structure.\nSometimes, you might need to add more information that was not captured during your data collection process (e.g., details of experimental tasks and additional demographic information of participants).\nIn BIDS, metadata files are created when converting files from one format to another. However, these metadata files may not be exhaustive. You might want to include task descriptions, task instructions, and so on. Section 4.6 describes which metadata can be used in less complex data management scenarios.\nA nice feature of BIDS is the BIDS Validator. It checks if any required or recommended metadata is missing. It also identifies incorrect definitions of missing values, wrong units, missing scans, and inconsistent scanning parameters across subjects. Even though you are unlikely to apply the validator outside of neuroimaging, the concept is quite powerful. We have provided a small section about verifying your code, which tackles the same topic but focuses more on your code than on your data. Click here to go to the section (section not merged yet).\n\n\n\n\n\n\nBenefits of BIDS\n\n\n\nWhat makes BIDS truly beneficial are BIDS apps. BIDS apps are automatically compatible with BIDS datasets. One example of such an app is fMRIPrep. This app provides researchers working with fMRI data an easy workflow for preprocessing fMRI data (Esteban et al. 2019). fMRIPrep automates several steps without requiring manual intervention from the researcher. Thus, BIDS, combined with its apps, is a powerful tool for saving time and effort as a researcher.\n\n\nfMRIPrep highlights another benefit of data organization standards: When many people rely on such a standard, new innovations emerge that improve the workflow.\nPreviously, preprocessing fMRI data was a time-consuming task for PhD students and PostDocs in the field of neuroimaging. With fMRIPrep, this process can be done automatically and without manual intervention. By applying the BIDS standard and fMRIPrep to your data, you will require far fewer resources to understand others’ analysis pipelines using the same standards. However, a data organization standard works well only when a lot of people use it. That is one reason why BIDS is successful: It is widely used in the field of neuroimaging.\n\n\n4.5.1.3 Example: Psychological Data Structure (Psych-DS)\nThe Psychological Data Structure (Psych-DS) aims to apply the principles of BIDS to behavioral data. Thus, it is heavily based on BIDS. The core idea is to consistently organize data, facilitating data sharing and enhancing the understanding of the data. There is also a guide to help researchers organize their research projects. Like BIDS, Psych-DS provides a validation tool that checks if the data organization has been done correctly. It also has the CEDAR wizard, a tool which creates a standard .json file. This file contains metadata informationen important to understand the dataset(s) someone is working within a project.\nHowever, Psych-DS has not been widely adopted by researchers, and its development is not as fast as that of BIDS. Therefore, it does not yet have extension tools like fMRIPrep. Nevertheless, Psych-DS could have more impact if more people began using it. The benefit of Psych-DS is clearly its adaptation to behavioral data structures, which can be applied by a wide range of research communities in psychology.\n\n\n\n\n\n\nMinimum requirements of a Psych-DS congruent project\n\n\n\n\n\n\none folder for your study / research project\ninside that folder, there must exist a folder called data\ninside the data folder, all data must be with .csv extension\nif the primary data was not a .csv-file, it must be stored in another subfolder called raw\n.csv-files in the data folder must have the suffix _data.csv\ndeliberate use of - and _ to name data files as in Section 2.4.3.1\nnext to to the data folder a metadata file must exist, named dataset_description.json (see CEDAR wizard)\n\n\n\n\n\n\n\nMetadata requirements\n\n\n\n\n\"name\" - A name for the dataset\n\"description\"- A description for the dataset, which can be as long or as short as you like\nvariableMeasured - A list of all the variable names that appear anywhere in the CSV file headers in your dataset\n\n\n\n\n\n\n\n\n\nExample of a Psych-DS sample folder\n\n\n\n\n\nZebra-Questionnaire-Project/\n    dataset_description.json\n    analysis/\n        myanalysisfiles.R\n        my_excel_data.xlsx\n    data/\n        version-alltrials_participant-001_data.csv\n        version-alltrials_participant-002_data.csv\n        version-alltrials_participant-003_data.csv\n        version-nofillers_data.csv\n        summary-session_data.csv\n        raw/\n            questionnaire1.jpg\n            questionnaire2.jpg\n            questionnaire3.jpg\n\n\n\nInformation were extracted from the Psych-DS guide\n\n\n\n\n\n\n4.5.2 Rectangular Data\nIf you do not have a community standard specifying the data organization, we highly recommend using the rules of rectangular data as proposed by Broman and Woo (2018).\n\n\n\n\n\n\nRules of rectangular data (Broman and Woo 2018)\n\n\n\n\nBe consistent.\nChoose good names for things (see Chapter Naming things).\nWrite dates in the format YYYY-MM-DD (see Chapter Naming things).\nDo not leave empty cells.\nPut just one thing in a cell.\nMake it a rectangle.\nCreate a data dictionary (see Section 4.6).\nDo not perform calculations in the raw data files.\nDo not use font color or highlighting as data.\nMake backups.\nUse data validation to avoid errors (see Section 5.6.1).\nSave the data in plain text files.\n\n\n\nWe will not go into detail on rules 2, 3, and 6, because we have either already covered these topics earlier or will address them in a separate section later.\n\n4.5.2.1 Be consistent\nIt sounds easier than it is. If you organize your data consistently from the start, you will not have to spend additional time later “harmonizing” the data. To do so, use consistent codes for categorical variables (decide between different versions of male, Male, m, M). Use a consistent fixed code for any missing values (we prefer using NA, but avoid -999 or similar). Use consistent variable names (decide between saliva_10wk, Saliva_10wk, sal_week10, etc.). Use consistent subject identifiers (decide between 003, pcp003, person-003, etc.). Use a consistent data layout across multiple files. It would be extra work to combine files with different layouts. Use consistent file names (decide between TSST_VR_2024-11-19.csv, 2024-11-19_TSST_virtual-reality.csv, etc.). Use a consistent format for all dates (see Section 2.7.1.3). Use consistent phrases in notes if you have a separate column for them. Be careful about extra spaces within cells (e.g., the difference between male and male).\n\n\n4.5.2.2 No empty cells\nDo fill out every cell. When information is missing, use a common code to indicate that it is missing (preferably NA). Merging cells, as you can in Excel, is not recommended, since it will leave some cells empty. Repeat repeating values. If you leave cells empty, it will be harder to infer the repeating values, particularly after some data wrangling.\n\n\n4.5.2.3 Put just one thing in a cell\nIn one piece of a spreadsheet, which is a cell, there should only be one piece of information. Do not include units in your cells. It is better to put units in a data dictionary (see Section 4.6). The same applies to notes. Instead of writing 0 (below threshold), create a new column called note and write 0 in the first column and below threshold in the second.\n\n\n4.5.2.4 Make it a rectangle\nAs your data usually resides in a two-dimensional spreadsheet, it is best to layout your data in a two-dimensional format as well. Use columns for variables and rows for subjects or observations. The first row should contain variable names. If some data do not fit into one dataset, create a set of rectangular datasets and save them in separate files. Do not use multiple header rows. You can further apply the concept of tidy data (Wickham 2014) to your rectangular dataset (see Section 5.5).\n\n\n\n\n\n\nExample of multiple header rows\n\n\n\n\n\n\n\n\nA\nB\nC\nD\nE\n\n\n\n\n\nday_1\n\nday_2\n\n\n\nID\nsleep\nsport\nsleep\nsport\n\n\n34\n7.5\n3\n6\n0.5\n\n\n35\n8\n0\n8.5\n0.5\n\n\n36\n6\n2.5\n7.5\n3\n\n\n\nNote: This table deviates from the rectangle form. It also leaves multiple cells empty\n\n\n\n\n\n4.5.2.5 No calculations in the raw data files\nPrimary data should just be data. Only data. There should be no means and standard deviations calculated in that primary data. Use scripts to calculate whatever you want, but do not make changes in the primary dataset.\n\n\n4.5.2.6 Do not use font color or highlighting as data\nIf you identify outliers or other information you want to highlight, do not highlight them using visualization. Instead, create a new column called outlier and mark the identified outliers as TRUE and the others as FALSE. Visualization is useful in the short term, but it makes it difficult to extract this information for later analysis.\n\n\n4.5.2.7 Make Backups\nBack up your data regularly in multiple locations. Consider using a version control system like Git (see Version Control Book). When you have finished entering data, write-protect your data file. This ensures that you do not accidentally make changes to your dataset.\n\n\n\n\n\n\nWrite-protecting your data\n\n\n\n\n\n\n Mac Windows Linux\n\n\n\nOpen the folder in Finder where your file is located.\nRight-click on your file.\nClick on Get Info.\nOpen the section Sharing & Permissions.\nClick on Privilege next to your user account.\nSelect Read only.\n\n\n\n\nOpen the folder in Windows Explorer where your file is located.\nRight-click on your file.\nClick on Properties.\nSelect the General tab.\nNavigate to the Attributes section.\nCheck the box for Read-only.\nConfirm your choice by clicking the OK button.\n\n\n\nTBA\n\n\n\n\n\n\n\n\n4.5.2.8 Use Data Validation to Avoid Errors\nEnsure that your entered data is error-free by applying data validation techniques. You can create validation rules using the R package assertr (Fischetti 2023) and its function verify() (see Section 5.6.1).\n\n\n4.5.2.9 Save data in plain text files\nWe recommend saving your data files in .csv format. csv stands for “comma-separated values”. This file format is basic and not visually appealing. However, it requires no special software to open and is easy to handle in code. Thus, it enhances computational reproducibility. In countries where commas are used as decimal separators, tab-delimited text files (.tsv) might be an appropriate alternative to .csv. Note that if you have highlighted cells or applied any special features in an Excel file, these features will be lost when saving the file as .csv or .txt.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Research Data Management</span>"
    ]
  },
  {
    "objectID": "chapters/rdm.html#sec-dictionary",
    "href": "chapters/rdm.html#sec-dictionary",
    "title": "4  Research Data Management",
    "section": "4.6 Data dictionaries",
    "text": "4.6 Data dictionaries\nIn addition to rectangular data, it is also valuable to have a data dictionary describing how your data is structured. The data dictionary is also sometimes referred to as a codebook. Your dictionary enhances the understandability of your entire research project and is therefore crucial for computational reproducibility. According to Broman and Woo (2018), your dictionary should contain:\n\nThe exact variable name as in your data file.\n\nA version of the variable name that might be used in data visualizations.\n\nA longer explanation of what the variable means.\n\nThe measurement units.\n\nExpected minimum and maximum values.\n\nHowever, more information can be stored in your dictionary. When analyzing data collected from a survey, a variable in your dataset will likely represent an item from that survey. You can then provide information on:\n\nThe item in the survey.\nThe original wording of the item.\nThe subscale the item belongs to\nThe author responsible for that item/subscale.\nThe response format for the item.\nSpecial considerations regarding the item.\n\nIdeally, your data dictionary should also be stored in a rectangular format. Another option is to use a .json file. This offers more flexibility but also presents a new challenge in organizing the data.\n\n\n\n\n\n\nLearn more: What is a json file?\n\n\n\n\n\njson stands for JavaScript Object Notation. Thus, everything you write in that file must adhere to the JSON notation style. It would be beyond the scope of this book to explain how data in a .json file should be formatted. However, you can see a small example below to get a sense of how a .json file looks. If you want to dive deeper into the use of .json files, we recommend this Video that explains JSON more thoroughly.\n\n\n\njson Code\n\n[\n  {\n    \"name\": \"agr1\",\n    \"item_wording\": \"I make people feel at ease.\",\n    \"type\": \"numeric\",\n    \"scale\": \"agreeableness\",\n    \"min_value\": 1,\n    \"max_value\": 5\n  },\n  {\n    \"name\": \"agr2\",\n    \"item_wording\": \"I love children.\",\n    \"type\": \"numeric\",\n    \"scale\": \"agreeableness\",\n    \"min_value\": 1,\n    \"max_value\": 5\n  }\n]",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Research Data Management</span>"
    ]
  },
  {
    "objectID": "chapters/rdm.html#acknowledgements",
    "href": "chapters/rdm.html#acknowledgements",
    "title": "4  Research Data Management",
    "section": "4.7 Acknowledgements",
    "text": "4.7 Acknowledgements\nDr. Maike Kleemeyer and the Research Data Management and Open Science working group at the Max Planck Institute for Human Development, Berlin.\n\n\n\n\nBarker, Michelle, Neil P. Chue Hong, Daniel S. Katz, Anna-Lena Lamprecht, Carlos Martinez-Ortiz, Fotis Psomopoulos, Jennifer Harrow, et al. 2022. “Introducing the FAIR Principles for Research Software.” Scientific Data 9: 622. https://doi.org/10.1038/s41597-022-01710-x.\n\n\nBroman, Karl W., and Kara H. Woo. 2018. “Data Organization in Spreadsheets.” The American Statistician 72 (1): 2–10. https://doi.org/10.1080/00031305.2017.1375989.\n\n\nEsteban, Oscar, Christopher J. Markiewicz, Ross W. Blair, Craig A. Moodie, A. Ilkay Isik, Asier Erramuzpe, James D. Kent, et al. 2019. “fMRIPrep: A Robust Preprocessing Pipeline for Functional MRI.” Nature Methods 16 (January): 111–16. https://doi.org/10.1038/s41592-018-0235-4.\n\n\nFischetti, Tony. 2023. Assertr: Assertive Programming for r Analysis Pipelines. https://doi.org/10.32614/CRAN.package.assertr.\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.\n\n\nHanson, Karen, Alisa Surkis, and Karen Yacobucci. 2019. “Data Sharing and Management Snafu in 3 Short Acts.” https://doi.org/10.6084/M9.FIGSHARE.8061722.V1.\n\n\nHerndon, Thomas, Michael Ash, and Robert Pollin. 2014. “Does High Public Debt Consistently Stifle Economic Growth? A Critique of Reinhart and Rogoff.” Cambridge Journal of Economics 38 (2): 257–79. https://doi.org/10.1093/cje/bet075.\n\n\nReinhart, Carmen M., and Kenneth S. Rogoff. 2010. “Growth in a Time of Debt.” American Economic Review 100 (2): 573–78. https://doi.org/10.1257/aer.100.2.573.\n\n\nWickham, Hadley. 2014. “Tidy Data.” Jornal of Statistical Software 59 (10): 1–23. https://doi.org/10.18637/jss.v059.i10.\n\n\nWikipedia Contributors. 2025. “Modularity.” https://en.wikipedia.org/wiki/Modularity.\n\n\nWilkinson, Mark D., Michel Dumontier, IJsbrand Jan Aalbersberg, Gabrielle Appleton, Myles Axton, Arie Baak, Niklas Blomberg, et al. 2016. “The FAIR Guiding Principles for Scientific Data Management and Stewardship.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.18.\n\n\nWittkuhn, Lennart, and Konrad Pagenstedt. 2024. Version Control Book. ZFDM Repository. https://doi.org/10.25592/uhhfdm.14149.\n\n\nZiemann, M., Y. Eren, and A. El-Osta. 2016. “Gene Name Erorrs Are Widespread in the Scientific Literature.” Genome Biology 17 (August). https://doi.org/10.1186/s13059-016-1044-7.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Research Data Management</span>"
    ]
  },
  {
    "objectID": "chapters/good-coding-practices.html",
    "href": "chapters/good-coding-practices.html",
    "title": "5  Good Coding Practices",
    "section": "",
    "text": "5.1 R projects\nAs a researcher (and as a student), you work on different projects simultaneously. You have different research projects and teaching parts that you need to cover in your job. You attend different courses and give presentations and perform data analyses in these seminars and lectures. As you learned in the previous chapter about project structure, it makes sense to set up your files and folders in a particular research project folder.\nOutput\n\nprojects/\n├── version-control-book\n├── reproducibility-book\n├── grant_neuroscience_horizon\n├── grant_neuroscience_dfg\nWe highly recommend to use specific R-projects for each project, respectively. This will become clear throughout this chapter and the next chapter about renv.\nTo create an R-project, follow these steps:\nDepending on your situation, it makes sense to either create a new directory or turn an existing folder into an R project.\nWhen you are at the beginning of your project and have not set up a project structure yet, it makes sense to create a new directory.\nMake sure that, in this case, your directory name aligns well with your project.\nWhen you have already set up a project structure, it makes sense to turn your project folder into an R project. Make sure that, in this case, your project folder is the folder you turn into an R project.\nAfter you have created your R project, it is time to take a closer look at your R scripts containing the code for your projects.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Good Coding Practices</span>"
    ]
  },
  {
    "objectID": "chapters/good-coding-practices.html#sec-rproject",
    "href": "chapters/good-coding-practices.html#sec-rproject",
    "title": "5  Good Coding Practices",
    "section": "",
    "text": "Open RStudio.\nClick on the blue  cube with a  in it and a green plus  on the outside.\nDecide whether you want to create a new directory or an existing directory.\n\n\n\n New directory Existing directory\n\n\nClick on New Directory, then New Project, and type in your directory name.\nMake sure that your project is in the correct place in your folder system.\nAt this point, it does not matter whether you want to create a Git repository and/or use renv with this project.\nIn future chapters, you will learn the advantages of using Git and renv.\nWhen you click on Create Project, your R project will be created.\nYou will see that R has created a folder named after your directory and that one file, directory-name.Rproj, is in this folder.\n\n\nClick on Existing Directory and make sure which folder you want to turn into an R project.\nWhen you click on Create Project, your R project will be created. You will see that R has placed a file in your chosen folder called directory-name.Rproj.\n\n\n\n\n\n\n\n\n\nWhat is an .Rproj-file?\n\n\n\nThe .Rproj file contains settings for all files associated with your specific R project.\nIt is automatically created when you set up an R project. By double-clicking on the file, you can open the project in RStudio.\nIt is not recommended to modify this file manually.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Good Coding Practices</span>"
    ]
  },
  {
    "objectID": "chapters/good-coding-practices.html#comments",
    "href": "chapters/good-coding-practices.html#comments",
    "title": "5  Good Coding Practices",
    "section": "5.2 Comments",
    "text": "5.2 Comments\nComments are probably the most important part of your scripts (but also see the discussion in Tip 5.1). Whenever you write a # in your R-script, all code after that # will be identified as comment and therefore not be executed as code. Thus, if you put a # at the beginning of a line, the whole line will be identified as comment. Here are some thoughts about comments by Rennie (2024):\n\n\n\n\n\n\nAdding comments\n\n\n\n\nAdd comments using a # in R (in a separate line)\nComments don’t need to explain what your code does\nComments should explain why you did it\n\n\n\nYou can use # not only for comments but also for creating sections and subsections in your R-script. To do so, you must start a line with at least one hash # and put at least 4 hyphens after your comment. The number of hashes you use at the beginning determines the level of section.\n\n\n\nCode\n\n# Section 1 ----\n\n## Subsection 1.1 ----\n\n## Sebsection 1.2 ----\n\n# Section 2 ----\n\n\n\n\n\n\n\n\nTip 5.1: Discussion: Pros and cons of comments\n\n\n\n\n\nComments in code are useful because they help explain complex logic, provide context for why certain decisions were made, and assist future developers in understanding the code faster.\nHowever, ideally, code should be written clearly enough that its purpose and functionality are apparent without the need for excessive comments. Well-structured, self-explanatory code enhances readability and reduces maintenance.\nOn the other hand, beginners often find comments valuable, even in well-written code, as they can serve as a learning tool, guiding them through unfamiliar concepts and helping them understand the underlying logic.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Good Coding Practices</span>"
    ]
  },
  {
    "objectID": "chapters/good-coding-practices.html#file-paths",
    "href": "chapters/good-coding-practices.html#file-paths",
    "title": "5  Good Coding Practices",
    "section": "5.3 File paths",
    "text": "5.3 File paths\nWhenever you are conducting research, you need to analyze some form of data. This data is typically stored in one or more files. Therefore, you need to read the data into your script. To do so, you must refer to the files you want to read. This is where the first advantage of setting up a dedicated R project for your research becomes apparent.\nYou can read data or code into your R environment by referring to your files using absolute paths, relative paths, and here::here().\n\n5.3.1 Absolute paths\nUsing an absolute path means referring to your file by specifying the entire folder structure on your computer:\n\n\n\nCode\n\ndata &lt;- read_csv(\"/Users/my-user-name/Documents/projects/my-project/data/data-raw.csv\")\n\n\nUsing absolute file paths is not recommended for computational reproducibility.\nA collaborator or interested researcher who downloads your scripts and wants to reproduce your analysis would need to adjust these paths before the scripts can run correctly.\n\n\n\nCode\n\ndata &lt;- read_csv(\"/Users/user-name-b/Desktop/work/research/my-project/data/data-raw.csv\")\n\n\n\n\n5.3.2 Relative paths\nA relative file path starts from your current working directory and appends the relative path.\nYou can check your current working directory in R by using the getwd() command in the R Console.\n\n\n\nR Console\n\n&gt; getwd()\n[1] \"Users/my-user-name/my-project\"\n\n\nBy default, the working directory in an R project is the project folder, which in this example is called my-project.\nYou can then use a relative file path from that folder to read your data.\nThe file path should start after the working directory:\n\n\n\nCode\n\ndata &lt;- read_csv(\"data/data-raw.csv\")\n\n\nThus, all relative paths to the files in an R project remain the same, regardless of who wants to work with the project. However, this does not hold true for scripts changing the working directory using the setwd() command.\n\nRelative file path does workRelative file path does not work\n\n\n\n\n\nConsole\n\n&gt; getwd()\n[1] \"Users/my-user-name/my-project\"\n&gt; file.edit(\"script/script01.R\")\n\n\n\n\n\n\n\nConsole\n\n&gt; setwd(\"script\")\n&gt; getwd()\n[1] \"Users/my-user-name/my-project/script\"\n&gt; file.edit(\"script/script01.R\")\n\n\n\n\n\n\n\n5.3.3 The here package\nA way to avoid confusion about which file paths to use is the here package (Müller 2020). The here() function works regardless of your current working directory.\nYou can install the here package by typing:\n\n\n\nCode\n\ninstall.packages(\"here\")\n\n\nWith here::here(), it is possible to refer to file paths regardless of your working directory. here() uses the top-level directory of a project to build the paths. It recognizes special files (e.g., .Rproj) and infers the project folder. Using here(), referencing file paths will always follow the same project structure regardless of the file you are referencing.\n\n\n\n\n\n\nExample\n\n\n\n\n\nhere() function works regardless of the current working directory.\n\nNo change in working directoryChange in working directory\n\n\n\n\n\nConsole\n\ngetwd()\n[1] \"/Users/my-user-name/my-project\"\n&gt; here()\n[1] \"/Users/my-user-name/my-project\"\n&gt; source(here(\"scripts\", \"script01.R\"))\n\n\n\n\n\n\n\nConsole\n\ngetwd()\n[1] \"/Users/my-user-name/my-project\"\n&gt; here()\n[1] \"/Users/my-user-name/my-project\"\n&gt; source(here(\"scripts\", \"script01.R\"))\n\n\n\n\n\n\n\n\nAnother benefit of using here() is enhanced readability because the paths always start at the project directory. Using relative paths would require the reader to consider the current working directory and how certain files are relatively located to it. Furthermore, here() remains unaffected by differences between operating systems when separating files with characters and commas.\n\n\n\n\n\n\nPath differences between operating systems\n\n\n\n\n\nmacOS and Linux use a slash / for path separators, while Windows uses a backslash \\. In R, \\ is an escape operator, causing R to misinterpret Windows backslashes \\ when used as path separators. On Windows, using \\\\ or / is necessary to handle path separators correctly.\nA benefit of here() is that paths can be specified within \"\" and separated by commas. Depending on the operating system, here() applies the correct path separator automatically.\n\n\n\nCode\n\nsource(here(\"folder\", \"subfolder\", \"subsubfolder\", \"file.R\"))\n\n\n\n\n\nIn summary, we recommend using the here::here() function because it is most robust against different paths. Relative file paths can also work if the working directory does not change in one of the project scripts and only / are used for path specifications. We recommend to never use absolute file paths, since they are a hurdle to computational reproducibility.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Good Coding Practices</span>"
    ]
  },
  {
    "objectID": "chapters/good-coding-practices.html#sec-codestyle",
    "href": "chapters/good-coding-practices.html#sec-codestyle",
    "title": "5  Good Coding Practices",
    "section": "5.4 Code Style",
    "text": "5.4 Code Style\n\n“Good coding style is like correct punctuation: you can manage without it, butitsuremakethingseasiertoread” – Wickham, Çetinkaya-Rundel, and Grolemund (2023)\n\nOne important aspect that fosters understandability of code is the code style. In this section, we will present the tidyverse-codestyle (Wickham, Çetinkaya-Rundel, and Grolemund 2023). The Tidyverse is a collection of R packages particularly useful for data wrangling, manipulation and visualization. All packages share an underlying design philosophy, grammar, and data structures.\nIn psychology, the grammar of the tidyverse is widely used for data wrangling. In this section, we will provide a brief introduction to code style.\n\n5.4.1 Names\nNot only should files and folders be named well (see chapter on naming things), but the same applies to variable and function names in scripts. Variable and function names should only consist of lowercase letters, numbers, and underscores (_). It is better to use descriptive, longer names rather than short abbreviations that you may not understand in the future.\n\n\n\n\n\nStrive for\n\nshort_flights &lt;- flights |&gt;\n  filter(air_time &lt; 60)\n\n\n\n\n\n\n\n\nAvoid\n\nSHORTFLIGHTS &lt;- flights |&gt;\n  filter(air_time &lt; 60)\n\n\n\n\n\n\n5.4.2 Spaces\nPut spaces around mathematical operators (except ^) and around the assignment operator (&lt;-). Do not put spaces around parentheses when using functions. Put a space after a comma, as you would in standard English.\n\n\n\n\n\nStrive for\n\nmean(x, na.rm = TRUE)\n\n\n\n\n\n\n\n\nAvoid\n\nmean (x ,na.rm=TRUE)\n\n\n\n\n\n\n5.4.3 Pipes\nThe pipe (either |&gt; or %&gt;%) is a useful operator for connecting subsequent operations in your code. The pipe takes everything to the left of it and uses it as the first argument to the function on the right side.\n\n\n\n\n\nWithout pipe\n\nsum(c(1:4))\n\n\n\n\n\n\n\n\nWith pipe\n\nc(1:4) |&gt; sum()\n\n\n\n\nThe pipe is particularly useful when you chain many functions together. Therefore, use |&gt; at the end of a line and add a space before it. The complete sequence of functions connected by a pipe is also called a pipeline.\n\n\n\n\n\nStrive for\n\n1data |&gt;\n2  select(N, gender) |&gt;\n3  filter(\n    gender == \"male\" |\n    gender == \"female\"\n  ) |&gt;\n4  group_by(gender) |&gt;\n5  summarise(\n    mean = mean(N),\n    median = md(N)\n  )\n\n\n\n1\n\nTake the data and then\n\n2\n\nSelect the variables N and gender and then\n\n3\n\nFilter all observations where the variable gender either contains the value male or female and then\n\n4\n\nGroup the dataset by the variable gender and then\n\n5\n\nSummarize your datasets by calculating the mean and median for the variable N for each group.\n\n\n\n\n\n\n\n\n\n\nAvoid\n\nsummarise(group_by(filter(select(data, N, gender), gender == \"male\" | gender == \"female\"), gender), mean = mean(N))\n\n\n\n\nThe code displayed above is much easier to read and understand for your future self and other researchers, thereby increasing the likelihood of reproducibility. Translated into plain English, the pipe represents an “and then”:\n\n\n\n\n\n\nDifference between %&gt;% and |&gt;\n\n\n\n\n\nIn basic code, %&gt;% and |&gt; behave the same in the simple cases we cover here. In general, %&gt;% has some advantages when you want to code more complex cases. If you are interested when it matters if you either use %&gt;%or |&gt;, we recommend this resource.\n\n%&gt;%|&gt;\n\n\nThe %&gt;% pipe was introduced in the context of the tidyverse. It comes with the package magrittr and con only be used when this package is installed and loaded.\n\n\n\nCode\n\ninstall.packages(\"magrittr\")\nlibrary(magrittr)\n\n\nHowever, you can also use it, when you load another package from the tidyverse such as dplyr. This is because dplyr imports magrittr when it is loaded.\n\n\nThe |&gt; pipe comes with the basic R. To use |&gt; in R, you have to go to Tools &gt; Global Options &gt; Code and tick the box Use native pipe operator, |&gt; (repquires R 4.1+).\n\n\n\n\n\n\n\n\n5.4.4 Line breaks\nIf a function requires you to name arguments (as with summarise()), put each argument on a new line. If a function does not require you to name arguments (as with group_by()), keep your code on one line unless it extends beyond the width of a line. In that case, put each argument on its own line.\nWhen you start a new line after using |&gt; or a function like summarise(), indent the new line by two spaces (if not already done automatically). If you are putting each argument on a separate line, also indent the new line by two spaces. Make sure that the closing parenthesis ) is on its own line and not indented. Thus, the closing parenthesis should align with the horizontal position of the function you are using.\n\n\n\n\n\nStrive for\n\nflights |&gt;  \n  group_by(tailnum) |&gt; \n  summarize(\n    delay = mean(\n      x = arr_delay,\n      na.rm = TRUE\n    ),\n    n = n()\n  )\n\n\n\n\n\n\n\n\nAvoid\n\nflights|&gt;\n  group_by(tailnum) |&gt; \n  summarize(\n             delay = mean(arr_delay, na.rm = TRUE), \n             n = n()\n           )\n\n\n\n\n\nAvoid\n\nflights|&gt;\n  group_by(tailnum) |&gt; \n  summarize(\n  delay = mean(arr_delay, na.rm = TRUE), \n  n = n()\n  )\n\n\n\n\n\n\n5.4.5 Evaluate your code style: Linting\nAfter learning the tidyverse coding style, you can check your code for any deviations from that style.\nThis process is called “linting” and is comparable to a program that checks for spelling errors.\nThe lintr package (Hester et al. 2024) can perform this task by analyzing your code for potential issues and deviations from the recommended coding style.\n\nstylistic issues (e.g. x&lt;-3 vs. x &lt;- 3)\ncommon errors (e.g. mean(x, na.rm = T, na.rm = F))\nmissing packages\n…\n\n\n\n\n\n\n\nCaution\n\n\n\nHowever, note that lintr cannot check whether your code runs correctly!\n\n\n\n\n\n\n\n\nExample of lintr\n\n\n\n\n\nSuppose you have script called test-script.R in the folder scripts of your research projects. Your script looks as follows:\n\n\n\nScript\n\n# Test Script\n\ndf &lt;- matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3)\n\n\nAfter you installed and loaded the package lintr, run: lintr::lint(\"scripts/test-script.R\") in your R-console:\n\n\n\nCode\n\ninstall.packages(\"lintr\")\nlibrary(lintr)\nlintr::lint(\"scripts/test-script.R\")\n\n\nNext to your Console, a new tab will open called Markers, displaying all syntax messages lintr found in your script.\n\n\n\nMarkers\n\nLine 3 [commas_linter] Commas should always have a space after.\nLine 3 [commas_linter] Commas should always have a space after.\nLine 3 [commas_linter] Commas should always have a space after.\nLine 3 [commas_linter] Commas should always have a space after.\nLine 3 [commas_linter] Commas should always have a space after.\n\n\nIn test-script.R, lintr wants us to separate the numbers 1 to 6 by spaces after commas. For every missing comma, lintr displays a separate error message. After adding the spaces, saving the script, and running lintr::lint(\"scripts/test-script.R\") again, no error messages are displayed in the Markers tab.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Good Coding Practices</span>"
    ]
  },
  {
    "objectID": "chapters/good-coding-practices.html#sec-tidydata",
    "href": "chapters/good-coding-practices.html#sec-tidydata",
    "title": "5  Good Coding Practices",
    "section": "5.5 Tidy Data",
    "text": "5.5 Tidy Data\n\n\n\n\n\n\nFigure 5.1: “Illustration from the Openscapes blog Tidy Data for reproducibility efficiency and collaboration” by Julia Lowndes and Allison Horst (License: CC-BY 4.0; reused without modifications)\n\n\n\nWhen working with datasets, you will likely not be able to directly conduct your data analysis (e.g., t-tests, ANOVAs, GLMs). In fact, most of the time, you will spend more time organizing your data than running your analysis. A helpful concept is tidy data, which is a common guideline for organizing datasets. Tidy data is closely related to the principles of the tidyverse introduced in Section 5.4. Following tidy data guidelines will help you run analyses and get the most out of your data.\n\n\n\n\n\n\nTidy Data\n\n\n\nTidy datasets follow three basic rules:\n\nEach variable is a column, and each column is a variable.\nEach observation is a row, and each row is an observation.\nEach value is a cell, and each cell contains a value.\n\n\n\n\n\n\n\n\n\nFigure 5.2: “Tidy Data” by Hadley Wickham and Mine Çetinkaya-Rundel and Garret Grolemund (License: CC BY-NC-ND 3.0 US; reused without modifications)\n\n\n\nThe journey from raw to tidy data can be long and frustrating. This book cannot provide a full overview of data wrangling and manipulation. However, if you are interested in learning functions for data manipulation, we recommend studying the dplyr package and its documentation, as well as the tidyr package and its documentation. From our experience, using and sharing code written in the tidyverse style fosters better understanding of the code, thereby enhancing computational reproducibility.\n\n5.5.1 Data structures\nData can be structured in different ways. When your data is tidy, you may still encounter wide or long formats. As a rule of thumb, you can remember this: Data structured in a long format usually contains repetitive values in the first column of the dataset. Data structured in a wide format usually contains non-repetitive values in the first column of the dataset.\n\n Wide format Long format\n\n\n\n\n# A tibble: 3 × 3\n  participant congruent incongruent\n        &lt;int&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1           1       560         720\n2           2       623         799\n3           3       547         812\n\n\n\n\n\n\n# A tibble: 6 × 3\n  participant congruency  reaction_time\n        &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt;\n1           1 congruent             560\n2           1 incongruent           720\n3           2 congruent             623\n4           2 incongruent           799\n5           3 congruent             547\n6           3 incongruent           812\n\n\n\n\n\nHowever, this rule of thumb does not always apply, for example when data is rearranged.\n\n\n[1] \"Data in long format\"\n\n\n# A tibble: 6 × 3\n  reaction_time congruency  participant\n          &lt;dbl&gt; &lt;chr&gt;             &lt;dbl&gt;\n1           560 congruent             1\n2           720 incongruent           1\n3           623 congruent             2\n4           799 incongruent           2\n5           547 congruent             3\n6           812 incongruent           3\n\n\nAnother perspective on wide vs. long data comes from the context of the data. In research, a common question is how variable A influences variable B. Variable B is dependent on variable A, making variable B the dependent variable (DV) and variable A the independent variable (IV).\nIn the wide data format, the names of the factor levels of the IV are usually column names, while the DV is displayed as the values across these cells. In contrast, in the long data format, the names of the factor levels of the IV are typically values in the column of the IV. The name of the IV becomes the column name, rather than the level of the IV. Simultaneously, the DV is displayed in one column with the name of the DV as the column name and the corresponding values in that column.\n\n\n5.5.2 Changing the data structure\nDepending on which R functions you want to use or other reasons, you may need to or want to change your data structure from wide to long or vice versa. An easy way to do this is by using pivot_wider() and pivot_longer() from the tidyr package.\n\n5.5.2.1 pivot_longer()\npivot_longer() takes your dataset and makes it longer. It takes certain columns and places their names as values into a new column. Additionally, it combines the values of these columns into a single column.\n\n\n\nCode\n\nlibrary(tidyr)\n1data_wide |&gt;\n2  pivot_longer(\n3    cols = c(\"congruent\", \"incongruent\"),\n4    names_to = \"congruency\",\n5    values_to = \"reaction_time\"\n  )\n\n\n\n1\n\nTake the dataset data_wide, then\n\n\n2\n\nApply the function pivot_longer() to the data by\n\n\n3\n\nSpecifying the columns that should be transformed into a long format,\n\n\n4\n\nNaming the new column to hold the previous column names, and\n\n\n5\n\nNaming the new column to hold the values of the previous columns.\n\n\n\n\n# A tibble: 6 × 3\n  participant congruency  reaction_time\n        &lt;int&gt; &lt;chr&gt;               &lt;dbl&gt;\n1           1 congruent             560\n2           1 incongruent           720\n3           2 congruent             623\n4           2 incongruent           799\n5           3 congruent             547\n6           3 incongruent           812\n\n\n\n\n5.5.2.2 pivot_wider()\npivot_wider() takes your dataset and makes it wider. It takes the names of a certain column and changes them to new column names. Further, it takes the values of a second column and puts them across the new columns to their corresponding names.\n\n\n\nCode\n\n1data_long |&gt;\n2  pivot_wider(\n3    names_from = \"congruency\",\n4    values_from = \"reaction_time\"\n  ) |&gt;\n  print()\n\n\n\n1\n\nTake the dataset data_long,\n\n\n2\n\nApply the function pivot_wider() to the data by\n\n\n3\n\nSpecifying the column name from which to create the new column names, and\n\n\n4\n\nSpecifying the column name from which to take the values for the new columns.\n\n\n\n\n# A tibble: 3 × 3\n  participant congruent incongruent\n        &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1           1       560         720\n2           2       623         799\n3           3       547         812",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Good Coding Practices</span>"
    ]
  },
  {
    "objectID": "chapters/good-coding-practices.html#defensive-programming",
    "href": "chapters/good-coding-practices.html#defensive-programming",
    "title": "5  Good Coding Practices",
    "section": "5.6 Defensive programming",
    "text": "5.6 Defensive programming\nWhenever you write code for data analysis or any other purpose, it is useful to validate what you are doing. This is also known as defensive programming. “Defensive” in this context means cautious. Here are some potential benefits of validating your code:\n\nEarly error detection\n\nCode clarity\n\nProtection against invalid input\n\nMonitoring data quality\n\nImproved documentation\n\nImproved error handling\n\n\n5.6.1 The assertr package and it’s function verify()\nThe assertr package helps you when you start testing your code. Once you begin adopting the tidyverse coding style, the function verify() will be easy to apply in your code. verify() can be seamlessly integrated into a code pipeline.\nThe verify() function takes a data frame (which is the first argument of the function and provided by the |&gt; operator) and a logical expression. Then, the expression is evaluated in the context of the data frame. When the expression is TRUE, no error occurs and the pipe goes on. When the expression is FALSE, verify will raise an error that terminates any further processing of the pipeline (Fischetti 2023).\n\nVerification passedVerification failed\n\n\nIn this example, a dataframe will only be printed, if all values in the column reaction_time are higher than 200. This holds true for data_long, but not for data_long_2. data_long_2 has one value (24) violating the verify expression.\n\n\n\nCode\n\nlibrary(assertr)\n\n# verify if reaction time is longer than 200ms\ndata_long |&gt;\n  verify(reaction_time &gt; 200) |&gt;\n  print()\n\n\n# A tibble: 6 × 3\n  participant congruency  reaction_time\n        &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt;\n1           1 congruent             560\n2           1 incongruent           720\n3           2 congruent             623\n4           2 incongruent           799\n5           3 congruent             547\n6           3 incongruent           812\n\n\n\n\nIn this example, a dataframe will only be printed, if all values in the column reaction_time are higher than 200. This holds true for data_long, but not for data_long_2. data_long_2 has one value (24) violating the verify expression.\n\n\n\nCode\n\ndata_long_2 &lt;- data_long\ndata_long_2[5,3] &lt;- 24\n\ndata_long_2 |&gt;\n  verify(reaction_time &gt; 200) |&gt;\n  print()\n\n\n\n\n\nConsole output\n\nverification [reaction_time &gt; 200] failed! (1 failure)\n\n    verb redux_fn           predicate column index value\n1 verify       NA reaction_time &lt; 200     NA     5    NA\n\nError: assertr stopped execution\n\n\n\n\n\n\n\n5.6.2 Further functions and packages\nThe verify() function provides an easy way to start validating your code within a tidyverse coding style. However, there are more functions from the assertr package that can be applied for defensive programming. Going through all of these functions exceeds the scope of this book. Therefore, we highly recommend reading the accompanying vignette by Tony Fischetti, the author of the assertr package.\nFurthermore, assertr is not the only  package dealing with defensive programming. assert, assertthat, and testthat are other powerful packages in this context. In general, code validation is not too popular in scientific practice. It is rather prevalent in software development contexts validating functions and whole scripts for specific purposes. These thorough testing processes extends the scope of computational reproducibility in our opinion. Thus, we recommend assertr::verify() as a good starting point for defensive programming in the context of computational reproducibility.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Good Coding Practices</span>"
    ]
  },
  {
    "objectID": "chapters/good-coding-practices.html#acknowledgements-further-reading",
    "href": "chapters/good-coding-practices.html#acknowledgements-further-reading",
    "title": "5  Good Coding Practices",
    "section": "5.7 Acknowledgements & further reading",
    "text": "5.7 Acknowledgements & further reading\nWe would like to express our gratitude to the following resources, which have been essential in shaping this chapter. We recommend these references for further reading:\n\n\n\n\n\n\nResources\n\n\n\n\n(Rennie 2024)\n\n\n(Wickham, Çetinkaya-Rundel, and Grolemund 2023)\n\n\n\n\n\n\n\nFischetti, Tony. 2023. Assertr: Assertive Programming for r Analysis Pipelines. https://doi.org/10.32614/CRAN.package.assertr.\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.\n\n\nHester, Jim, Florent Angly, Russ Hyde, Michael Chirico, Kun Ren, Alexander Rosenstock, and Indrajeet Patil. 2024. Lintr: A ’Linter’ for r Code. https://CRAN.R-project.org/package=lintr.\n\n\nMüller, Kirill. 2020. Here: A Simpler Way to Find Your Files. https://here.r-lib.org/.\n\n\nRennie, Nicola. 2024. “Writing Better r Code.” https://nrennie.rbind.io/training-better-r-code/.\n\n\nWickham, H., M. Çetinkaya-Rundel, and G. Grolemund. 2023. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. O’Reilly Media. https://r4ds.hadley.nz.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Good Coding Practices</span>"
    ]
  },
  {
    "objectID": "chapters/renv.html",
    "href": "chapters/renv.html",
    "title": "6  Robust Environments: {renv}",
    "section": "",
    "text": "6.1 Introduction\nNow a project is well-named including its files and folders. It is well-structured and follows a community standard as Psych-DS. It follows the FAIR principles. The code is written in the tidyverse-style. Is it reproducible? Well, it may be. Very likely, it is not. However, we have done a great job in organizing our research project. The previous chapters dealt with a possible architecture of a reproducible research project. But still, there are things to improve. The next chapters will deal with reproducible computational environments. For an introduction, read the example below:\nImagine you need to reproduce the results of a research article from 2019. The project structure is openly available at OSF or at Zenodo. You find a nice structure, run a script but then you get an error message in R like:\nOutput\n\nError in function_name(object[[i]], ...) : could not find function \"function_name\"\nR is telling you that it cannot find a function called function_name. A similar problem can be that only arguments of a function are not found. However, the script runs correctly at the device of the researcher writing the script. Thus, you are facing a research project that is only reproducible on the same device it was written on. A possible reason is that your computational environment differs from the environment of the other researcher. You might have installed different versions of R packages or of  itself.\nDifferent computational environments can hinder computational reproducibility. In the example above, the code cannot be executed. However, sometimes package updates do only change the calculation of a function or an argument. Thus, a different package version leads to different results even though the code runs correctly.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Robust Environments: `{renv}`</span>"
    ]
  },
  {
    "objectID": "chapters/renv.html#introduction",
    "href": "chapters/renv.html#introduction",
    "title": "6  Robust Environments: {renv}",
    "section": "",
    "text": "Computational environments\n\n\n\n\n\nComputational environments include everything associated with technical infrastructure and software for conducting data analyses and reproducing scientific results. This comprises operating systems (Apple, Windows, Linux), software versions (R 4.3.1, 4.4.1, 4.4.2, etc.), and different versions of packages (dplyr 0.8.0, 1.1.4). It is important to consider your computational environment when it comes to computational reproducibility. The longer the time interval between creation and reproduction of your code is, the more the more likely reproducibility is not possible because of different computational environments. Software progresses over time, which is good in general. However, different versions of software include that some functions will not work in future versions or will do different things. Thus, it is important to keep track of the computational environment during creation of code and analyses.\nThis done by so called Package Management Systems. Package Management Systems install and keep track of software and software versions, export files that specify these required software packages/versions and that can be shared with others (The Turing Way Community 2022). Thus, environments can be replicated, either manually or via the Package Management System. In the next two chapters, we will introduce two Package Mangament Systems, namely {renv} and {docker}.\n\n\n\n\n\n\n\n\n\n\nProblems of different computational environments\n\n\n\n\nscripts could stop running because of different functions or arguments\nscripts could run correctly but produce different results\n\n\n\n\n\n\n\n\n\nHow renv helps aligning computational environments\n\n\n\nWith renv…\n\npackage versions can be safed inside a research project\ncollaborators can easily load the same package versions independent of their device\nR projects become isolated, portable and reproducible (Ushey and Wickham 2024)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Robust Environments: `{renv}`</span>"
    ]
  },
  {
    "objectID": "chapters/renv.html#renv",
    "href": "chapters/renv.html#renv",
    "title": "6  Robust Environments: {renv}",
    "section": "6.2 renv",
    "text": "6.2 renv\nrenv is a package that cares about the different versions of your used packages. To use renv as package dependency manager, you only need to install it, as every other package in .\n\n\n\nConsole\n\ninstall.packages(\"renv\")\n\n\n\n\n\n\n\n\nBenefits of renv\n\n\n\n\neasy documenting package versions\neasy restoring of older package versions \n\n\n\n\n6.2.1 renv-functions\nThe renv package is very powerful because it does a lot of useful things while only needing 4 (+1) functions. Before we start, it is helpful to disentangle a couple of terms. A library is a directory containing multiple packages. This is confusing because you load packages with the command library(package). The command does not load a library, but a package. Until now you install packages into your System library with install.packages(\"package\") and load these packages within this library with library(package). Packages in the system library are independent from your project. With renv, we will start to use project libraries. Thus, we will install and use packages to a library that meets the requirement for your specific projects. However, it might occur that you have to install the same packages multiple times when you want to use them across multiple projects.\n\n6.2.1.1 renv::init\nWhen you start using renv, we recommend you to set up an R-project before. If you do not know how to do that, see Section 5.1. With renv::init(), we initialize our reproducible, computational environment. With this command, a couple of files and folders are created.\n\n.Rprofile is a file that automatically runs every time you start your R-project. renv uses it to set up your project library. Thus, once you have turned on your project library, it remains active until you turn it off.\nrenv/library contains all the packages you are currently using. This is now your project library. With different libraries for different projects you have the benefit of isolation. When a package version changes in one project, it does not affect your other projects.\nThe lockfile renv.lock contains all the metadata of your packages to reinstall it on a new machine. It serves as documentation about which package and which version of the packages you use. It also displays the R version used in your particular project.\n\n\n\nClick here to view the full renv.lock file of this project.\n\n\n\n\nrenv.lock\n\n{\n  \"R\": {\n    \"Version\": \"4.4.1\",\n    \"Repositories\": [\n      {\n        \"Name\": \"CRAN\",\n        \"URL\": \"https://packagemanager.posit.co/cran/latest\"\n      }\n    ]\n  },\n  \"Packages\": {\n    \"MASS\": {\n      \"Package\": \"MASS\",\n      \"Version\": \"7.3-61\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"graphics\",\n        \"methods\",\n        \"stats\",\n        \"utils\"\n      ],\n      \"Hash\": \"0cafd6f0500e5deba33be22c46bf6055\"\n    },\n    \"R6\": {\n      \"Package\": \"R6\",\n      \"Version\": \"2.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"470851b6d5d0ac559e9d01bb352b4021\"\n    },\n    \"assertr\": {\n      \"Package\": \"assertr\",\n      \"Version\": \"3.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"MASS\",\n        \"R\",\n        \"dplyr\",\n        \"methods\",\n        \"rlang\",\n        \"stats\",\n        \"utils\"\n      ],\n      \"Hash\": \"dd34511e88d11c95e80f8d9bb0606e79\"\n    },\n    \"backports\": {\n      \"Package\": \"backports\",\n      \"Version\": \"1.5.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"e1e1b9d75c37401117b636b7ae50827a\"\n    },\n    \"base64enc\": {\n      \"Package\": \"base64enc\",\n      \"Version\": \"0.1-3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"543776ae6848fde2f48ff3816d0628bc\"\n    },\n    \"bslib\": {\n      \"Package\": \"bslib\",\n      \"Version\": \"0.8.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"cachem\",\n        \"fastmap\",\n        \"grDevices\",\n        \"htmltools\",\n        \"jquerylib\",\n        \"jsonlite\",\n        \"lifecycle\",\n        \"memoise\",\n        \"mime\",\n        \"rlang\",\n        \"sass\"\n      ],\n      \"Hash\": \"b299c6741ca9746fb227debcb0f9fb6c\"\n    },\n    \"cachem\": {\n      \"Package\": \"cachem\",\n      \"Version\": \"1.1.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"fastmap\",\n        \"rlang\"\n      ],\n      \"Hash\": \"cd9a672193789068eb5a2aad65a0dedf\"\n    },\n    \"callr\": {\n      \"Package\": \"callr\",\n      \"Version\": \"3.7.6\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"processx\",\n        \"utils\"\n      ],\n      \"Hash\": \"d7e13f49c19103ece9e58ad2d83a7354\"\n    },\n    \"cli\": {\n      \"Package\": \"cli\",\n      \"Version\": \"3.6.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"b21916dd77a27642b447374a5d30ecf3\"\n    },\n    \"codetools\": {\n      \"Package\": \"codetools\",\n      \"Version\": \"0.2-20\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"61e097f35917d342622f21cdc79c256e\"\n    },\n    \"cpp11\": {\n      \"Package\": \"cpp11\",\n      \"Version\": \"0.5.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"91570bba75d0c9d3f1040c835cee8fba\"\n    },\n    \"crayon\": {\n      \"Package\": \"crayon\",\n      \"Version\": \"1.5.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"grDevices\",\n        \"methods\",\n        \"utils\"\n      ],\n      \"Hash\": \"859d96e65ef198fd43e82b9628d593ef\"\n    },\n    \"cyclocomp\": {\n      \"Package\": \"cyclocomp\",\n      \"Version\": \"1.1.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"callr\",\n        \"crayon\",\n        \"desc\",\n        \"remotes\",\n        \"withr\"\n      ],\n      \"Hash\": \"cdc4a473222b0112d4df0bcfbed12d44\"\n    },\n    \"data.table\": {\n      \"Package\": \"data.table\",\n      \"Version\": \"1.16.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"2e00b378fc3be69c865120d9f313039a\"\n    },\n    \"desc\": {\n      \"Package\": \"desc\",\n      \"Version\": \"1.4.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"cli\",\n        \"utils\"\n      ],\n      \"Hash\": \"99b79fcbd6c4d1ce087f5c5c758b384f\"\n    },\n    \"digest\": {\n      \"Package\": \"digest\",\n      \"Version\": \"0.6.37\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"33698c4b3127fc9f506654607fb73676\"\n    },\n    \"dplyr\": {\n      \"Package\": \"dplyr\",\n      \"Version\": \"1.1.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"cli\",\n        \"generics\",\n        \"glue\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"methods\",\n        \"pillar\",\n        \"rlang\",\n        \"tibble\",\n        \"tidyselect\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"fedd9d00c2944ff00a0e2696ccf048ec\"\n    },\n    \"evaluate\": {\n      \"Package\": \"evaluate\",\n      \"Version\": \"1.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"3fd29944b231036ad67c3edb32e02201\"\n    },\n    \"fansi\": {\n      \"Package\": \"fansi\",\n      \"Version\": \"1.0.6\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"utils\"\n      ],\n      \"Hash\": \"962174cf2aeb5b9eea581522286a911f\"\n    },\n    \"fastmap\": {\n      \"Package\": \"fastmap\",\n      \"Version\": \"1.2.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"aa5e1cd11c2d15497494c5292d7ffcc8\"\n    },\n    \"fontawesome\": {\n      \"Package\": \"fontawesome\",\n      \"Version\": \"0.5.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"htmltools\",\n        \"rlang\"\n      ],\n      \"Hash\": \"bd1297f9b5b1fc1372d19e2c4cd82215\"\n    },\n    \"fs\": {\n      \"Package\": \"fs\",\n      \"Version\": \"1.6.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"7f48af39fa27711ea5fbd183b399920d\"\n    },\n    \"generics\": {\n      \"Package\": \"generics\",\n      \"Version\": \"0.1.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"15e9634c0fcd294799e9b2e929ed1b86\"\n    },\n    \"glue\": {\n      \"Package\": \"glue\",\n      \"Version\": \"1.8.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"5899f1eaa825580172bb56c08266f37c\"\n    },\n    \"here\": {\n      \"Package\": \"here\",\n      \"Version\": \"1.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"rprojroot\"\n      ],\n      \"Hash\": \"24b224366f9c2e7534d2344d10d59211\"\n    },\n    \"highr\": {\n      \"Package\": \"highr\",\n      \"Version\": \"0.11\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"xfun\"\n      ],\n      \"Hash\": \"d65ba49117ca223614f71b60d85b8ab7\"\n    },\n    \"htmltools\": {\n      \"Package\": \"htmltools\",\n      \"Version\": \"0.5.8.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"digest\",\n        \"fastmap\",\n        \"grDevices\",\n        \"rlang\",\n        \"utils\"\n      ],\n      \"Hash\": \"81d371a9cc60640e74e4ab6ac46dcedc\"\n    },\n    \"htmlwidgets\": {\n      \"Package\": \"htmlwidgets\",\n      \"Version\": \"1.6.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"grDevices\",\n        \"htmltools\",\n        \"jsonlite\",\n        \"knitr\",\n        \"rmarkdown\",\n        \"yaml\"\n      ],\n      \"Hash\": \"04291cc45198225444a397606810ac37\"\n    },\n    \"jquerylib\": {\n      \"Package\": \"jquerylib\",\n      \"Version\": \"0.1.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"htmltools\"\n      ],\n      \"Hash\": \"5aab57a3bd297eee1c1d862735972182\"\n    },\n    \"jsonlite\": {\n      \"Package\": \"jsonlite\",\n      \"Version\": \"1.8.9\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"methods\"\n      ],\n      \"Hash\": \"4e993b65c2c3ffbffce7bb3e2c6f832b\"\n    },\n    \"knitr\": {\n      \"Package\": \"knitr\",\n      \"Version\": \"1.49\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"evaluate\",\n        \"highr\",\n        \"methods\",\n        \"tools\",\n        \"xfun\",\n        \"yaml\"\n      ],\n      \"Hash\": \"9fcb189926d93c636dea94fbe4f44480\"\n    },\n    \"lazyeval\": {\n      \"Package\": \"lazyeval\",\n      \"Version\": \"0.2.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"d908914ae53b04d4c0c0fd72ecc35370\"\n    },\n    \"lifecycle\": {\n      \"Package\": \"lifecycle\",\n      \"Version\": \"1.0.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"rlang\"\n      ],\n      \"Hash\": \"b8552d117e1b808b09a832f589b79035\"\n    },\n    \"lintr\": {\n      \"Package\": \"lintr\",\n      \"Version\": \"3.1.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"backports\",\n        \"codetools\",\n        \"cyclocomp\",\n        \"digest\",\n        \"glue\",\n        \"knitr\",\n        \"rex\",\n        \"stats\",\n        \"utils\",\n        \"xml2\",\n        \"xmlparsedata\"\n      ],\n      \"Hash\": \"08cff46381a242d44c0d8dd0aabd9f71\"\n    },\n    \"magrittr\": {\n      \"Package\": \"magrittr\",\n      \"Version\": \"2.0.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"7ce2733a9826b3aeb1775d56fd305472\"\n    },\n    \"memoise\": {\n      \"Package\": \"memoise\",\n      \"Version\": \"2.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"cachem\",\n        \"rlang\"\n      ],\n      \"Hash\": \"e2817ccf4a065c5d9d7f2cfbe7c1d78c\"\n    },\n    \"mime\": {\n      \"Package\": \"mime\",\n      \"Version\": \"0.12\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"tools\"\n      ],\n      \"Hash\": \"18e9c28c1d3ca1560ce30658b22ce104\"\n    },\n    \"pillar\": {\n      \"Package\": \"pillar\",\n      \"Version\": \"1.9.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"cli\",\n        \"fansi\",\n        \"glue\",\n        \"lifecycle\",\n        \"rlang\",\n        \"utf8\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"15da5a8412f317beeee6175fbc76f4bb\"\n    },\n    \"pkgconfig\": {\n      \"Package\": \"pkgconfig\",\n      \"Version\": \"2.0.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"utils\"\n      ],\n      \"Hash\": \"01f28d4278f15c76cddbea05899c5d6f\"\n    },\n    \"processx\": {\n      \"Package\": \"processx\",\n      \"Version\": \"3.8.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"ps\",\n        \"utils\"\n      ],\n      \"Hash\": \"0c90a7d71988856bad2a2a45dd871bb9\"\n    },\n    \"ps\": {\n      \"Package\": \"ps\",\n      \"Version\": \"1.8.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"b4404b1de13758dea1c0484ad0d48563\"\n    },\n    \"purrr\": {\n      \"Package\": \"purrr\",\n      \"Version\": \"1.0.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"rlang\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"1cba04a4e9414bdefc9dcaa99649a8dc\"\n    },\n    \"rappdirs\": {\n      \"Package\": \"rappdirs\",\n      \"Version\": \"0.3.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"5e3c5dc0b071b21fa128676560dbe94d\"\n    },\n    \"remotes\": {\n      \"Package\": \"remotes\",\n      \"Version\": \"2.5.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\",\n        \"stats\",\n        \"tools\",\n        \"utils\"\n      ],\n      \"Hash\": \"3ee025083e66f18db6cf27b56e23e141\"\n    },\n    \"renv\": {\n      \"Package\": \"renv\",\n      \"Version\": \"1.0.11\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"utils\"\n      ],\n      \"Hash\": \"47623f66b4e80b3b0587bc5d7b309888\"\n    },\n    \"rex\": {\n      \"Package\": \"rex\",\n      \"Version\": \"1.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"lazyeval\"\n      ],\n      \"Hash\": \"ae34cd56890607370665bee5bd17812f\"\n    },\n    \"rlang\": {\n      \"Package\": \"rlang\",\n      \"Version\": \"1.1.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"3eec01f8b1dee337674b2e34ab1f9bc1\"\n    },\n    \"rmarkdown\": {\n      \"Package\": \"rmarkdown\",\n      \"Version\": \"2.29\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"bslib\",\n        \"evaluate\",\n        \"fontawesome\",\n        \"htmltools\",\n        \"jquerylib\",\n        \"jsonlite\",\n        \"knitr\",\n        \"methods\",\n        \"tinytex\",\n        \"tools\",\n        \"utils\",\n        \"xfun\",\n        \"yaml\"\n      ],\n      \"Hash\": \"df99277f63d01c34e95e3d2f06a79736\"\n    },\n    \"rprojroot\": {\n      \"Package\": \"rprojroot\",\n      \"Version\": \"2.0.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"4c8415e0ec1e29f3f4f6fc108bef0144\"\n    },\n    \"sass\": {\n      \"Package\": \"sass\",\n      \"Version\": \"0.4.9\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R6\",\n        \"fs\",\n        \"htmltools\",\n        \"rappdirs\",\n        \"rlang\"\n      ],\n      \"Hash\": \"d53dbfddf695303ea4ad66f86e99b95d\"\n    },\n    \"stringi\": {\n      \"Package\": \"stringi\",\n      \"Version\": \"1.8.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"stats\",\n        \"tools\",\n        \"utils\"\n      ],\n      \"Hash\": \"39e1144fd75428983dc3f63aa53dfa91\"\n    },\n    \"stringr\": {\n      \"Package\": \"stringr\",\n      \"Version\": \"1.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"rlang\",\n        \"stringi\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"960e2ae9e09656611e0b8214ad543207\"\n    },\n    \"tibble\": {\n      \"Package\": \"tibble\",\n      \"Version\": \"3.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"fansi\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"methods\",\n        \"pillar\",\n        \"pkgconfig\",\n        \"rlang\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"a84e2cc86d07289b3b6f5069df7a004c\"\n    },\n    \"tidyr\": {\n      \"Package\": \"tidyr\",\n      \"Version\": \"1.3.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"cpp11\",\n        \"dplyr\",\n        \"glue\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"purrr\",\n        \"rlang\",\n        \"stringr\",\n        \"tibble\",\n        \"tidyselect\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"915fb7ce036c22a6a33b5a8adb712eb1\"\n    },\n    \"tidyselect\": {\n      \"Package\": \"tidyselect\",\n      \"Version\": \"1.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"rlang\",\n        \"vctrs\",\n        \"withr\"\n      ],\n      \"Hash\": \"829f27b9c4919c16b593794a6344d6c0\"\n    },\n    \"tinytex\": {\n      \"Package\": \"tinytex\",\n      \"Version\": \"0.54\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"xfun\"\n      ],\n      \"Hash\": \"3ec7e3ddcacc2d34a9046941222bf94d\"\n    },\n    \"utf8\": {\n      \"Package\": \"utf8\",\n      \"Version\": \"1.2.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"62b65c52671e6665f803ff02954446e9\"\n    },\n    \"vctrs\": {\n      \"Package\": \"vctrs\",\n      \"Version\": \"0.6.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"rlang\"\n      ],\n      \"Hash\": \"c03fa420630029418f7e6da3667aac4a\"\n    },\n    \"withr\": {\n      \"Package\": \"withr\",\n      \"Version\": \"3.0.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"graphics\"\n      ],\n      \"Hash\": \"cc2d62c76458d425210d1eb1478b30b4\"\n    },\n    \"wordcloud2\": {\n      \"Package\": \"wordcloud2\",\n      \"Version\": \"0.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"grDevices\",\n        \"graphics\",\n        \"htmlwidgets\"\n      ],\n      \"Hash\": \"10274bd096f5c2ad7471ea0eea0c1424\"\n    },\n    \"xfun\": {\n      \"Package\": \"xfun\",\n      \"Version\": \"0.49\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"stats\",\n        \"tools\"\n      ],\n      \"Hash\": \"8687398773806cfff9401a2feca96298\"\n    },\n    \"xml2\": {\n      \"Package\": \"xml2\",\n      \"Version\": \"1.3.6\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"methods\",\n        \"rlang\"\n      ],\n      \"Hash\": \"1d0336142f4cd25d8d23cd3ba7a8fb61\"\n    },\n    \"xmlparsedata\": {\n      \"Package\": \"xmlparsedata\",\n      \"Version\": \"1.0.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"45e4bf3c46476896e821fc0a408fb4fc\"\n    },\n    \"yaml\": {\n      \"Package\": \"yaml\",\n      \"Version\": \"2.3.10\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"51dab85c6c98e50a18d7551e9d49f76c\"\n    }\n  }\n}\n\n\n\n\n\n6.2.1.2 renv::install\nWith renv::install, we can install new packages to our project. Assume you need the package palmerpenguins in your project.\n\n\n\nConsole\n\nrenv::install(\"palmerpenguins\")\n\n\nrenv will download the package palmerpenguins. If you want to install packages with dependencies, renv will install these dependencies automatically. In your console you will be asked if you want to install the package to your project library. Type Y in to your console.\n\n\n\nOutput\n\n# Downloading packages -------------------------------------------------------\n- Downloading palmerpenguins from CRAN ...      OK [2.9 Mb in 1.8s]\nSuccessfully downloaded 1 package in 2.1 seconds.\n\nThe following package(s) will be installed:\n- palmerpenguins [0.1.1]\nThese packages will be installed into \"~/Documents/repro-book/renv/library/macos/R-4.4/aarch64-apple-darwin20\".\n\nDo you want to proceed? [Y/n]: \n\n\nAfter that, you should see something in your console similar to this:\n\n\n\nOutput\n\n# Installing packages --------------------------------------------------------\n- Installing palmerpenguins ...                 OK [installed binary and cached in 0.34s]\nSuccessfully installed 1 package in 0.42 seconds.\n\n\nNow you have installed the package palmerpenguins to your project library.\n\n\n\n\n\n\nWhat are dependencies?\n\n\n\n\n\nSome packages require other packages to be loaded. These other packages are called dependencies. Your primary package depends on these other packages to run correctly.\nThe package psychonetrics has a lot of packages. Install the package to see what happens.\n\n\n\nConsole\n\nrenv::install(\"psychonetrics\")\n\n\n\n\n\n\n\n6.2.1.3 renv::snapshot\nWhen you search in the lockfile for your new installed package palmerpenguins, you will not find it there. renv does not automatically saves the metadata of your installed packages in the lockfile. With renv::snapshot(), we can document the package versions we need in our project. Simply run the command in your Console\n\n\n\nConsole\n\nrenv::snapshot()\n\n\nIn your Console, you will see something like this:\n\n\n\nOutput\n\n- The lockfile is already up to date.\n\n\nrenv did not add the metadata about palmerpenguins to the lockfile. This is because renv checks if your package is really used somewhere in your project. The bare installation is not enough. This is to not unnecessarily overload the lockfile with packages that are not used in the project. The package has to be used and therefore loaded somewhere in the project. Create a script test_palmerpenguins.R, type library(palmerpenguins), and save it in your project. Then try the snapshot command again:\n\n\n\nConsole\n\nrenv::snapshot()\n\n\nYour console should have an output like this:\n\n\n\nOutput\n\nThe following package(s) will be updated in the lockfile:\n\n# CRAN -----------------------------------------------\n- palmerpenguins    [* -&gt; 0.1.1]\n\nDo you want to proceed? [Y/n]: \n\n\nAgain, type Y. Then, you should see an output like this:\n\n\n\nOutput\n\n- Lockfile written to \"path/to/your/project/folder/renv.lock\".\n\n\nWhen you open the lockfile, you will find the metadata of palmerpenguins there. renv::snapshot() is useful because you and your collaborators will be able to reconstruct your package versions. The reconstruction relies on the lockfile and renv::snapshot() will update your current packages used in your project.\n\n\n6.2.1.4 renv::restore\nSay you successfully built up a project library, installed packages to it and saved the metadata into your lockfile. Future you or other collaborators or researchers now want to reproduce your code and need to use the particular package versions. The collaborators found your project and code and downloaded it. They now want to install the particular package versions. To simplify this step, one can use the renv::restore() function.\n\n\n\nConsole\n\nrenv::restore()\n\n\nThen you should get an output like this:\n\n\n\nOutput\n\nThe following package(s) will be updated:\n\n# CRAN -----------------------------------------------------------------------\n- fontawesome    [0.5.2 -&gt; 0.5.3]\n- knitr          [1.48 -&gt; 1.49]\n- rmarkdown      [2.28 -&gt; 2.29]\n- tinytex        [0.53 -&gt; 0.54]\n- cyclocomp      [* -&gt; 1.1.1]\n- lazyeval       [* -&gt; 0.2.2]\n- lintr          [* -&gt; 3.1.2]\n- remotes        [* -&gt; 2.5.0]\n- rex            [* -&gt; 1.2.1]\n- xmlparsedata   [* -&gt; 1.0.5]\n\nDo you want to proceed? [Y/n]:\n\n\nType in Y and you should get an output similar to this:\n\n\n\nOutput\n\n# Downloading packages -------------------------------------------------------\n- Querying repositories for available binary packages ... Done!\n- Downloading rmarkdown from CRAN ...           OK [2.5 Mb in 1.2s]\n- Downloading fontawesome from CRAN ...         OK [1.3 Mb in 0.89s]\n- Downloading knitr from CRAN ...               OK [1.1 Mb in 1.1s]\n- Downloading tinytex from CRAN ...             OK [140.3 Kb in 0.68s]\nSuccessfully downloaded 4 packages in 6.4 seconds.\n\n# Installing packages --------------------------------------------------------\n- Installing fontawesome ...                    OK [installed binary and cached in 0.26s]\n- Installing knitr ...                          OK [installed binary and cached in 1.2s]\n- Installing tinytex ...                        OK [installed binary and cached in 0.24s]\n- Installing rmarkdown ...                      OK [installed binary and cached in 1.6s]\n- Installing remotes ...                        OK [linked from cache]\n- Installing cyclocomp ...                      OK [linked from cache]\n- Installing lazyeval ...                       OK [linked from cache]\n- Installing rex ...                            OK [linked from cache]\n- Installing xmlparsedata ...                   OK [linked from cache]\n- Installing lintr ...                          OK [linked from cache]\n\nThe following loaded package(s) have been updated:\n- knitr\nRestart your R session to use the new versions.\n\n\n\n\n6.2.1.5 renv::status\nYou can check the status of your dependency management by using renv::status().\n\n\n\nConsole\n\nrenv::status()\n\n\nIf everything is alright, you should get an output message similar to this:\n\n\n\nOutput\n\nNo issues found -- the project is in a consistent state.\n\n\nHowever, there can still arise some issues. You can see an example below\n\n\n\nOutput\n\nThe following package(s) are in an inconsistent state:\n\n package  installed recorded used\n ellipsis y         y        n   \n\nSee `?renv::status` for advice on resolving these issues.\n\n\nFortunately, the messages displayed by renv are very straightforward. It tells us to go to the helper page by running ?renv::status.\n\n\n\n\n\n\nSection of the helping page for renv::status()\n\n\n\n\n\nMissing packages\nstatus() first checks that all packages used by the project are installed. This must be done first because if any packages are missing we can’t tell for sure that a package isn’t used; it might be a dependency that we don’t know about. Once you have resolve any installation issues, you’ll need to run status() again to reveal the next set of potential problems.\nThere are four possibilities for an uninstalled package:\n\nIf it’s used and recorded, call renv::restore() to install the version specified in the lockfile.\nIf it’s used and not recorded, call renv::install() to install it from CRAN or elsewhere.\nIf it’s not used and recorded, call renv::snapshot() to remove it from the lockfile.\nIf it’s not used and not recorded, there’s nothing to do. This the most common state because you only use a small fraction of all available packages in any one project.\nIf you have multiple packages in an inconsistent state, we recommend renv::restore(), then renv::install(), then renv::snapshot(), but that also suggests you should be running status more frequently.\n\nLockfile vs dependencies()\nNext we need to ensure that packages are recorded in the lockfile if and only if they are used by the project. Fixing issues of this nature only requires calling snapshot() because there are four possibilities for a package:\n\nIf it’s used and recorded, it’s ok.\nIf it’s used and not recorded, call renv::snapshot() to add it to the lockfile.\nIf it’s not used but is recorded, call renv::snapshot() to remove it from the lockfile.\nIf it’s not used and not recorded, it’s also ok, as it may be a development dependency.\n\n\n\n\nIn the helping page our case is well-described. We can just run renv::snapshot to remove it from the lockfile. Thus, our lockfile does not contain the unused package ellipsis.\n\n\n\n\n\n\nVideo explaining basic renv functions\n\n\n\nFor further information, see this video to increase your understanding of renv.\n\n\n\n\n\n\nVideo 6.1: “Robust R Code That Will Work Forever With {renv}”. The video by Rapp (2024) aims to display and explain common workflows when creating a reproducible environment using {renv}. License: not specified. Reused without modifications.\n\n\n\n\n\n\n\n\n6.2.2 renv-workflow\n\n\n\n\n\n\nFigure 6.1: “renv workflow” by Kevin Ushey and Hadley Wickham (License: MIT License; reused without modifications)\n\n\n\nIn Figure 6.1, you can see how the basic functions in renv work. You know the most important things now, but it sure can help to have a guideline.\n\n\n\n\n\n\nStep-by-step guide for renv\n\n\n\n\nCreate a reproducible environmentReproduce such an environment\n\n\n\nCreate an R project\nInstall renv \\(\\rightarrow\\) install.packages(\"renv\")\nInitialize reproducible environment \\(\\rightarrow\\) renv::init()\nCheck status \\(\\rightarrow\\) renv::status()\nUse help page from renv::status \\(\\rightarrow\\) ?renv::status()\nInstall packages to project library \\(\\rightarrow\\) renv::install()\nCode something that makes you happy, e.g. a wonderful plot\nSave your used packages into your lockfile \\(\\rightarrow\\) renv::snapshot()\n\n\n\n\nDownload the project folder e.g. from https://osf.io or https://zenodo.org\nOpen R project by clicking the .Rproj file\nCheck status \\(\\rightarrow\\) renv::status()\nUse help page from renv::status \\(\\rightarrow\\) ?renv::status()\nRestore the project library from the lockfile \\(\\rightarrow\\) renv::restore()\nRun the code written be past you or an other researcher",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Robust Environments: `{renv}`</span>"
    ]
  },
  {
    "objectID": "chapters/renv.html#limitations-of-renv",
    "href": "chapters/renv.html#limitations-of-renv",
    "title": "6  Robust Environments: {renv}",
    "section": "6.3 Limitations of renv",
    "text": "6.3 Limitations of renv\nAs you can see in the lockfile, renv tracks not only the package versions but also the R version. However, renv cannot solve reproducibility issues when it comes to different R versions. It is possible to deal with this problem installing the specific R version used in the project you want to reproduce. Another way is using docker (see chapter about docker). However, it requires more time and work to make a project reproducible. Further, the benefits of separate projects comes with a constraint. Possible bug fixes that are included in later versions of a package are not implemented in the project libraries. Nevertheless, we recommend renv as a valuable tool for increasing a project’s reproducibility.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Robust Environments: `{renv}`</span>"
    ]
  },
  {
    "objectID": "chapters/renv.html#references",
    "href": "chapters/renv.html#references",
    "title": "6  Robust Environments: {renv}",
    "section": "6.4 References",
    "text": "6.4 References\nsomehow include:\n\nhttps://rstudio.github.io/renv/articles/renv.html\n\n\n\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.\n\n\nRapp, Albert. 2024. “Robust r Code That Will Work Forever with renv.” YouTube. https://www.youtube.com/watch?v=Oen9xhEh8PY.\n\n\nThe Turing Way Community. 2022. The Turing Way: A Handbook for Reproducible, Ethical and Collaborative Research. Zenodo. https://doi.org/10.5281/zenodo.3233853.\n\n\nUshey, Kevin, and Hadley Wickham. 2024. Renv: Project Environments. https://rstudio.github.io/renv/.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Robust Environments: `{renv}`</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "7  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Artner, Richard, Thomas Verliefde, Sara Steegen, Sara Gomes, Frits\nTraets, Francis Tuerlinckx, and Wolf Vanpaemel. 2021. “The\nReproducibility of Statistical Results in Psychological Research: An\nInvestigation Using Unpublished Raw Data.” Psychological\nMethods 26: 527–46. https://doi.org/10.1037/met0000365.\n\n\nBarker, Michelle, Neil P. Chue Hong, Daniel S. Katz, Anna-Lena\nLamprecht, Carlos Martinez-Ortiz, Fotis Psomopoulos, Jennifer Harrow, et\nal. 2022. “Introducing the FAIR Principles for Research\nSoftware.” Scientific Data 9: 622. https://doi.org/10.1038/s41597-022-01710-x.\n\n\nBegley, C. Glenn, and Lee M. Ellis. 2012. “Raise Standards for\nPreclinical Cancer Research.” Nature 483: 531–33. https://doi.org/10.1038/483531a.\n\n\nBroman, Karl W., and Kara H. Woo. 2018. “Data Organization in\nSpreadsheets.” The American Statistician 72 (1): 2–10.\nhttps://doi.org/10.1080/00031305.2017.1375989.\n\n\nBryan, Jenny. 2015. “How to Name Files.” https://speakerdeck.com/jennybc/how-to-name-files.\n\n\nChacon, Scott, and Ben Straub. 2014. Pro Git. Apress. https://doi.org/10.1007/978-1-4842-0076-6.\n\n\nCribb, Julian, and Tjempaka Sari. 2010. Open Science: Sharing\nKnowledge in the Global Century. CSIRO Publishing. https://doi.org/10.1071/9780643097643.\n\n\nCrüwell, Sophia, Deborah Apthorp, Bradley J. Baker, Lincoln Colling,\nMalte Elson, Sandra J. Geiger, Sebastian Lobentanzer, et al. 2023.\n“What’s in a Badge? A Computational Reproducibility Investigation\nof the Open Data Badge Policy in One Issue of Psychological\nScience.” Psychological Science 34: 513–22. https://doi.org/10.1177/09567976221140828.\n\n\nEsteban, Oscar, Christopher J. Markiewicz, Ross W. Blair, Craig A.\nMoodie, A. Ilkay Isik, Asier Erramuzpe, James D. Kent, et al. 2019.\n“fMRIPrep: A Robust Preprocessing Pipeline for Functional\nMRI.” Nature Methods 16 (January): 111–16. https://doi.org/10.1038/s41592-018-0235-4.\n\n\nFischetti, Tony. 2023. Assertr: Assertive Programming for r Analysis\nPipelines. https://doi.org/10.32614/CRAN.package.assertr.\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron\nCraddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016.\n“The Brain Imaging Data Structure, a Format for Organizing and\nDescribing Outputs of Neuroimaging Experiments.” Scientific\nData 3 (1). https://doi.org/10.1038/sdata.2016.44.\n\n\nHanson, Karen, Alisa Surkis, and Karen Yacobucci. 2019. “Data\nSharing and Management Snafu in 3 Short Acts.” https://doi.org/10.6084/M9.FIGSHARE.8061722.V1.\n\n\nHardwicke, Tom E., Manuel Bohn, Kyle MacDonald, Emily Hembacher, Michéle\nB. Nuijten, Benjamin N. Peloquin, Benjamin E. deMayo, Bria Long, Erica\nJ. Yoon, and Michael C. Frank. 2021. “Analytic Reproducibility in\nArticles Receiving Open Data Badges at the Journal *Psychological\nScience*: An Observational Study.” Royal Society Open\nScience 8: 201494. https://doi.org/10.1098/rsos.201494.\n\n\nHerndon, Thomas, Michael Ash, and Robert Pollin. 2014. “Does High\nPublic Debt Consistently Stifle Economic Growth? A Critique of Reinhart\nand Rogoff.” Cambridge Journal of Economics 38 (2):\n257–79. https://doi.org/10.1093/cje/bet075.\n\n\nHester, Jim, Florent Angly, Russ Hyde, Michael Chirico, Kun Ren,\nAlexander Rosenstock, and Indrajeet Patil. 2024. Lintr: A ’Linter’\nfor r Code. https://CRAN.R-project.org/package=lintr.\n\n\nJohn, Leslie K., George Loewenstein, and Drazen Prelec. 2012.\n“Measuring the Prevalence of Questionable Research Practices With\nIncentives for Truth Telling.” Psychological Science 23\n(5): 524–32. https://doi.org/10.1177/0956797611430953.\n\n\nLakomý, Martin, Renata Hlavová, and Hana Machackova. 2019. “Open\nScience and the Science-Society Relationship.” Society\n56: 246–55. https://doi.org/10.1007/s12115-019-00361-w.\n\n\nMüller, Kirill. 2020. Here: A Simpler Way to Find Your Files.\nhttps://here.r-lib.org/.\n\n\nNosek, Brian A., Tom E. Hardwicke, Hannah Moshontz, Aurélien Allard,\nKatherine S. Corker, Anna Dreber, Fiona Fidler, et al. 2022.\n“Replicability, Robustness, and Reproducibility in Psychological\nScience.” Annual Review of Psychology 73 (1): 719–48. https://doi.org/10.1146/annurev-psych-020821-114157.\n\n\nObels, Pepijn, Daniël Lakens, Nicholas A. Coles, Jaroslav Gottfried, and\nSeth A. Green. 2020. “Analysis of Open Data and Computational\nReproducibility in Registered Reports in Psychology.”\nAdvances in Methods and Practices in Psychological Science 3:\n229–37. https://doi.org/10.1177/2515245920918872.\n\n\nOpen Science Collaboration. 2015. “Estimating the Reproducibility\nof Psychological Science.” Science 349 (August):\naac4716. https://doi.org/10.1126/science.aac4716.\n\n\nRapp, Albert. 2024. “Robust r Code That Will Work Forever with\nrenv.” YouTube. https://www.youtube.com/watch?v=Oen9xhEh8PY.\n\n\nReinhart, Carmen M., and Kenneth S. Rogoff. 2010. “Growth in a\nTime of Debt.” American Economic Review 100 (2): 573–78.\nhttps://doi.org/10.1257/aer.100.2.573.\n\n\nRennie, Nicola. 2024. “Writing Better r Code.” https://nrennie.rbind.io/training-better-r-code/.\n\n\nThe Turing Way Community. 2022. The Turing Way: A Handbook for\nReproducible, Ethical and Collaborative Research. Zenodo. https://doi.org/10.5281/zenodo.3233853.\n\n\nUshey, Kevin, and Hadley Wickham. 2024. Renv: Project\nEnvironments. https://rstudio.github.io/renv/.\n\n\nWickham, Hadley. 2014. “Tidy Data.” Jornal of\nStatistical Software 59 (10): 1–23. https://doi.org/10.18637/jss.v059.i10.\n\n\nWickham, H., M. Çetinkaya-Rundel, and G. Grolemund. 2023. R for Data\nScience: Import, Tidy, Transform, Visualize, and Model Data.\nO’Reilly Media. https://r4ds.hadley.nz.\n\n\nWikipedia Contributors. 2025. “Modularity.” https://en.wikipedia.org/wiki/Modularity.\n\n\nWilkinson, Mark D., Michel Dumontier, IJsbrand Jan Aalbersberg,\nGabrielle Appleton, Myles Axton, Arie Baak, Niklas Blomberg, et al.\n2016. “The FAIR Guiding Principles for Scientific Data Management\nand Stewardship.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.18.\n\n\nWittkuhn, Lennart, and Konrad Pagenstedt. 2024. Version Control\nBook. ZFDM Repository. https://doi.org/10.25592/uhhfdm.14149.\n\n\nZiemann, M., Y. Eren, and A. El-Osta. 2016. “Gene Name Erorrs Are\nWidespread in the Scientific Literature.” Genome Biology\n17 (August). https://doi.org/10.1186/s13059-016-1044-7.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "acknowledgements.html",
    "href": "acknowledgements.html",
    "title": "Acknowledgements",
    "section": "",
    "text": "Funding\nThis work is funded by the Digital and Data Literacy in Teaching Lab (DDLitLab), an initiative by the Center for Interdisciplinary Study Programs (Zentrum für Interdisziplinäre Studienangebote; ISA-Zentrum) at the University of Hamburg, Germany. The Digital and Data Literacy in Teaching Lab program is in turn funded by the Stiftung Innovation in der Hochschullehre (details about the funding program can be found here).",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "acknowledgements.html#code",
    "href": "acknowledgements.html#code",
    "title": "Acknowledgements",
    "section": "Code",
    "text": "Code\nThis website is made with Quarto. The source code of this website can be found on GitHub.",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "acknowledgements.html#images",
    "href": "acknowledgements.html#images",
    "title": "Acknowledgements",
    "section": "Images",
    "text": "Images\nImages are stored on Nextcloud (UHH Cloud). They can be retrieved using\n\n\n\nCode\n\nmake images\n\n\n\n\nClick here to view the full Makefile of this project.\n\n\n\n\nMakefile\n\nIMAGES_URL=https://cloud.uni-hamburg.de/s/pzEHT5DF3PzFdLH/download\nIMAGES_ARCHIVE=repro-book-images.zip\nIMAGES_DIR=images/\n\nall: render\n\n.PHONY: preview\npreview:\n    quarto preview\n\n.PHONY: render\nrender: clean images\n    quarto render\n\n.PHONY: pdf\npdf: clean images\n    quarto render --profile pdf\n    \n.PHONY: deploy\ndeploy: clean images\n    quarto publish gh-pages\n\n.PHONY: images\nimages:\n    curl $(IMAGES_URL) -o $(IMAGES_ARCHIVE)\n    unzip -j -o $(IMAGES_ARCHIVE) -d $(IMAGES_DIR)\n    rm -f $(IMAGES_ARCHIVE)\n\n.PHONY: clean\nclean:\n    rm -rf $(IMAGES_DIR)* _book/",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "acknowledgements.html#analytics",
    "href": "acknowledgements.html#analytics",
    "title": "Acknowledgements",
    "section": "Analytics",
    "text": "Analytics\nWe use Plausible for website analytics. Plausible is an “intuitive, lightweight and open source web analytics”, does not use cookies and is fully compliant with GDPR, CCPA and PECR.",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "acknowledgements.html#license",
    "href": "acknowledgements.html#license",
    "title": "Acknowledgements",
    "section": "License",
    "text": "License\nAll contents are licensed under a Creative Commons Attribution 4.0 International (CC BY 4.0) license, unless indicated otherwise.",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "acknowledgements.html#contact",
    "href": "acknowledgements.html#contact",
    "title": "Acknowledgements",
    "section": "Contact",
    "text": "Contact\nDid you spot an error? Is there an issue with the website? Do you have feedback, questions or comments? We would love to hear from you! Please open an issue on GitHub or send an email. Thank you!\n\n\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "contributing.html",
    "href": "contributing.html",
    "title": "Contributing",
    "section": "",
    "text": "Overview\nGitHub: This section explains how to get the source code from Github to work on this project.\nRStudio Project: This section explains how to use RStudio Project to work on this project.\nQuarto: This section explains how to use Quarto to work on this project.\nDependency Management: This section explains how this project manages package dependencies using renv.\nCode: This section explains how to add code snippets.\nImages: This section e explains how to add images.\nReferences: This section explains how to add references.\nVariables: This section explains how to use variables.\nFontawesome Icons: This section explains how to add icons.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#sec-github",
    "href": "contributing.html#sec-github",
    "title": "Contributing",
    "section": "GitHub",
    "text": "GitHub\nThis book is developed with Git and within the  GitHub-environment. You can download the source code from GitHub by clicking on the Code-Button. You must then press either Open with GitHub Desktop (requires  GitHub Desktop) or Download ZIP. For a detailed introduction on Git and GitHub see this Version Control Book. For an overview about the project structure of this Reproducibility Book, look at the README.md-file on GitHub.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#sec-rstudio-project",
    "href": "contributing.html#sec-rstudio-project",
    "title": "Contributing",
    "section": "RStudio Project",
    "text": "RStudio Project\n\n “Using RStudio Projects”\n\nWe recommend working in RStudio and open the RStudio Project.\n\n RStudio Terminal\n\n\n\nDouble-click on the project file repro-book.Rproj within your computer’s file system (for example, macOS Finder).\n\n\n\nIn the Terminal, run:\n\nopen repro-book.Rproj\n\nThis will open the RStudio Project in RStudio.\n\n\n\n\n\n Click here to view the full repro-book.Rproj file of this project.\n\n\n\n\nrepro-book.Rproj\n\nVersion: 1.0\n\nRestoreWorkspace: No\nSaveWorkspace: No\nAlwaysSaveHistory: No\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n\nBuildType: Makefile\n\nMarkdownWrap: Sentence",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#sec-quarto",
    "href": "contributing.html#sec-quarto",
    "title": "Contributing",
    "section": "Quarto",
    "text": "Quarto\nThis book is made with Quarto.\n\nLocal development\n\nSetup\n\nRead the Get Started chapter of the Quarto documentation, which includes details on installation.\n\n\n\nPreparation\n\nRead this guide on how to contribute.\nFamiliarize yourself with Quarto Books.\n\n\n\nLocal preview\n\nquarto preview\n\n\n\n\nAdd a new chapter\n\nCreate a new Quarto document inside the /chapters/ folder.\nAdd the new chapter to _quarto.yml. Don’t forget to specify the full path (including chapters/).\n\n\n\n\n_quarto.yml (excerpt)\n\nchapters:\n  - index.qmd\n1  - chapters/YOUR-NEW-CHAPTER.qmd\n  - another-chapter.qmd\n\n\n\n1\n\nReplace YOUR-NEW-CHAPTER with a concise filename.\n\n\n\n\n\n\n Click here to view the full _quarto.yml file of this project.\n\n\n\n\n_quarto.yml\n\nproject:\n  type: book\n  execute-dir: project\n  output-dir: _book\n  preview: \n    port: 7777\n    host: 127.0.0.1\n    browser: true\n    watch-inputs: true\n    navigate: true\n\nbook:\n  # book:\n  title: \"The Repro Book\"\n  subtitle: \"A Guide to Reproducible Research\"\n  # favicon: static/logo.svg\n  site-url: https://lennartwittkuhn.com/repro-book/\n  repo-url: https://github.com/lnnrtwttkhn/repro-book/\n  repo-branch: main\n  issue-url: https://github.com/lnnrtwttkhn/repro-book/issues\n  repo-actions: [edit, issue, source]\n  page-navigation: true\n  back-to-top-navigation: true\n  search: true\n  twitter-card: false\n  chapters:\n    - index.qmd\n    - contents.qmd\n    - chapters/intro.qmd\n    - chapters/naming-things.qmd\n    - chapters/project-structure.qmd\n    - chapters/rdm.qmd\n    - chapters/good-coding-practices.qmd\n    - chapters/renv.qmd\n    - summary.qmd\n    - references.qmd\n    - acknowledgements.qmd\n    - contributing.qmd\n  sidebar:\n    id: sidebar\n    title: \"{{&lt; var project.title &gt;}}\"\n    # logo: static/logo.svg\n    search: true\n    tools:\n      - icon: globe\n        href: https://lennartwittkuhn.com/repro-book/\n      - icon: bug\n        href: https://github.com/lnnrtwttkhn/repro-book/\n    style: floating\n    type: light\n    border: false\n    alignment: center\n    collapse-level: 2\n    pinned: true\n    footer: |\n      [![Website](https://img.shields.io/website?url=https%3A%2F%2Flennartwittkuhn.com%2Frepro-book%2F)]({{&lt; var project.site-url &gt;}})\n      [![License: CC BY 4.0](https://img.shields.io/badge/License-CC_BY_4.0-lightgrey.svg)](https://creativecommons.org/licenses/by/4.0/)\n      [![Quarto Publish]({{&lt; var project.repo-url &gt;}}/actions/workflows/publish.yml/badge.svg)]({{&lt; var project.repo-url &gt;}}/actions/workflows/publish.yml)\n      [![Codespell]({{&lt; var project.repo-url &gt;}}/actions/workflows/codespell.yml/badge.svg)]({{&lt; var project.repo-url &gt;}}/actions/workflows/codespell.yml)\n      [![All Contributors](https://img.shields.io/github/all-contributors/projectOwner/projectName?color=ee8449&style=flat-square)]({{&lt; var project.contributors-url &gt;}})\n  page-footer:\n    left: |\n      &copy; {{&lt; var project.duration &gt;}} [{{&lt; var project.title &gt;}} Team]({{&lt; var project.contributors-url &gt;}})\n    center:\n      - text: \"Acknowledgements\"\n        href: acknowledgements.qmd\n    right: |\n      License: {{&lt; var project.license-short &gt;}}\n    border: false\n    background: light\n\ntoc: true\ntoc-depth: 3\ntoc-location: right\ntoc-title: \"Contents\"\nnumber-sections: true\nnumber-depth: 4\ncap-location: bottom\ncode-line-numbers: false\ncode-annotations: below\nhighlight-style: monokai\nreference-location: document  \nlang: en-US  \nbibliography: references.bib\ncitations-hover: true\ncitation-location: document\nciteproc: true\nfrom: markdown+emoji\nlicense: CC BY\nabstract-title: \"Summary\"\nmetadata-files:\n  - _images.yml\n\nformat:\n  html:\n    theme: [default, custom.scss]\n    anchor-sections: true\n    smooth-scroll: true\n    toc-expand: 2\n    page-layout: full\n    title-block-style: default\n    code-fold: false\n    code-overflow: scroll\n    code-copy: true\n    code-link: false\n    code-tools: false\n    link-external-newwindow: true\n    footnotes-hover: true\n    include-after-body: plausible.html\n    crossref:\n      custom:\n        - kind: float\n          reference-prefix: Video\n          key: vid",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#sec-dependency-management",
    "href": "contributing.html#sec-dependency-management",
    "title": "Contributing",
    "section": "Dependency Management",
    "text": "Dependency Management\nWe use renv for project-local  dependency management. For details on renv, see the renv documentation.\n\nUsing renv for the first time\nAfter you open the Rstudio Project, you will (hopefully) see a similar output in the RStudio console:\n\n\n\nOutput\n\n# Bootstrapping renv 0.17.3 --------------------------------------------------\n* Downloading renv 0.17.3 ... OK (downloaded binary)\n* Installing renv 0.17.3 ... Done!\n* Successfully installed and loaded renv 0.17.3.\n* Project '~/repro-book' loaded. [renv 0.17.3]\n* This project contains a lockfile, but none of the recorded packages are installed.\n* Use `renv::restore()` to restore the project library.\n\n\nThis output tells you that (1) renv was automatically installed and loaded, (2) the renv environment for the project was loaded, and (3) that none of packages recorded in the renv lockfile are installed.\nThe renv lockfile captures the state of the package library of the project at some point in time. It is defining the version of renv used when generating the lockfile, the version of  used in that project, the R repositories that were active when the lockfile was created and the package records defining each  package, their version, and their installation source. For details on the anatomy of renv.lock, see this section in the renv documentation.\n\n\n Click here to view the full renv.lock file of this project.\n\n\n\n\nrenv.lock\n\n{\n  \"R\": {\n    \"Version\": \"4.4.1\",\n    \"Repositories\": [\n      {\n        \"Name\": \"CRAN\",\n        \"URL\": \"https://packagemanager.posit.co/cran/latest\"\n      }\n    ]\n  },\n  \"Packages\": {\n    \"MASS\": {\n      \"Package\": \"MASS\",\n      \"Version\": \"7.3-61\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"graphics\",\n        \"methods\",\n        \"stats\",\n        \"utils\"\n      ],\n      \"Hash\": \"0cafd6f0500e5deba33be22c46bf6055\"\n    },\n    \"R6\": {\n      \"Package\": \"R6\",\n      \"Version\": \"2.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"470851b6d5d0ac559e9d01bb352b4021\"\n    },\n    \"assertr\": {\n      \"Package\": \"assertr\",\n      \"Version\": \"3.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"MASS\",\n        \"R\",\n        \"dplyr\",\n        \"methods\",\n        \"rlang\",\n        \"stats\",\n        \"utils\"\n      ],\n      \"Hash\": \"dd34511e88d11c95e80f8d9bb0606e79\"\n    },\n    \"backports\": {\n      \"Package\": \"backports\",\n      \"Version\": \"1.5.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"e1e1b9d75c37401117b636b7ae50827a\"\n    },\n    \"base64enc\": {\n      \"Package\": \"base64enc\",\n      \"Version\": \"0.1-3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"543776ae6848fde2f48ff3816d0628bc\"\n    },\n    \"bslib\": {\n      \"Package\": \"bslib\",\n      \"Version\": \"0.8.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"cachem\",\n        \"fastmap\",\n        \"grDevices\",\n        \"htmltools\",\n        \"jquerylib\",\n        \"jsonlite\",\n        \"lifecycle\",\n        \"memoise\",\n        \"mime\",\n        \"rlang\",\n        \"sass\"\n      ],\n      \"Hash\": \"b299c6741ca9746fb227debcb0f9fb6c\"\n    },\n    \"cachem\": {\n      \"Package\": \"cachem\",\n      \"Version\": \"1.1.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"fastmap\",\n        \"rlang\"\n      ],\n      \"Hash\": \"cd9a672193789068eb5a2aad65a0dedf\"\n    },\n    \"callr\": {\n      \"Package\": \"callr\",\n      \"Version\": \"3.7.6\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"processx\",\n        \"utils\"\n      ],\n      \"Hash\": \"d7e13f49c19103ece9e58ad2d83a7354\"\n    },\n    \"cli\": {\n      \"Package\": \"cli\",\n      \"Version\": \"3.6.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"b21916dd77a27642b447374a5d30ecf3\"\n    },\n    \"codetools\": {\n      \"Package\": \"codetools\",\n      \"Version\": \"0.2-20\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"61e097f35917d342622f21cdc79c256e\"\n    },\n    \"cpp11\": {\n      \"Package\": \"cpp11\",\n      \"Version\": \"0.5.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"91570bba75d0c9d3f1040c835cee8fba\"\n    },\n    \"crayon\": {\n      \"Package\": \"crayon\",\n      \"Version\": \"1.5.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"grDevices\",\n        \"methods\",\n        \"utils\"\n      ],\n      \"Hash\": \"859d96e65ef198fd43e82b9628d593ef\"\n    },\n    \"cyclocomp\": {\n      \"Package\": \"cyclocomp\",\n      \"Version\": \"1.1.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"callr\",\n        \"crayon\",\n        \"desc\",\n        \"remotes\",\n        \"withr\"\n      ],\n      \"Hash\": \"cdc4a473222b0112d4df0bcfbed12d44\"\n    },\n    \"data.table\": {\n      \"Package\": \"data.table\",\n      \"Version\": \"1.16.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"2e00b378fc3be69c865120d9f313039a\"\n    },\n    \"desc\": {\n      \"Package\": \"desc\",\n      \"Version\": \"1.4.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"cli\",\n        \"utils\"\n      ],\n      \"Hash\": \"99b79fcbd6c4d1ce087f5c5c758b384f\"\n    },\n    \"digest\": {\n      \"Package\": \"digest\",\n      \"Version\": \"0.6.37\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"33698c4b3127fc9f506654607fb73676\"\n    },\n    \"dplyr\": {\n      \"Package\": \"dplyr\",\n      \"Version\": \"1.1.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"cli\",\n        \"generics\",\n        \"glue\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"methods\",\n        \"pillar\",\n        \"rlang\",\n        \"tibble\",\n        \"tidyselect\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"fedd9d00c2944ff00a0e2696ccf048ec\"\n    },\n    \"evaluate\": {\n      \"Package\": \"evaluate\",\n      \"Version\": \"1.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"3fd29944b231036ad67c3edb32e02201\"\n    },\n    \"fansi\": {\n      \"Package\": \"fansi\",\n      \"Version\": \"1.0.6\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"utils\"\n      ],\n      \"Hash\": \"962174cf2aeb5b9eea581522286a911f\"\n    },\n    \"fastmap\": {\n      \"Package\": \"fastmap\",\n      \"Version\": \"1.2.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"aa5e1cd11c2d15497494c5292d7ffcc8\"\n    },\n    \"fontawesome\": {\n      \"Package\": \"fontawesome\",\n      \"Version\": \"0.5.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"htmltools\",\n        \"rlang\"\n      ],\n      \"Hash\": \"bd1297f9b5b1fc1372d19e2c4cd82215\"\n    },\n    \"fs\": {\n      \"Package\": \"fs\",\n      \"Version\": \"1.6.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"7f48af39fa27711ea5fbd183b399920d\"\n    },\n    \"generics\": {\n      \"Package\": \"generics\",\n      \"Version\": \"0.1.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"15e9634c0fcd294799e9b2e929ed1b86\"\n    },\n    \"glue\": {\n      \"Package\": \"glue\",\n      \"Version\": \"1.8.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\"\n      ],\n      \"Hash\": \"5899f1eaa825580172bb56c08266f37c\"\n    },\n    \"here\": {\n      \"Package\": \"here\",\n      \"Version\": \"1.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"rprojroot\"\n      ],\n      \"Hash\": \"24b224366f9c2e7534d2344d10d59211\"\n    },\n    \"highr\": {\n      \"Package\": \"highr\",\n      \"Version\": \"0.11\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"xfun\"\n      ],\n      \"Hash\": \"d65ba49117ca223614f71b60d85b8ab7\"\n    },\n    \"htmltools\": {\n      \"Package\": \"htmltools\",\n      \"Version\": \"0.5.8.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"digest\",\n        \"fastmap\",\n        \"grDevices\",\n        \"rlang\",\n        \"utils\"\n      ],\n      \"Hash\": \"81d371a9cc60640e74e4ab6ac46dcedc\"\n    },\n    \"htmlwidgets\": {\n      \"Package\": \"htmlwidgets\",\n      \"Version\": \"1.6.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"grDevices\",\n        \"htmltools\",\n        \"jsonlite\",\n        \"knitr\",\n        \"rmarkdown\",\n        \"yaml\"\n      ],\n      \"Hash\": \"04291cc45198225444a397606810ac37\"\n    },\n    \"jquerylib\": {\n      \"Package\": \"jquerylib\",\n      \"Version\": \"0.1.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"htmltools\"\n      ],\n      \"Hash\": \"5aab57a3bd297eee1c1d862735972182\"\n    },\n    \"jsonlite\": {\n      \"Package\": \"jsonlite\",\n      \"Version\": \"1.8.9\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"methods\"\n      ],\n      \"Hash\": \"4e993b65c2c3ffbffce7bb3e2c6f832b\"\n    },\n    \"knitr\": {\n      \"Package\": \"knitr\",\n      \"Version\": \"1.49\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"evaluate\",\n        \"highr\",\n        \"methods\",\n        \"tools\",\n        \"xfun\",\n        \"yaml\"\n      ],\n      \"Hash\": \"9fcb189926d93c636dea94fbe4f44480\"\n    },\n    \"lazyeval\": {\n      \"Package\": \"lazyeval\",\n      \"Version\": \"0.2.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"d908914ae53b04d4c0c0fd72ecc35370\"\n    },\n    \"lifecycle\": {\n      \"Package\": \"lifecycle\",\n      \"Version\": \"1.0.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"rlang\"\n      ],\n      \"Hash\": \"b8552d117e1b808b09a832f589b79035\"\n    },\n    \"lintr\": {\n      \"Package\": \"lintr\",\n      \"Version\": \"3.1.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"backports\",\n        \"codetools\",\n        \"cyclocomp\",\n        \"digest\",\n        \"glue\",\n        \"knitr\",\n        \"rex\",\n        \"stats\",\n        \"utils\",\n        \"xml2\",\n        \"xmlparsedata\"\n      ],\n      \"Hash\": \"08cff46381a242d44c0d8dd0aabd9f71\"\n    },\n    \"magrittr\": {\n      \"Package\": \"magrittr\",\n      \"Version\": \"2.0.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"7ce2733a9826b3aeb1775d56fd305472\"\n    },\n    \"memoise\": {\n      \"Package\": \"memoise\",\n      \"Version\": \"2.0.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"cachem\",\n        \"rlang\"\n      ],\n      \"Hash\": \"e2817ccf4a065c5d9d7f2cfbe7c1d78c\"\n    },\n    \"mime\": {\n      \"Package\": \"mime\",\n      \"Version\": \"0.12\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"tools\"\n      ],\n      \"Hash\": \"18e9c28c1d3ca1560ce30658b22ce104\"\n    },\n    \"pillar\": {\n      \"Package\": \"pillar\",\n      \"Version\": \"1.9.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"cli\",\n        \"fansi\",\n        \"glue\",\n        \"lifecycle\",\n        \"rlang\",\n        \"utf8\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"15da5a8412f317beeee6175fbc76f4bb\"\n    },\n    \"pkgconfig\": {\n      \"Package\": \"pkgconfig\",\n      \"Version\": \"2.0.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"utils\"\n      ],\n      \"Hash\": \"01f28d4278f15c76cddbea05899c5d6f\"\n    },\n    \"processx\": {\n      \"Package\": \"processx\",\n      \"Version\": \"3.8.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"R6\",\n        \"ps\",\n        \"utils\"\n      ],\n      \"Hash\": \"0c90a7d71988856bad2a2a45dd871bb9\"\n    },\n    \"ps\": {\n      \"Package\": \"ps\",\n      \"Version\": \"1.8.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"b4404b1de13758dea1c0484ad0d48563\"\n    },\n    \"purrr\": {\n      \"Package\": \"purrr\",\n      \"Version\": \"1.0.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"rlang\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"1cba04a4e9414bdefc9dcaa99649a8dc\"\n    },\n    \"rappdirs\": {\n      \"Package\": \"rappdirs\",\n      \"Version\": \"0.3.3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"5e3c5dc0b071b21fa128676560dbe94d\"\n    },\n    \"remotes\": {\n      \"Package\": \"remotes\",\n      \"Version\": \"2.5.0\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"methods\",\n        \"stats\",\n        \"tools\",\n        \"utils\"\n      ],\n      \"Hash\": \"3ee025083e66f18db6cf27b56e23e141\"\n    },\n    \"renv\": {\n      \"Package\": \"renv\",\n      \"Version\": \"1.0.11\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"utils\"\n      ],\n      \"Hash\": \"47623f66b4e80b3b0587bc5d7b309888\"\n    },\n    \"rex\": {\n      \"Package\": \"rex\",\n      \"Version\": \"1.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"lazyeval\"\n      ],\n      \"Hash\": \"ae34cd56890607370665bee5bd17812f\"\n    },\n    \"rlang\": {\n      \"Package\": \"rlang\",\n      \"Version\": \"1.1.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"utils\"\n      ],\n      \"Hash\": \"3eec01f8b1dee337674b2e34ab1f9bc1\"\n    },\n    \"rmarkdown\": {\n      \"Package\": \"rmarkdown\",\n      \"Version\": \"2.29\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"bslib\",\n        \"evaluate\",\n        \"fontawesome\",\n        \"htmltools\",\n        \"jquerylib\",\n        \"jsonlite\",\n        \"knitr\",\n        \"methods\",\n        \"tinytex\",\n        \"tools\",\n        \"utils\",\n        \"xfun\",\n        \"yaml\"\n      ],\n      \"Hash\": \"df99277f63d01c34e95e3d2f06a79736\"\n    },\n    \"rprojroot\": {\n      \"Package\": \"rprojroot\",\n      \"Version\": \"2.0.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"4c8415e0ec1e29f3f4f6fc108bef0144\"\n    },\n    \"sass\": {\n      \"Package\": \"sass\",\n      \"Version\": \"0.4.9\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R6\",\n        \"fs\",\n        \"htmltools\",\n        \"rappdirs\",\n        \"rlang\"\n      ],\n      \"Hash\": \"d53dbfddf695303ea4ad66f86e99b95d\"\n    },\n    \"stringi\": {\n      \"Package\": \"stringi\",\n      \"Version\": \"1.8.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"stats\",\n        \"tools\",\n        \"utils\"\n      ],\n      \"Hash\": \"39e1144fd75428983dc3f63aa53dfa91\"\n    },\n    \"stringr\": {\n      \"Package\": \"stringr\",\n      \"Version\": \"1.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"rlang\",\n        \"stringi\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"960e2ae9e09656611e0b8214ad543207\"\n    },\n    \"tibble\": {\n      \"Package\": \"tibble\",\n      \"Version\": \"3.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"fansi\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"methods\",\n        \"pillar\",\n        \"pkgconfig\",\n        \"rlang\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"a84e2cc86d07289b3b6f5069df7a004c\"\n    },\n    \"tidyr\": {\n      \"Package\": \"tidyr\",\n      \"Version\": \"1.3.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"cpp11\",\n        \"dplyr\",\n        \"glue\",\n        \"lifecycle\",\n        \"magrittr\",\n        \"purrr\",\n        \"rlang\",\n        \"stringr\",\n        \"tibble\",\n        \"tidyselect\",\n        \"utils\",\n        \"vctrs\"\n      ],\n      \"Hash\": \"915fb7ce036c22a6a33b5a8adb712eb1\"\n    },\n    \"tidyselect\": {\n      \"Package\": \"tidyselect\",\n      \"Version\": \"1.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"rlang\",\n        \"vctrs\",\n        \"withr\"\n      ],\n      \"Hash\": \"829f27b9c4919c16b593794a6344d6c0\"\n    },\n    \"tinytex\": {\n      \"Package\": \"tinytex\",\n      \"Version\": \"0.54\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"xfun\"\n      ],\n      \"Hash\": \"3ec7e3ddcacc2d34a9046941222bf94d\"\n    },\n    \"utf8\": {\n      \"Package\": \"utf8\",\n      \"Version\": \"1.2.4\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"62b65c52671e6665f803ff02954446e9\"\n    },\n    \"vctrs\": {\n      \"Package\": \"vctrs\",\n      \"Version\": \"0.6.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"glue\",\n        \"lifecycle\",\n        \"rlang\"\n      ],\n      \"Hash\": \"c03fa420630029418f7e6da3667aac4a\"\n    },\n    \"withr\": {\n      \"Package\": \"withr\",\n      \"Version\": \"3.0.2\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"graphics\"\n      ],\n      \"Hash\": \"cc2d62c76458d425210d1eb1478b30b4\"\n    },\n    \"wordcloud2\": {\n      \"Package\": \"wordcloud2\",\n      \"Version\": \"0.2.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"base64enc\",\n        \"grDevices\",\n        \"graphics\",\n        \"htmlwidgets\"\n      ],\n      \"Hash\": \"10274bd096f5c2ad7471ea0eea0c1424\"\n    },\n    \"xfun\": {\n      \"Package\": \"xfun\",\n      \"Version\": \"0.49\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"RSPM\",\n      \"Requirements\": [\n        \"R\",\n        \"grDevices\",\n        \"stats\",\n        \"tools\"\n      ],\n      \"Hash\": \"8687398773806cfff9401a2feca96298\"\n    },\n    \"xml2\": {\n      \"Package\": \"xml2\",\n      \"Version\": \"1.3.6\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\",\n        \"cli\",\n        \"methods\",\n        \"rlang\"\n      ],\n      \"Hash\": \"1d0336142f4cd25d8d23cd3ba7a8fb61\"\n    },\n    \"xmlparsedata\": {\n      \"Package\": \"xmlparsedata\",\n      \"Version\": \"1.0.5\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"45e4bf3c46476896e821fc0a408fb4fc\"\n    },\n    \"yaml\": {\n      \"Package\": \"yaml\",\n      \"Version\": \"2.3.10\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Hash\": \"51dab85c6c98e50a18d7551e9d49f76c\"\n    }\n  }\n}\n\n\n\n\n\nRestoring renv\nIf renv is activated but it recognized that the packages listed in the renv.lock file are not installed (or not all of them), renv will suggest to restore the project library using renv::restore():\n\n\n\nOutput\n\n* This project contains a lockfile, but none of the recorded packages are installed.\n* Use `renv::restore()` to restore the project library.\n\n\n\nrenv::restore()\n\nThis will generate a list of files that will be updated.\n\n\n Click here to view an example output of the renv::restore() command.\n\n\nThe following package(s) will be updated:\n\n# CRAN ===============================\n- R6            [* -&gt; 2.5.1]\n- base64enc     [* -&gt; 0.1-3]\n- bslib         [* -&gt; 0.5.0]\n- cachem        [* -&gt; 1.0.8]\n- cli           [* -&gt; 3.6.1]\n- data.table    [* -&gt; 1.14.8]\n- digest        [* -&gt; 0.6.31]\n- ellipsis      [* -&gt; 0.3.2]\n- evaluate      [* -&gt; 0.21]\n- fastmap       [* -&gt; 1.1.1]\n- fontawesome   [* -&gt; 0.5.1]\n- fs            [* -&gt; 1.6.2]\n- glue          [* -&gt; 1.6.2]\n- here          [* -&gt; 1.0.1]\n- highr         [* -&gt; 0.10]\n- htmltools     [* -&gt; 0.5.5]\n- jquerylib     [* -&gt; 0.1.4]\n- jsonlite      [* -&gt; 1.8.5]\n- knitr         [* -&gt; 1.43]\n- lifecycle     [* -&gt; 1.0.3]\n- magrittr      [* -&gt; 2.0.3]\n- memoise       [* -&gt; 2.0.1]\n- mime          [* -&gt; 0.12]\n- rappdirs      [* -&gt; 0.3.3]\n- rlang         [* -&gt; 1.1.1]\n- rmarkdown     [* -&gt; 2.22]\n- rprojroot     [* -&gt; 2.0.3]\n- sass          [* -&gt; 0.4.6]\n- stringi       [* -&gt; 1.7.12]\n- stringr       [* -&gt; 1.5.0]\n- tinytex       [* -&gt; 0.45]\n- vctrs         [* -&gt; 0.6.3]\n- xfun          [* -&gt; 0.39]\n- yaml          [* -&gt; 2.3.7]\n\nDo you want to proceed? [y/N]: \n\n\nIf you want to proceed with the update, type YY and hit enter.\n\n\nInstalling / removing packages\n\nInstall packages:\n\n\n\nCode\n\n1install.packages(\"PACKAGE_NAME\")\n2renv::install(\"PACKAGE_NAME\")\n\n\n\n1\n\nReplace PACKAGE_NAME with the actual name of the package that you want to install.\n\n2\n\nReplace PACKAGE_NAME with the actual name of the package that you want to install.\n\n\n\n\n\n\nRemove packages:\n\n\n\nCode\n\n1remove.packages(\"PACKAGE_NAME\")\n2renv::remove(\"PACKAGE_NAME\")\n\n\n\n1\n\nReplace PACKAGE_NAME with the actual name of the package that you want to remove.\n\n2\n\nReplace PACKAGE_NAME with the actual name of the package that you want to remove.\n\n\n\n\nCall renv::snapshot() to save the new state of the project library to the renv.lock:\n\n\n\nCode\n\nrenv::snapshot()\n\n\n\n\n\nCommit your changes\nThe renv.lock is checked into version control, so after you updated it, make a new commit:\n\n\n\nCode\n\ngit add renv.lock\n1git commit -m \"Add package PACKAGE_NAME to renv\"\n\n\n\n1\n\nReplace PACKAGE_NAME with the actual name of the package that you installed. Adapt the commit message as needed.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#sec-references",
    "href": "contributing.html#sec-references",
    "title": "Contributing",
    "section": "References",
    "text": "References\n\n “Citations & Footnotes” in the Quarto documentation.\n HTML options for references.\n\n\nCite a reference\nReferences are stored in references.bib.\n\n\n Click here to view the full references.bib file of this project.\n\n\n\n\nreferences.bib\n\n@article{knuth84,\n  author = {Knuth, Donald E.},\n  title = {Literate Programming},\n  year = {1984},\n  issue_date = {May 1984},\n  publisher = {Oxford University Press, Inc.},\n  address = {USA},\n  volume = {27},\n  number = {2},\n  issn = {0010-4620},\n  url = {https://doi.org/10.1093/comjnl/27.2.97},\n  doi = {10.1093/comjnl/27.2.97},\n  journal = {Comput. J.},\n  month = may,\n  pages = {97–111},\n  numpages = {15}\n}\n\n@article{john2012,\n    title = {Measuring the Prevalence of Questionable Research Practices With Incentives for Truth Telling},\n    author = {John, Leslie K. and Loewenstein, George and Prelec, Drazen},\n    year = {2012},\n    month = {04},\n    date = {2012-04-16},\n    journal = {Psychological Science},\n    pages = {524--532},\n    volume = {23},\n    number = {5},\n    doi = {10.1177/0956797611430953},\n    url = {http://dx.doi.org/10.1177/0956797611430953},\n    langid = {en}\n}\n\n@article{nosek2022,\n    title = {Replicability, Robustness, and Reproducibility in Psychological Science},\n    author = {Nosek, Brian A. and Hardwicke, Tom E. and Moshontz, Hannah and Allard, {Aurélien} and Corker, Katherine S. and Dreber, Anna and Fidler, Fiona and Hilgard, Joe and Kline Struhl, Melissa and Nuijten, {Michèle B.} and Rohrer, Julia M. and Romero, Felipe and Scheel, Anne M. and Scherer, Laura D. and {Schönbrodt}, Felix D. and Vazire, Simine},\n    year = {2022},\n    month = {01},\n    date = {2022-01-04},\n    journal = {Annual Review of Psychology},\n    pages = {719--748},\n    volume = {73},\n    number = {1},\n    doi = {10.1146/annurev-psych-020821-114157},\n    url = {http://dx.doi.org/10.1146/annurev-psych-020821-114157},\n    langid = {en}\n}\n\n@misc{bryan2015,\n  author = {Bryan, Jenny},\n  title = {How to name files},\n  year = {2015},\n  month = {May},\n  note = {[Online; accessed 19. Nov. 2020]},\n  url = {https://speakerdeck.com/jennybc/how-to-name-files}\n}\n\n@book{chacon2014,\n    title = {Pro Git},\n    author = {Chacon, Scott and Straub, Ben},\n    year = {2014},\n    date = {2014},\n    publisher = {Apress},\n    doi = {10.1007/978-1-4842-0076-6},\n    url = {http://dx.doi.org/10.1007/978-1-4842-0076-6},\n    note = {License: CC BY-NC}\n}\n@article{hanson2019,\n    title = {Data Sharing and Management Snafu in 3 Short Acts},\n    author = {Hanson, Karen and Surkis, Alisa and Yacobucci, Karen},\n    year = {2019},\n    date = {2019},\n    doi = {10.6084/M9.FIGSHARE.8061722.V1},\n    url = {https://figshare.com/articles/Data_Sharing_and_Management_Snafu_in_3_Short_Acts/8061722/1}\n}\n\n@book{gau2022,\n    title = {Remi-Gau/bids{\\_}workshop: v0.1.1},\n    author = {Gau, Remi},\n    year = {2022},\n    month = {10},\n    date = {2022-10-09},\n    publisher = {Zenodo},\n    doi = {10.5281/ZENODO.7178587},\n    url = {https://zenodo.org/record/7178587}\n}\n\n@article{wilkinson2016,\n    title = {The FAIR Guiding Principles for scientific data management and stewardship},\n    author = {Wilkinson, Mark D. and Dumontier, Michel and Aalbersberg, IJsbrand Jan and Appleton, Gabrielle and Axton, Myles and Baak, Arie and Blomberg, Niklas and Boiten, Jan-Willem and da Silva Santos, Luiz Bonino and Bourne, Philip E. and Bouwman, Jildau and Brookes, Anthony J. and Clark, Tim and Crosas, {Mercè} and Dillo, Ingrid and Dumon, Olivier and Edmunds, Scott and Evelo, Chris T. and Finkers, Richard and Gonzalez-Beltran, Alejandra and Gray, Alasdair J.G. and Groth, Paul and Goble, Carole and Grethe, Jeffrey S. and Heringa, Jaap and {{\\textquoteright}t Hoen}, Peter A.C and Hooft, Rob and Kuhn, Tobias and Kok, Ruben and Kok, Joost and Lusher, Scott J. and Martone, Maryann E. and Mons, Albert and Packer, Abel L. and Persson, Bengt and Rocca-Serra, Philippe and Roos, Marco and van Schaik, Rene and Sansone, Susanna-Assunta and Schultes, Erik and Sengstag, Thierry and Slater, Ted and Strawn, George and Swertz, Morris A. and Thompson, Mark and van der Lei, Johan and van Mulligen, Erik and Velterop, Jan and Waagmeester, Andra and Wittenburg, Peter and Wolstencroft, Katherine and Zhao, Jun and Mons, Barend},\n    year = {2016},\n    month = {03},\n    date = {2016-03-15},\n    journal = {Scientific Data},\n    volume = {3},\n    number = {1},\n    doi = {10.1038/sdata.2016.18},\n    url = {http://dx.doi.org/10.1038/sdata.2016.18},\n    langid = {en}\n}\n\n@article{gorgolewski2016,\n    title = {The brain imaging data structure, a format for organizing and describing outputs of neuroimaging experiments},\n    author = {Gorgolewski, Krzysztof J. and Auer, Tibor and Calhoun, Vince D. and Craddock, R. Cameron and Das, Samir and Duff, Eugene P. and Flandin, Guillaume and Ghosh, Satrajit S. and Glatard, Tristan and Halchenko, Yaroslav O. and Handwerker, Daniel A. and Hanke, Michael and Keator, David and Li, Xiangrui and Michael, Zachary and Maumet, Camille and Nichols, B. Nolan and Nichols, Thomas E. and Pellman, John and Poline, Jean-Baptiste and Rokem, Ariel and Schaefer, Gunnar and Sochat, Vanessa and Triplett, William and Turner, Jessica A. and Varoquaux, {Gaël} and Poldrack, Russell A.},\n    year = {2016},\n    month = {06},\n    date = {2016-06-21},\n    journal = {Scientific Data},\n    volume = {3},\n    number = {1},\n    doi = {10.1038/sdata.2016.44},\n    url = {http://dx.doi.org/10.1038/sdata.2016.44},\n    langid = {en}\n}\n\n@article{broman2018,\n  title = {Data Organization in Spreadsheets},\n  author = {Karl W. Broman and Kara H. Woo},\n  year = {2018},\n  month = {04},\n  date = {2018-04-24},\n  journal = {The American Statistician},\n  volume = {72},\n  number = {1},\n  pages ={2-10},\n  doi = {10.1080/00031305.2017.1375989},\n  url = {https://doi.org/10.1080/00031305.2017.1375989},\n  langid = {en}\n}\n  \n@article{wickham2014,\n  title = {Tidy Data},\n  author = {Hadley Wickham},\n  year = {2014},\n  month = {08},\n  journal = {Jornal of Statistical Software},\n  volume = {59},\n  number = {10},\n  pages = {1-23},\n  doi = {10.18637/jss.v059.i10},\n  url = {https://doi.org/10.18637/jss.v059.i10},\n  langid = {en}\n}\n  \n@Manual{fischetti2023,\n  title = {assertr: Assertive Programming for R Analysis Pipelines},\n  author = {Fischetti, Tony},\n  year = {2023},\n  month = {11},\n  date = {2023-11-23},\n  note = {R package version 3.0.1https://docs.ropensci.org/assertr/ (website)\nhttps://github.com/ropensci/assertr},\n  doi = {10.32614/CRAN.package.assertr},\n  url = {https://docs.ropensci.org/assertr/},\n}\n\n@article{reinhart2010,\n  author = {Reinhart, Carmen M. and Rogoff, Kenneth S.},\n  title = {Growth in a Time of Debt},\n  journal = {American Economic Review},\n  volume = {100},\n  number = {2},\n  year = {2010},\n  month = {May},\n  pages = {573–78},\n  doi = {10.1257/aer.100.2.573},\n  url = {https://www.aeaweb.org/articles?id=10.1257/aer.100.2.573},\n}\n\n@article{herndon2014,\n  title = {Does high public debt consistently stifle economic growth? A critique of Reinhart and Rogoff},\n  author = {Thomas Herndon and Michael Ash and Robert Pollin},\n  year = {2014},\n  month = {03},\n  journal = {Cambridge Journal of Economics},\n  volume = {38},\n  number = {2},\n  pages = {257-279},\n  doi = {10.1093/cje/bet075},\n  url = {https://doi.org/10.1093/cje/bet075}\n}\n\n@article{ziemann2016,\n  title = {Gene name erorrs are widespread in the scientific literature},\n  author = {Ziemann, M. and Eren, Y. and El-Osta, A.},\n  year = {2016},\n  month = {08},\n  date = {2016-08-23},\n  journal = {Genome Biology},\n  volume = {17},\n  doi = {10.1186/s13059-016-1044-7},\n  url = {https://doi.org/10.1186/s13059-016-1044-7}\n}\n\n@article{esteban2019,\n  title = {fMRIPrep: a robust preprocessing pipeline for functional MRI},\n  author = {Oscar Esteban and Christopher J. Markiewicz and Ross W. Blair and Craig A. Moodie and A. Ilkay Isik and Asier Erramuzpe and James D. Kent and Mathias Goncalves and Elizabeth DuPre and Medeleine Snyder and Hiroyuki Oya and Satrajit S. Gish and Jessey Wright and Joke Durnez and Russell A Poldrack and Krzysztof J. Gorgolewski},\n  year = {2019},\n  month = {01},\n  journal = {Nature Methods},\n  volume = {16},\n  pages = {111-116},\n  doi = {10.1038/s41592-018-0235-4},\n  url = {https://doi.org/10.1038/s41592-018-0235-4}\n}\n\n@book{wittkuhn2024,\n  author = {Lennart Wittkuhn and Konrad Pagenstedt},\n  title = {Version Control Book},\n  publisher = {ZFDM Repository},\n  year = {2024},\n  month = {02},\n  doi = {10.25592/uhhfdm.14149},\n  url = {https://doi.org/10.25592/uhhfdm.14149}\n}\n\n@article{barker2022,\n  author = {Barker, Michelle and Chue Hong, Neil P. and Katz, Daniel S. and Lamprecht, Anna-Lena and Martinez-Ortiz, Carlos and Psomopoulos, Fotis and Harrow, Jennifer and Castro, Leyla Jael and Gruenpeter, Morane and Martinez, Paula Andrea and Honeyman, Tom},\n  title = {Introducing the FAIR Principles for research software},\n  year = {2022},\n  journal = {Scientific Data},\n  volume = {9},\n  pages = {622},\n  doi = {10.1038/s41597-022-01710-x},\n  url = {https://doi.org/10.1038/s41597-022-01710-x}\n  \n}\n\n@book{wickham2023,\n    title = {R for Data science: Import, Tidy, Transform, Visualize, and Model Data},\n    author = {Wickham, H. and Çetinkaya-Rundel, M. and Grolemund, G.},\n    year = {2023},\n    data = {2023},\n    publisher = {O'Reilly Media},\n    url = {https://r4ds.hadley.nz},\n    note = {License: CC BY-NC-ND 3.0 US}\n}\n\n@Manual{hester2024,\n    title = {lintr: A 'Linter' for R Code},\n    author = {Jim Hester and Florent Angly and Russ Hyde and Michael Chirico and Kun Ren and Alexander Rosenstock and Indrajeet Patil},\n    year = {2024},\n    note = {R package version 3.1.2},\n    url = {https://CRAN.R-project.org/package=lintr},\n}\n\n@Manual{mueller2020,\n    title = {here: A Simpler Way to Find Your Files},\n    author = {Kirill Müller},\n    year = {2020},\n    note = {R package version 1.0.1, https://github.com/r-lib/here},\n    url = {https://here.r-lib.org/},\n  }\n  \n@misc{rennie2024,\n  author       = {Nicola Rennie},\n  title        = {Writing Better R Code},\n  year         = {2024},\n  url          = {https://nrennie.rbind.io/training-better-r-code/},\n  note         = {Accessed on 2024-11-19}\n}\n\n@article{haslbeck2022,\n  author = {Jonas M. Haslbeck and Oisín Ryan and Donald J. Robinaugh and Lourens J. Waldorp and Denny Borsboom},\n  title = {Modeling Psychopathology: From Data Models to Formal Theories},\n  year = {2022},\n  journal = {Psychological Methods},\n  volume = {27},\n  issue = {6},\n  pages = {930-957},\n  doi = {10.1037/met0000303},\n  url = {https://doi.org/10.1037/met0000303}\n}\n\n@Manual{ushey2024,\n  title = {renv: Project Environments},\n  author = {Kevin Ushey and Hadley Wickham},\n  year = {2024},\n  note = {R package version 1.0.11, https://github.com/rstudio/renv},\n  url = {https://rstudio.github.io/renv/},\n}\n\n@misc{rapp2024,\n  title = {Robust R Code That Will Work Forever With {renv}},\n  url = {https://www.youtube.com/watch?v=Oen9xhEh8PY},\n  journal = {YouTube},\n  author = {Albert Rapp},\n  year = {2024},\n  month = {11},\n}\n\n@book{community2022,\n    title = {The Turing Way: A handbook for reproducible, ethical and collaborative research},\n    author = {{The Turing Way Community}},\n    year = {2022},\n    month = {07},\n    date = {2022-07-27},\n    publisher = {Zenodo},\n    doi = {10.5281/zenodo.3233853},\n    url = {https://zenodo.org/record/3233853},\n    note = {License: \\href{https://creativecommons.org/licenses/by/4.0/}{CC BY 4.0}. Source: \\url{https://github.com/the-turing-way/the-turing-way}. Website: \\url{https://the-turing-way.netlify.app/}}\n}\n\n@misc{wikipedia2025,\n  title = {Modularity},\n  url = {https://en.wikipedia.org/wiki/Modularity},\n  author = {Wikipedia Contributors,},\n  year = {2025},\n  month = {02},\n  day = {10}\n}\n\n@article{artner2021,\n  title = {The Reproducibility of Statistical Results in Psychological Research: An Investigation Using Unpublished Raw Data},\n  author = {Richard Artner and Thomas Verliefde and Sara Steegen and Sara Gomes and Frits Traets and Francis Tuerlinckx and Wolf Vanpaemel},\n  year = {2021},\n  journal = {Psychological Methods},\n  volume = {26},\n  issue = {5},\n  pages = {527-546},\n  doi = {10.1037/met0000365},\n  url = {https://doi.org/10.1037/met0000365}\n}\n\n@article{crüwell2023,\n  title = {What’s in a Badge? A Computational Reproducibility Investigation of the Open Data Badge Policy in One Issue of Psychological Science},\n  author = {Sophia Crüwell and Deborah Apthorp and Bradley J. Baker and Lincoln Colling and Malte Elson and Sandra J. Geiger and Sebastian Lobentanzer and Jean Monéger and Alex Patterson and D. Samuel Schwarzkopf and Mirela Zaneva and Nicholas J. L. Brown},\n  year = {2023},\n  journal = {Psychological Science},\n  volume = {34},\n  issue = {4},\n  pages = {513-522},\n  doi = {10.1177/09567976221140828},\n  url = {https://doi.org/10.1177/09567976221140828}\n}\n\n@article{hardwicke2021,\n  title = {Analytic reproducibility in articles receiving open data badges at the Journal *Psychological Science*: an observational study},\n  author = {Tom E. Hardwicke and Manuel Bohn and Kyle MacDonald and Emily Hembacher and Michéle B. Nuijten and Benjamin N. Peloquin and Benjamin E. deMayo and Bria Long and Erica J. Yoon and Michael C. Frank},\n  year = {2021},\n  journal = {Royal Society Open Science},\n  volume = {8},\n  pages = {201494},\n  doi = {10.1098/rsos.201494},\n  url = {https://doi.org/10.1098/rsos.201494}\n}\n\n@article{obels2020,\n  title = {Analysis of Open Data and Computational Reproducibility in Registered Reports in Psychology},\n  author = {Pepijn Obels and Daniël Lakens and Nicholas A. Coles and Jaroslav Gottfried and Seth A. Green},\n  year = {2020},\n  journal = {Advances in Methods and Practices in Psychological Science},\n  volume = {3},\n  issue = {2},\n  pages = {229-237},\n  doi = {10.1177/2515245920918872},\n  url = {https://doi.org/10.1177/2515245920918872}\n}\n\n@article{lakomy2019,\n  title = {Open Science and the Science-Society Relationship},\n  author = {Martin Lakomý and Renata Hlavová and Hana Machackova},\n  year = {2019},\n  journal = {Society},\n  volume = {56},\n  pages = {246-255},\n  doi = {10.1007/s12115-019-00361-w},\n  url = {https://doi.org/10.1007/s12115-019-00361-w}\n}\n\n@book {cribb2010,\n    author = {Julian Cribb and Tjempaka Sari},\n    title = {Open Science: Sharing Knowledge in the Global Century},\n    pages = {230},\n    year = {2010},\n    doi = {10.1071/9780643097643},\n    publisher = {CSIRO Publishing},\n    isbn = {978-0-643-10183-8},\n    URL = {https://doi.org/10.1071/9780643097643}\n}\n\n@article{opensciencecollaboration2015,\n  title = {Estimating the reproducibility of psychological science},\n  author = {Open Science Collaboration,},\n  year = {2015},\n  month = {august},\n  date = {2015-08-28},\n  journal = {Science},\n  volume = {349},\n  pages = {aac4716},\n  doi = {10.1126/science.aac4716},\n  url = {https://doi.org/10.1126/science.aac4716}\n}\n\n@article{begley2012,\n  title = {Raise standards for preclinical cancer research},\n  author = {C. Glenn Begley and Lee M. Ellis},\n  year = {2012},\n  journal = {nature},\n  volume = {483},\n  pages = {531-533},\n  doi = {10.1038/483531a},\n  url = {https://doi.org/10.1038/483531a}\n}\n\n\n\nUse the citation handle of the .bib-entry that you want to cite. For example use @chacon2014 to cite Chacon and Straub (2014). For details, see the chapter on “Citations & Footnotes” in the Quarto documentation. Add the specific references that you used to the bottom of the document. If the reference consists of multiple chapters and pages, try to specify the exact chapter or page.\n\n\nAdd a new reference\n\nOpen references.qmd.\nSwitch to the Visual Quarto editor.\nMove the cursor into any place in the document.\nClick on Insert and select @ Citation ....\nIf the reference has a DOI:\n\nSelect From DOI.\nPaste the DOI.\nSelect Insert.\n\nThis should add the new reference to references.bib.\nMove the citation key to the correct place in the document.\n\n\n\nAdd license information\nWe want to keep track of license information. If you add a new reference, please add the license information manually.\n\nGo to references.bib and find the reference.\nInside the .bib-entry for the reference add a new field called note that includes the license information.\n\n\n@book{\n  note = {License: CC BY-NC}\n}\n\nFor example, this is the references for Chacon and Straub (2014):\n\n@book{chacon2014,\n    title = {Pro Git},\n    author = {Chacon, Scott and Straub, Ben},\n    year = {2014},\n    date = {2014},\n    publisher = {Apress},\n    doi = {10.1007/978-1-4842-0076-6},\n    url = {http://dx.doi.org/10.1007/978-1-4842-0076-6},\n    note = {License: CC BY-NC}\n}",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#sec-code",
    "href": "contributing.html#sec-code",
    "title": "Contributing",
    "section": "Code",
    "text": "Code\n\n “HTML Code Blocks” in the Quarto documentation\n\n\nAdd code snippets\nAdd code snippets to a Quarto document like this:\n```{zsh}\necho \"Hello World!\"\n```\n\n\n\n\n\n\nDisable code execution in all Quarto documents by default!\n\n\n\nPlace the following code in the YAML header of each Quarto document:\n\n\n\nCode\n\nengine: knitr\nexecute:\n  eval: false\n\n\n\n\n Example: Click here for the YAML header of the current document.\n\n\n\n\ncontributing.qmd\n\n---\nengine: knitr\nexecute: \n  eval: false\n---\n\n\n\n\n\nClick here to learn more.\n\nQuarto enables the inclusion of executable code blocks in Markdown. This empowers users to create reproducible documents and reports, as the code needed for generating the output is embedded within the document and automatically executed during rendering.\nHowever, in this guide, we usually only want to display code but not execute it! We therefore need to disable code execution in the YAML header of each Quarto document.\nThe YAML header in a Quarto document is used to specify important metadata and settings for the document. It is typically placed at the top of the document enclosed between three dashes (---) to separate it from the main content. The YAML header provides instructions to the Quarto rendering engine on how to process and present the document.\n\n\n\n\n\nReference external code\nYou can reference external code. For example, the following code block will:\n\n\n\n\n\n\n\n\n\ndescription\ncode\n\n\n\n\n1\nreference the _quarto.yml file\n#&#124; file: _quarto.yml\n\n\n2\ndisplay the first five lines of code\necho=c(1:5)\n\n\n3\nadd code line numbers\n#&#124; code-line-numbers: true\n\n\n4\nadd a filename to the code block\nfilename=\"_quarto.yml\"\n\n\n\n```{bash, filename=\"_quarto.yml\", echo=c(1:5)}\n#| file: _quarto.yml\n#| code-line-numbers: true\n```\n\n\n Click here for the output of this example.\n\n\n\n\n_quarto.yml\n\nproject:\n  type: book\n  execute-dir: project\n  output-dir: _book\n  preview: \n\n\n\n\n\nAdd code annotations\n\n “Code Annotation” in the Quarto documentation\n\n\nCode blocks and executable code cells in Quarto can include line-based annotations. Line-based annotations provide a way to attach explanation to lines of code much like footnotes.\n\nFor example, this is a code annotation for the git status command:\n```{zsh}\ngit status\n```\n1. `git status` displays the state of the working directory and the staging area.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#sec-images",
    "href": "contributing.html#sec-images",
    "title": "Contributing",
    "section": "Images",
    "text": "Images\n\nBackground\nImages are stored in a NextCloud folder. They are downloaded into the /images folder using the command specified in the Makefile.\n\n\nInstallation\nYou need to install the following packages:\n\nGNU Make\n\n\n macOS Windows Linux\n\n\nGNU Make should already be installed. Try by entering the following command into the Terminal:\n\n\n\nCode\n\nmake --version\n\n\n\n\nFind instructions to install make on Windows here.\n\n\nTBA\n\n\n\n\n\nRetrieve images\nAfter you installed all the required software, run this command:\n\nmake images\n\n\n\n\n\n\n\nWhat’s a Makefile and what does it do?\n\n\n\n\n\n\n\n\nMakefile\n\nIMAGES_URL=https://cloud.uni-hamburg.de/s/pzEHT5DF3PzFdLH/download\nIMAGES_ARCHIVE=repro-book-images.zip\nIMAGES_DIR=images/\n\nall: render\n\n.PHONY: preview\npreview:\n    quarto preview\n\n.PHONY: render\nrender: clean images\n    quarto render\n\n.PHONY: pdf\npdf: clean images\n    quarto render --profile pdf\n    \n.PHONY: deploy\ndeploy: clean images\n    quarto publish gh-pages\n\n.PHONY: images\nimages:\n    curl $(IMAGES_URL) -o $(IMAGES_ARCHIVE)\n    unzip -j -o $(IMAGES_ARCHIVE) -d $(IMAGES_DIR)\n    rm -f $(IMAGES_ARCHIVE)\n\n.PHONY: clean\nclean:\n    rm -rf $(IMAGES_DIR)* _book/\n\n\n\n\n\n\n\nAdd a new image\n\nBecome a collaborator on the UHH Cloud folder.\nGo to the UHH Cloud folder.\nPlace the new image inside the folder. Please use - to separate words in the filename.\nReference the image in the Quarto document relative to the root of the project directory:\n\n\n![](static/NEW-IMAGE.png)\n\n\n\nDownload images in pre-render command\nIt’s also possible to include the make static as a project script in the pre-render script. This would re-execute make static before every render. For the moment, we disabled this option, but it can be enabled in _quarto.yml.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#sec-variables",
    "href": "contributing.html#sec-variables",
    "title": "Contributing",
    "section": "Variables",
    "text": "Variables\n\n “Variables” in the Quarto documentation\n\nQuarto offers a number of ways to include dynamic variables within documents. Dynamic variables are useful for externalizing content that varies depending on context, or as an alternative to repeating a value in multiple places.\n\nCreating a variable\nIn this project, we use a project-level _variables.yml file to define variables. Variables can be either simple values or can include arbitrary Markdown content.\n\n\n\n_variables.yml (excerpt)\n\n  name: \"repro-book\"\n  title: \"The Repro Book\"\n\n\n\n\n Click here to view the full _variables.yml file of this project.\n\n\n\n\n_variables.yml\n\nproject:\n  name: \"repro-book\"\n  title: \"The Repro Book\"\n  subtitle: \"A Guide to Reproducible Research\"\n  description: \"The Repro Book - A Guide to Reproducible Research\"\n  email: \"lennart.wittkuhn@uni-hamburg.de\"\n  mailto: \"mailto:{{&lt; var project.email &gt;}}\"\n  site-url: \"https://lennartwittkuhn.com/repro-book\"\n  repo-host: \"GitHub\"\n  repo-url: \"https://github.com/lnnrtwttkhn/repro-book\"\n  issue-url: \"{{&lt; var project.repo-url &gt;}}/issues\"\n  new-issue-url: \"{{&lt; var project.repo-url &gt;}}/issues/new\"\n  contributors-url: \"{{&lt; var project.repo-url &gt;}}?tab=readme-ov-file#contributors\"\n  images-url: \"https://cloud.uni-hamburg.de/s/pzEHT5DF3PzFdLH\"\n  license-long: \"Creative Commons Attribution 4.0 International ([CC BY 4.0](https://creativecommons.org/licenses/by/4.0/))\"\n  license-short: \"[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/)\"\n  license-badge: \"[![License: CC BY 4.0](https://img.shields.io/badge/License-CC_BY_4.0-lightgrey.svg)](https://creativecommons.org/licenses/by/4.0/)\"\n  duration: \"2024 -- 2025\"\n  website-badge: \"[![Website](https://img.shields.io/website?url=https%3A%2F%2Flennartwittkuhn.com%2Frepro-book%2F)]({{&lt; var project.site-url &gt;}})\"\n  codespell-badge: \"[![Codespell]({{&lt; var project.repo-url &gt;}}/actions/workflows/codespell.yml/badge.svg)]({{&lt; var project.repo-url &gt;}}/actions/workflows/codespell.yml)\"\n  all-contributors-badge: \"[![All Contributors](https://img.shields.io/github/all-contributors/projectOwner/projectName?color=ee8449&style=flat-square)]({{&lt; var project.contributors-url &gt;}})\"\n  rproj: \"repro-book.Rproj\"\n  readme: \"https://github.com/lnnrtwttkhn/repro-book/blob/main/README.md\"\nlinks:\n  uhh: \"https://www.uni-hamburg.de/en.html\"\n  uhh-ddlitlab: \"https://www.isa.uni-hamburg.de/en/ddlitlab.html\"\n  uhh-isa: \"https://www.isa.uni-hamburg.de/\"\n  stiftung-hochschullehre: \"https://stiftung-hochschullehre.de/en/\"\n  funding-info: \"https://stiftung-hochschullehre.de/projekt/ddlitlab/\"\n  plausible: \"https://plausible.io/\"\n  quarto: \"https://quarto.org/\"\n  markdown: \"https://www.markdownguide.org/\"\n  bids: \"https://bids.neuroimaging.io\"\n  psych-ds: \"https://psych-ds.github.io\"\n  git: \"https://git-scm.com/\"\n  github: \"https://github.com/\"\n  version-control-book: \"https://lennartwittkuhn.com/version-control-book/\"\n  gnu-make-windows: \"https://leangaurav.medium.com/how-to-setup-install-gnu-make-on-windows-324480f1da69\"\n  mpib: \"https://www.mpib-berlin.mpg.de/en\"\n\n\n\n\n\nUsing a variable\nThe var shortcode then allows to include references to those variables within any document in this project. For example, to include the link to the Nextcloud folder that stores static contents (images etc.) as a variable in a document, use:\n\n\n\nCode\n\n{{&lt; var project.images-url &gt;}}\n\n\nThis will inject the contents of the variable into the document. In this example, {{&lt; var project.images-url &gt;}} will be displayed as https://cloud.uni-hamburg.de/s/pzEHT5DF3PzFdLH.\nFor more details on variables, read the chapter on Variables in the Quarto documentation.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#sec-icons",
    "href": "contributing.html#sec-icons",
    "title": "Contributing",
    "section": "Fontawesome Icons",
    "text": "Fontawesome Icons\n\n Font Awesome Extension for Quarto\n Free Font Awesome icons\n\nWe use the Font Awesome Extension for Quarto to include Font Awesome icons.\n\nThis extension provides support including free icons provided by Font Awesome. Icons can be used in both HTML (via Font Awesome 6 Free) and PDF (via the fontawesome5 LaTeX package).\n\nThis extension includes support for only free Font Awesome icons.\nTo embed an icon, use the {{&lt; fa &gt;}} shortcode. For example, {{&lt; fa thumbs-up &gt;}} will result in . For details, see the project documentation on GitHub.",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#style-guide",
    "href": "contributing.html#style-guide",
    "title": "Contributing",
    "section": "Style Guide",
    "text": "Style Guide\nWe have compiled a set of guidelines to keep a consistent style across all chapters of the book.\n\nSummary\n\nWrite one sentence per line\nUse consistent language\n\n\n\nWrite one sentence per line\nPlease write each sentence on a new line. Having each sentence on a new line will make no difference to how the text is displayed, there will still be paragraphs, but it will mean that any pull requests will be easier to check; the changes will be on a single line instead of somewhere in a paragraph. Consider the example below.\nToday you are you, that is truer than true. There is no one alive who is youer than you. - Dr Seuss\nA pull request on this correcting it to have a ‘.’ after Dr would show as a change to the whole paragraph. Contrast this with the next example which will be displayed online in the exact same way, but would see a change to a single line.\nToday you are you, that is truer than true.\nThere is no one alive who is youer than you.\n- Dr Seuss",
    "crumbs": [
      "Contributing"
    ]
  },
  {
    "objectID": "contributing.html#sec-acknowledgements",
    "href": "contributing.html#sec-acknowledgements",
    "title": "Contributing",
    "section": "Acknowledgements & Attribution",
    "text": "Acknowledgements & Attribution\n\nThe Quarto documentation (allaire2022?), in particular the chapters on Variables, Quarto Extensions, “Code Annotation” (License: GNU GPL v2)\n(blischak2016?)\nThe Font Awesome Extension for Quarto (License: MIT)\nThe Turing Way Community (2022): Style Guide\n\n\n\n\n\nChacon, Scott, and Ben Straub. 2014. Pro Git. Apress. https://doi.org/10.1007/978-1-4842-0076-6.\n\n\nGorgolewski, Krzysztof J., Tibor Auer, Vince D. Calhoun, R. Cameron Craddock, Samir Das, Eugene P. Duff, Guillaume Flandin, et al. 2016. “The Brain Imaging Data Structure, a Format for Organizing and Describing Outputs of Neuroimaging Experiments.” Scientific Data 3 (1). https://doi.org/10.1038/sdata.2016.44.\n\n\nThe Turing Way Community. 2022. The Turing Way: A Handbook for Reproducible, Ethical and Collaborative Research. Zenodo. https://doi.org/10.5281/zenodo.3233853.",
    "crumbs": [
      "Contributing"
    ]
  }
]